head	1.24;
access;
symbols;
locks
	anoop:1.24; strict;
comment	@# @;


1.24
date	2001.08.22.21.31.29;	author anoop;	state Exp;
branches;
next	1.23;

1.23
date	2001.08.22.21.30.19;	author anoop;	state Exp;
branches;
next	1.22;

1.22
date	2001.08.22.21.29.27;	author anoop;	state Exp;
branches;
next	1.21;

1.21
date	2001.08.22.20.50.25;	author anoop;	state Exp;
branches;
next	1.20;

1.20
date	2001.08.03.17.49.01;	author anoop;	state Exp;
branches;
next	1.19;

1.19
date	2001.06.27.21.37.37;	author anoop;	state Exp;
branches;
next	1.18;

1.18
date	2001.06.24.14.30.28;	author anoop;	state Exp;
branches;
next	1.17;

1.17
date	2001.02.22.14.51.12;	author anoop;	state Exp;
branches;
next	1.16;

1.16
date	2001.02.09.22.46.06;	author anoop;	state Exp;
branches;
next	1.15;

1.15
date	2001.02.09.02.55.59;	author anoop;	state Exp;
branches;
next	1.14;

1.14
date	2001.02.03.23.54.54;	author anoop;	state Exp;
branches;
next	1.13;

1.13
date	2001.02.03.23.15.14;	author anoop;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.03.23.12.33;	author anoop;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.31.18.14.39;	author anoop;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.27.22.54.58;	author anoop;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.05.04.12.10;	author anoop;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.30.19.25.53;	author anoop;	state Exp;
branches;
next	1.7;

1.7
date	2000.11.06.00.38.36;	author anoop;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.05.01.22.56;	author anoop;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.05.00.00.13;	author anoop;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.04.22.53.44;	author anoop;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.02.02.26.01;	author anoop;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.18.04.30.43;	author anoop;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.17.05.21.53;	author anoop;	state Exp;
branches;
next	;


desc
@top level Makefile, used for installation and distribution makes
@


1.24
log
@removed removal of treebank data/src files
@
text
@
## Top level Makefile
##
## Copyright (c) 2000 Anoop Sarkar
##
## This source code is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License 
## as published by the Free Software Foundation; either version 2 of 
## the License, or (at your option) any later version. 
## 
## The file COPYING in the current directory has a copy of the GPL. 
##
## This code comes WITHOUT ANY WARRANTY; without even the implied
## warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
## See the GNU General Public License for more details.
##

RCSID='$Id: Makefile,v 1.23 2001/08/22 21:30:19 anoop Exp anoop $'
PACKAGE=lem
VERSION=0.14.0
PROC=`uname -m`
LEMHOME=$(PWD)
FTPDIR=/ftp/pub/xtag/lem
DATE=`date`

## Needed for installation of binaries
## Edit the following locations to reflect your system
WISH=/usr/local/bin/wish8.0
PERL=/usr/bin/perl
# WISH=/usr/bin/wish
# PERL=/usr/local/bin/perl

JAVACOMP=/pkg/j/jdk1.3/bin/javac
JAVABIN=/pkg/j/jdk1.3/bin/java
# JAVACOMP=/usr/local/jdk1.3.1/bin/javac
# JAVABIN=/usr/local/jdk1.3.1/bin/java

# For Redhat Linux 7.x or 6.x JDK Version 1.2.2 is recommended
# jdk1.3.1 can be installed on Redhat 7.1 if you have 
# an updated libsafe (v2.0 or greater)

# JAVACOMP=/usr/local/jdk1.2.2/bin/javac
# JAVABIN=/usr/local/jdk1.2.2/bin/java

TAGGER=/mnt/unagi/nldb/adwait/dist/tagger/bin.SunOS/tagger \
	/mnt/unagi/nldb/adwait/dist/0-18.project

## If installing binaries stop here.
## The following values are only needed for source installation
## Edit the following locations to reflect your system
## Check that the value for CPPCOMP is g++ is from egcs-1.1b or later

BERKELEY_DB=/mnt/linc/xtag/pkg/BerkeleyDB
TAR=/usr/local/bin/gnu-tar
CPPCOMP=/pkg/egcs-1.1b/bin/g++
CCOMP=gcc

## Use the following values for a typical Linux installation.
## Note that the location for BERKELEY_DB is the default installation.
## If you run Redhat 6.0 or later, then you can set the value of
## BERKELEY_DB to /usr and avoid installing the BerkeleyDB package.

# BERKELEY_DB=/usr/local/BerkeleyDB
# TAR=/bin/tar
# CPPCOMP=g++
# CCOMP=gcc

## Optional settings, usually not needed even for source compilation
PERLYACC=/mnt/linc/xtag/pkg/perl-byacc1.8.2/perlyacc

## Common utils
RM=/bin/rm -f
RMDIR=/bin/rm -rf

## Should not need any editing below this point

install: begin-mesg install-scripts-makefiles install-scripts install-xtag-grammar end-mesg
	@@echo "install done."

all: begin-mesg makefiles compile-src install-scripts compile-syntax end-mesg
	@@echo "all done."

begin-mesg:
	@@echo "installing at location:" $(LEMHOME)

end-mesg:
	@@echo ""
	@@echo "install complete"

makefiles: compile-src-makefiles install-scripts-makefiles

compile-src-makefiles:
	cd ./src/parser; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@BERKELEY_DB\@@|$(BERKELEY_DB)|g" | \
	  perl -pe "s|\@@CCOMP\@@|$(CCOMP)|g" > Makefile
	cd ./src/featchecker; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@CPPCOMP\@@|$(CPPCOMP)|g" > Makefile
	cd ./src/indent; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile
	@@echo "done creating source makefiles"

compile-src:
	cd ./src/parser; \
	  make; make install
	cd ./src/featchecker; \
	  make; make install
	cd ./src/indent; \
	  make; make install
	@@echo "done compiling source"

install-scripts-makefiles:
	cd ./src/bungee; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" | \
	  perl -pe "s|\@@WISH\@@|$(WISH)|g" > Makefile
	cd ./src/db; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" | \
	  perl -pe "s|\@@BERKELEY_DB\@@|$(BERKELEY_DB)|g" > Makefile
	cd ./src/derivations; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile
	cd ./src/dict; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile
	cd ./src/filter; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@TAGGER\@@|$(TAGGER)|g" | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile
	cd ./src/grammar; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" | \
	  perl -pe "s|\@@PERLYACC\@@|$(PERLYACC)|g" > Makefile
	cd ./src/user; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile
	cd ./src/browser; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@JAVACOMP\@@|$(JAVACOMP)|g" | \
	  perl -pe "s|\@@JAVABIN\@@|$(JAVABIN)|g" > Makefile
	cd ./src/server; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@JAVACOMP\@@|$(JAVACOMP)|g" | \
	  perl -pe "s|\@@JAVABIN\@@|$(JAVABIN)|g" > Makefile
	@@echo "done creating makefiles for installation"

install-scripts:
	cd ./src/bungee; \
	  make install
	cd ./src/db; \
	  make install
	cd ./src/derivations; \
	  make install
	cd ./src/dict; \
	  make install
	cd ./src/filter; \
	  make install
	cd ./src/grammar; \
	  make install
	cd ./src/user; \
	  make install
	cd ./src/browser; \
	  make install
	cd ./src/server; \
	  make install
	@@echo "done installing files"

install-xtag-grammar:
	cd ./data/english; env "LEMHOME=$(LEMHOME)" \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" english.grammar.in > english.grammar

compile-syntax: install-xtag-grammar ./data/english/syntax.db

./data/english/syntax.db: ./data/english/syntax.flat
	@@echo "creating syntax database. might take a while..."
	cd ./data/english; \
	  env "LEMHOME=$(LEMHOME)" $(LEMHOME)/bin/syn_db_create syntax.flat
	@@echo "finished creating database"

all-treebank: begin-mesg install-treebank-scripts compile-treebank-syntax end-mesg
	@@echo "install done."

install-treebank: begin-mesg install-treebank-scripts install-treebank-grammar end-mesg
	@@echo "install done."

install-treebank-scripts:
	cd ./src/treebank; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
	  make install

install-treebank-grammar:
	cd ./data/treebank; env "LEMHOME=$(LEMHOME)" \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" treebank.grammar.in > treebank.grammar

compile-treebank-syntax: install-treebank-grammar
	@@echo "creating syntax database. might take a while..."
	cd ./data/treebank; \
	  env "LEMHOME=$(LEMHOME)" $(LEMHOME)/bin/syn_db_create syntax.flat
	@@echo "finished creating database"

distrib: clean exclude-standard-files create-tarball

distrib-treebank: clean exclude-standard-files create-tarball

exclude-standard-files:
	find ./bin/ -print > /tmp/exclude_files
	find . -name "*.bin" -print >> /tmp/exclude_files
	find . -name "*.db" -print >> /tmp/exclude_files
	find . -name "*.class" -print >> /tmp/exclude_files
	find . -name "*.o" -print >> /tmp/exclude_files
	find . -name "*.a" -print >> /tmp/exclude_files
	find . -name "*.so" -print >> /tmp/exclude_files
	find . -name "RCS" -print >> /tmp/exclude_files
	find . -name "CVS" -print >> /tmp/exclude_files

exclude-treebank-files:
	find ./data/treebank/* -print >> /tmp/exclude_files
	find ./src/treebank/* -print >> /tmp/exclude_files

create-tarball:
	perl -pe "s/\@@PACKAGE\@@/$(PACKAGE)/g" README.in | \
	  perl -pe "s/\@@VERSION\@@/$(VERSION)/g" | \
	  perl -pe "s/\@@DATE\@@/$(DATE)/g" > README
	$(TAR) -X /tmp/exclude_files -zcf /tmp/$(PACKAGE)-$(VERSION).tgz ./*
	mkdir $(PACKAGE)-$(VERSION)
	$(TAR) -C $(PACKAGE)-$(VERSION) -zxf /tmp/$(PACKAGE)-$(VERSION).tgz
	$(TAR) -zcf $(PACKAGE)-$(VERSION).tgz $(PACKAGE)-$(VERSION)/*
	$(RM) /tmp/$(PACKAGE)-$(VERSION).tgz
	$(RM) /tmp/exclude_files

bindistrib: 
	find ./src/parser/* -print > /tmp/exclude_files
	find ./src/featchecker/* -print >> /tmp/exclude_files
	find ./src/indent/* -print >> /tmp/exclude_files
	find . -name "INSTALL.src" -print >> /tmp/exclude_files
	$(TAR) -X /tmp/exclude_files -zcf /tmp/$(PACKAGE)-$(VERSION).$(PROC).tgz ./*
	mkdir $(PACKAGE)-$(VERSION).$(PROC)
	$(TAR) -C $(PACKAGE)-$(VERSION).$(PROC) -zxf /tmp/$(PACKAGE)-$(VERSION).$(PROC).tgz
	$(TAR) -zcf $(PACKAGE)-$(VERSION).$(PROC).tgz $(PACKAGE)-$(VERSION).$(PROC)/*
	$(RM) /tmp/$(PACKAGE)-$(VERSION).$(PROC).tgz
	$(RM) /tmp/exclude_files

clean: makefiles distclean dataclean
	$(RM) README
	$(RM) $(PACKAGE)-$(VERSION).tgz
	$(RMDIR) $(PACKAGE)-$(VERSION)

distclean:
	cd src/browser; make clean; $(RM) Makefile
	cd src/server; make clean; $(RM) Makefile
	cd src/bungee; make clean; $(RM) Makefile
	cd src/db; make clean; $(RM) Makefile
	cd src/derivations; make clean; $(RM) Makefile
	cd src/dict; make clean; $(RM) Makefile
	cd src/featchecker; make clean; $(RM) Makefile
	cd src/filter; make clean; $(RM) Makefile
	cd src/grammar; make clean; $(RM) Makefile
	cd src/indent; make clean; $(RM) Makefile
	cd src/parser; make clean; $(RM) Makefile
	cd src/user; make clean; $(RM) Makefile
	$(RM) ./bin/*

dataclean:
	find . -name "*~" -print -exec $(RM) {} \;
	find . -name "core" -print -exec $(RM) {} \;
	find . -name ".Zap*" -print -exec $(RM) {} \;
	$(RM) ./data/english/syntax.db
	$(RM) ./data/treebank/syntax.db

remote-distrib-sh:
	perl -pe "s/\@@PACKAGE\@@/$(PACKAGE)/g" $(LEMHOME)/utils/remote-distrib.in | \
	  perl -pe "s/\@@VERSION\@@/$(VERSION)/g" > $(LEMHOME)/utils/remote-distrib.sh
	chmod 755 $(LEMHOME)/utils/remote-distrib.sh

local-distrib: distrib remote-distrib-sh
	/bin/cp -f $(PACKAGE)-$(VERSION).tgz $(FTPDIR)
	cd $(PACKAGE)-$(VERSION); \
	  cp README $(FTPDIR)/README-$(VERSION); \
	  make all; \
	  make bindistrib; \
	  /bin/cp -f $(PACKAGE)-$(VERSION).$(PROC).tgz $(FTPDIR)
	make clean

@


1.23
log
@added creation of makefiles to clean
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.22 2001/08/22 21:29:27 anoop Exp anoop $'
d203 1
a203 1
distrib: clean exclude-standard-files exclude-treebank-files create-tarball
@


1.22
log
@separated creation of makefiles
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.21 2001/08/22 20:50:25 anoop Exp anoop $'
d245 1
a245 1
clean: distclean dataclean
@


1.21
log
@added src/server
ver 0.14.0
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.20 2001/08/03 17:49:01 anoop Exp anoop $'
d77 1
a77 1
install: begin-mesg install-scripts install-xtag-grammar end-mesg
d80 1
a80 1
all: begin-mesg compile-src install-scripts compile-syntax end-mesg
d90 3
a92 1
compile-src:
d96 1
a96 2
	  perl -pe "s|\@@CCOMP\@@|$(CCOMP)|g" > Makefile; \
	  make; make install
d99 7
a105 1
	  perl -pe "s|\@@CPPCOMP\@@|$(CPPCOMP)|g" > Makefile; \
d107 2
a109 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d113 1
a113 1
install-scripts:
d117 1
a117 2
	  perl -pe "s|\@@WISH\@@|$(WISH)|g" > Makefile; \
	  make install
d121 1
a121 2
	  perl -pe "s|\@@BERKELEY_DB\@@|$(BERKELEY_DB)|g" > Makefile; \
	  make install
d124 1
a124 2
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile; \
	  make install
d127 1
a127 2
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile; \
	  make install
d131 1
a131 2
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile; \
	  make install
d135 1
a135 2
	  perl -pe "s|\@@PERLYACC\@@|$(PERLYACC)|g" > Makefile; \
	  make install
d138 1
a138 2
	  perl -pe "s|\@@PERL\@@|$(PERL)|g" > Makefile; \
	  make install
d142 1
a142 2
	  perl -pe "s|\@@JAVABIN\@@|$(JAVABIN)|g" > Makefile; \
	  make install
d146 5
a150 1
	  perl -pe "s|\@@JAVABIN\@@|$(JAVABIN)|g" > Makefile; \
d152 16
d252 1
a261 1
	cd src/treebank; make clean; $(RM) Makefile
@


1.20
log
@version 0.13.5
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.19 2001/06/27 21:37:37 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.5
d33 4
a36 2
JAVACOMP=/xtag2/pkg/jdk-1.3.1/bin/javac
JAVABIN=/xtag2/pkg/jdk-1.3.1/bin/java
d38 4
a41 1
# For Redhat Linux 7.x or 6.x JDK Version 1.2.2 from the Sun website is recommended
d141 5
@


1.19
log
@moved browser compilation to install-scripts
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.18 2001/06/24 14:30:28 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.4
@


1.18
log
@v0.13.3
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.17 2001/02/22 14:51:12 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.3
d33 7
a51 2
JAVACOMP=/pkg/j/jdk1.3/bin/javac
JAVABIN=/pkg/j/jdk1.3/bin/java
a61 2
# JAVACOMP=/usr/local/jdk1.2.2/bin/javac
# JAVABIN=/usr/local/jdk1.2.2/bin/java
a97 5
	cd ./src/browser; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in | \
	  perl -pe "s|\@@JAVACOMP\@@|$(JAVACOMP)|g" | \
	  perl -pe "s|\@@JAVABIN\@@|$(JAVABIN)|g" > Makefile; \
	  make install
d133 5
@


1.17
log
@0.13.2
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.16 2001/02/09 22:46:06 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.2
d187 1
@


1.16
log
@ver 0.13.1
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.15 2001/02/09 02:55:59 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.1
@


1.15
log
@ver 0.13.0
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.14 2001/02/03 23:54:54 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.13.0
d217 5
a221 1
	cd src/parser; make clean; $(RM) Makefile
d223 2
d226 3
@


1.14
log
@added browser to src compile
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.13 2001/02/03 23:15:14 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.12.2
@


1.13
log
@fixed FTPDIR usage
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.12 2001/02/03 23:12:33 anoop Exp anoop $'
a94 3
	@@echo "done compiling source"

browser:
d100 1
@


1.12
log
@added src/browser to installation tree
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.11 2001/01/31 18:14:39 anoop Exp anoop $'
d242 1
a242 1
	  /bin/cp -f $(PACKAGE)-$(VERSION).$(PROC).tgz /ftp/pub/xtag/lem
@


1.11
log
@removed contrib directory from tree
added linc-distrib and kurita-distrib to automate distrib tasks
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.10 2001/01/27 22:54:58 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.12.1
d37 1
a37 1
## The following values are needed for source installation
d45 2
d57 2
d97 7
a204 1
	find ./src/browser/* -print >> /tmp/exclude_files
d231 4
a234 4
kurita-distrib-sh:
	perl -pe "s/\@@PACKAGE\@@/$(PACKAGE)/g" $(LEMHOME)/utils/kurita-distrib.in | \
	  perl -pe "s/\@@VERSION\@@/$(VERSION)/g" > $(LEMHOME)/utils/kurita-distrib.sh
	chmod 755 $(LEMHOME)/utils/kurita-distrib.sh
d236 1
a236 1
linc-distrib: distrib kurita-distrib-sh
@


1.10
log
@added filtering based on an external POS Tagger. The location
of the tagger is now included and has to be user-defined for
each installation
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.9 2000/12/05 04:12:10 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.12.0
d23 1
d174 1
a174 3
	find . -name "BerkeleyDB" -type d -print >> /tmp/exclude_files
	find ./contrib/* -print >> /tmp/exclude_files
	find ./utils/* -print >> /tmp/exclude_files
d204 3
d220 15
@


1.9
log
@eliminated need to re-create syntax.db after "make distclean"
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.8 2000/11/30 19:25:53 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.11.0
d32 3
d113 1
@


1.8
log
@location of perl binary is now user-defined
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.7 2000/11/06 00:38:36 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.10.3
d127 3
a129 1
compile-syntax: install-xtag-grammar
@


1.7
log
@removed subdir corpus
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.6 2000/11/05 01:22:56 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.9.2
d28 1
d30 1
a30 1
PERL=/usr/bin/perl
a31 4
## If PERL is not in /usr/bin/perl then you're in trouble. You will
## have to edit all the perl scripts in this distribution to point to
## your perl binary.

d92 1
d97 1
d101 2
a102 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d105 2
a106 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d109 2
a110 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d114 1
d118 2
a119 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
@


1.6
log
@combined xtag and treebank distrib
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.5 2000/11/05 00:00:13 anoop Exp anoop $'
d20 1
a20 1
VERSION=0.9.1
d129 3
a140 3
	cd ./lib/treebank; \
	  cp toplabels.in $(LEMHOME)/data/treebank/toplabels.dat; \
	  cp syndefault.in $(LEMHOME)/data/treebank/syndefault.dat
a185 1
	find ./src/corpus/* -print >> /tmp/exclude_files
@


1.5
log
@added treebank distrib
@
text
@d18 1
a18 1
RCSID='$Id: Makefile,v 1.4 2000/11/04 22:53:44 anoop Exp anoop $'
d150 4
d170 1
a170 1
distrib: clean exclude-standard-files exclude-treebank-files
a180 11
distrib-treebank: clean exclude-standard-files
	perl -pe "s/\@@PACKAGE\@@/$(PACKAGE)/g" README.in | \
	  perl -pe "s/\@@VERSION\@@/$(VERSION)/g" | \
	  perl -pe "s/\@@DATE\@@/$(DATE)/g" > README
	$(TAR) -X /tmp/exclude_files -zcf /tmp/$(PACKAGE)-$(VERSION).tgz ./*
	mkdir $(PACKAGE)-$(VERSION)
	$(TAR) -C $(PACKAGE)-$(VERSION) -zxf /tmp/$(PACKAGE)-$(VERSION).tgz
	$(TAR) -zcf $(PACKAGE)-$(VERSION).tgz $(PACKAGE)-$(VERSION)/*
	$(RM) /tmp/$(PACKAGE)-$(VERSION).tgz
	$(RM) /tmp/exclude_files

d208 1
@


1.4
log
@added install for treebank grammar
@
text
@d18 1
a18 1
RCSID='$Id$'
d20 1
a20 1
VERSION=0.8.2
d123 14
d138 3
d144 1
a144 1
compile-syntax: install-xtag-grammar
d146 1
a146 1
	cd ./data/english; \
d150 1
a150 4
distrib: clean
	perl -pe "s/\@@PACKAGE\@@/$(PACKAGE)/g" README.in | \
	  perl -pe "s/\@@VERSION\@@/$(VERSION)/g" | \
	  perl -pe "s/\@@DATE\@@/$(DATE)/g" > README
d162 2
d165 5
d172 11
@


1.3
log
@improved distrib and install
@
text
@d18 1
d20 1
a20 1
VERSION=0.7.1
d56 1
a56 1
PERLYACC=$(LEMHOME)/bin/perlyacc
d64 1
a64 1
install: begin-mesg install-scripts install-grammar end-mesg
d119 1
a119 1
install-grammar:
d123 5
a127 1
compile-syntax: install-grammar
d170 9
a178 4
clean:
	cd src/parser; make clean
	cd src/featchecker; make clean
	cd src/indent; make clean
a182 2
	$(RM) ./bin/*

@


1.2
log
@combined src and bin install and cleaned it up
@
text
@d19 1
a19 1
VERSION=0.6.2
d77 1
a77 1
	cd $(LEMHOME); cd ./src/parser; \
d81 2
a82 4
	  make clean; make; make clean; \
	  env "SRC_DEFS=-DUSE_BERKELEY_DB -DUSE_NBEST_INPUT" make -e nbest_parser.bin; \
	  make install
	cd $(LEMHOME); cd ./src/featchecker; \
d86 1
a86 1
	cd $(LEMHOME); cd ./src/indent; \
a88 1
	cd $(LEMHOME)
d92 1
a92 1
	cd $(LEMHOME); cd ./src/bungee; \
d96 1
a96 1
	cd $(LEMHOME); cd ./src/db; \
d100 1
a100 1
	cd $(LEMHOME); cd ./src/derivations; \
d103 1
a103 1
	cd $(LEMHOME); cd ./src/dict; \
d106 1
a106 1
	cd $(LEMHOME); cd ./src/filter; \
d109 1
a109 1
	cd $(LEMHOME); cd ./src/grammar; \
d113 1
a113 1
	cd $(LEMHOME); cd ./src/user; \
a115 1
	cd $(LEMHOME)
d120 1
a120 2
	  perl -pe "s|@@LEMHOME@@|$(LEMHOME)|g" english.grammar.in > english.grammar
	cd $(LEMHOME)
a125 1
	cd $(LEMHOME)
d128 1
a128 1
distrib:
d132 1
a132 1
	find ./bin/* -print > /tmp/exclude_files
d143 1
d164 10
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
VERSION=0.6.1
d34 2
a35 2
## If installing binaries stop here
## Following values are needed for source installation
d37 1
d41 8
d51 2
d54 4
a59 2
MV=/bin/mv -f
LN=/bin/ln -s
d63 10
a72 7
install:
	@@echo "using LEMHOME:" $(LEMHOME)
	$(PERL) ./conf/install_setup.pl
	$(RM) $(LEMHOME)/bin/wish
	$(LN) $(WISH) $(LEMHOME)/bin/wish
	cd ./data/english; env "LEMHOME=$(LEMHOME)" \
	  perl -pe "s|__LEMHOME__|$(LEMHOME)|g" english.grammar.in > english.grammar
a74 1
	@@echo "remember to source setup_paths before running the parser"
d76 1
a76 8
all:
	@@echo "using LEMHOME:" $(LEMHOME)
	$(PERL) ./conf/install_setup.pl
	$(RM) $(LEMHOME)/bin/wish
	$(RM) $(LEMHOME)/BerkeleyDB
	$(LN) $(WISH) $(LEMHOME)/bin/wish
	$(LN) $(BERKELEY_DB) $(LEMHOME)/BerkeleyDB
	@@echo "starting source compilation"
d78 3
a80 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d84 11
d96 2
a97 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
d100 2
a101 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
a108 3
	cd $(LEMHOME); cd ./src/featchecker; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
	  make; make install
d113 2
a114 1
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
a115 3
	cd $(LEMHOME); cd ./src/indent; \
	  perl -pe "s|\@@LEMHOME\@@|$(LEMHOME)|g" Makefile.in > Makefile; \
	  make; make install
d120 9
a128 2
	@@echo "done compiling source"
	@@echo "creating database. might take a while..."
a129 1
	  perl -pe "s|__LEMHOME__|$(LEMHOME)|g" english.grammar.in > english.grammar; \
a132 3
	@@echo ""
	@@echo "install complete"
	@@echo "remember to source setup_paths before running the parser"
d157 5
a161 1
	find ./src/* -print > /tmp/exclude_files
@
