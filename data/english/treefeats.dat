#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#VP.b:<compar> = -#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.t:<assign-comp> = inf_nil/ind_nil##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = imp#NP_1.t:<wh> = -#NP_1.t:<agr pers> = 2#NP_1.t:<agr 3rdsing> = -#NP_1.t:<agr num> = plur/sing#NP_1.t:<case> = nom#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V:<punct struct> = nil#VP.t:<mode> = base
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_2:<wh> = PP_2.b:<wh>#S_r.b:<agr> = VP.t:<agr>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<assign-case> = NP_2.t:<case>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
###S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.b:<compar> = -##S_1.t:<assign-comp> = inf_nil#NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<inv> = -#S_r.b:<extracted> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_2.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#Ad_r.b:<conj> = Ad_f.t:<conj>#Ad_r.b:<super> = Ad.t:<super>#Ad_r.b:<equiv> = Ad.t:<equiv>#Ad_r.b:<compar> = Ad.t:<compar>#Ad_r.b:<assign-comp> = Ad_f.t:<assign-comp>#Ad.t:<compar> = +#Ad_f.t:<compar> = -#Ad_f.t:<super> = -
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<nocomp-mode> = inf/ger#S_r.t:<conj> = nil#S_r.t:<inv> = -#S_r.t:<mode> = inf/ger/ind#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
###NP.b:<neg>=+#NP.b:<wh> = NP_2.t:<wh>#NP.b:<case> = NP_2.t:<case>#NP.b:<case> = nom/acc#NP.b:<wh> = NP_0.t:<wh>#NP.b:<case> = NP_0.t:<case>#NP_0.b:<case> = NP_1.t:<case>#NP_0.b:<wh> = NP_1.t:<wh>#Conj:<conj> = NP.b:<conj>
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0:<trace>#NP_w.t:<case> = NP_0:<case>#NP_w.t:<agr> = NP_0:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<mode> = inf/ind#S_0:<comp> = that/whether/for/nil#S_0:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#A.t:<compar> = AP_1.b:<compar>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#VP_1.b:<compar> = -#VP.b:<mode> = VP_1.t:<mode>#VP_1.t:<mode> = VP_1.b:<mode>#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#NP_1.t:<case> = nom/acc
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<compar> = N_f.t:<compar>#N_f.t:<compar> = -#N_f.t:<case> = nom/acc##VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<mode> = VP.t:<mode>#V.t:<mode> = ger#V:<punct struct> = nil
##VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#NP.b:<case> = N.t:<case>#NP.b:<wh> = N.t:<wh>#NP.b:<pron> = N.t:<pron>#NP.b:<conj> = N.t:<conj>#N.t:<agr> = NP.b:<agr>#N.t:<const> = NP.b:<const>#N.t:<definite> = NP.b:<definite>#N.t:<gen> = NP.b:<gen>#N.t:<decreas> = NP.b:<decreas>#N.t:<quan> = NP.b:<quan>#N.t:<card> = NP.b:<card>#N.t:<compar> = NP.b:<compar>#N.t:<equiv> = NP.b:<equiv>#VP.t:<compar> = -
######S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_1.t:<case> = acc#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP_1:<agr> = NP.t:<agr>#NP_1:<case> = NP.t:<case>#NP.t:<wh> = +#NP_1:<trace> = NP.t:<trace>#NP_1:<wh> = NP.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ppart/ger/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>

#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.t:<mode> = ind#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP.t:<agr> = NP_0:<agr>#NP.t:<case> = NP_0:<case>#NP.t:<trace> = NP_0:<trace>#NP.t:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#NP:<wh> = PP_0.b:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##A.t:<punct struct> = nil#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.t:<case> = acc/nom#NP_f.t:<punct struct> = nil#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<punct contains> = Punct.t:<punct contains> 
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#P_0.b:<assign-case> = acc#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#PP_0.b:<assign-case> = P_0.t:<assign-case>##NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#PP.t:<trace> = PP_0.t:<trace>#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_1.b:<trace>#PP_w.t:<case> = PP_1.b:<case>#PP_w.t:<agr> = PP_1.b:<agr>#PP_w.b:<assign-case> = P.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<assign-case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf/ger/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#AP_1.t:<wh> = S_q.b:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#AP.t:<trace> = AP_1.t:<trace>#AP.t:<wh> = AP_1.t:<wh>#AP_1.b:<wh> = A.t:<wh>#AP_1.b:<equiv> = A.t:<equiv>#AP_1.b:<compar> = A.t:<compar>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<compar> = -
#NP_1:<case> = acc#NP_2:<wh> = NP_r.b:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#NP_2:<case> = acc/gen
####S.t:<wh> = -#S.t:<extracted> = -#S.t:<inv> = -#S.t:<punct struct> = nil#S_r.b:<comp> = S_f:<comp>#S_r.b:<conj> = S_f:<conj>#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_f:<mode> = ind/imp#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh>#S_r.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#####A.t:<wh> = -#A_r.b:<assign-comp> = A.t:<assign-comp>#A_r.b:<conj> = A.t:<conj>#A_r.b:<compar> = A.t:<compar>#A_r.b:<equiv> = A.t:<equiv>#A_r.b:<super> = A.t:<super>
###S.t:<comp> = nil#S.t:<wh> = S_r.b:<wh>#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S_r.b:<extracted> = S.t:<extracted>#S_r.b:<conj> = S.t:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc
##NP.t:<pron> = -#NP.t:<case> = nom/acc#S.t:<punct struct> = nil#S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = and/or/but/nil#S.t:<extracted> = S_r.b:<extracted>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<wh> = S_r.b:<wh>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S.t:<mode> = ind/imp#Punct.t:<punct struct> = comma#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1.t:<case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####Conj:<conj> = PP.b:<conj>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<comp> = nil#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#PP_w:<wh> = +#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<case> = acc/gen
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -##NP_r.b:<gerund> = +#NP_0:<case> = acc/gen

#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_2.t:<case>#NP_2:<agr> = S_r.b:<agr>#NP_2:<wh> = S_r.b:<wh>#NP_2:<wh> = -#NP_2.t:<case> = none#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#AdvP_1.b:<wh> = NP_1:<wh>#S_r.b:<control> = NP_0.t:<control>#S_q.b:<wh> = NP_1:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#V.t:<punct struct> = nil#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>
##NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP.b:<assign-case> = N.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP.b:<wh> = N.t:<wh>#NP.b:<pron> = N.t:<pron>#NP.b:<conj> = N.t:<conj>#N.t:<agr> = NP.b:<agr>#N.t:<const> = NP.b:<const>#N.t:<definite> = NP.b:<definite>#N.t:<gen> = NP.b:<gen>#N.t:<decreas> = NP.b:<decreas>#N.t:<quan> = NP.b:<quan>#N.t:<card> = NP.b:<card>#NP_r.b:<rel-clause> = NP_f.t:<rel-clause>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>#N.t:<compar> = NP.b:<compar>#N.t:<equiv> = NP.b:<equiv>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.b:<case> = acc/nom#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#P.t:<wh> = -#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
##S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_2.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = +#NP.t:<trace> = NP_1:<trace>#NP.t:<agr> = NP_1:<agr>#NP.t:<case> = NP_1:<case>#NP.t:<wh> = NP_1:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.t:<conj> = nil
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#VP.t:<passive> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil
###N.b:<case> = N_1.t:<case>#N.b:<case> = N_2.t:<case>#N.b:<case> = nom/acc#N.b:<wh> = N_1.t:<wh>#N_1.t:<wh> = N_2.t:<wh>#Conj:<conj> = N.b:<conj>#N.b:<const> = N_1.t:<const>#N.b:<gen> = N_1.t:<gen>#N.b:<definite> = N_1.t:<definite>#N.b:<quan> = N_1.t:<quan>#N.b:<card> = N_1.t:<card>#N.b:<decreas> = N_1.t:<decreas>#N.b:<compar> = N_1.t:<compar>#N.b:<compar> = N_2:<compar>#N.b:<compar> = -
####VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = VP_r.b:<punct struct>#S.b:<agr> = NP.t:<agr>#S.b:<assign-case> = NP.t:<case>#NP.t:<wh> = -##S.t:<mode> = ind#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = VP:<assign-case>##VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense>=V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense>=V.t:<tense>#V:<passive> = V.t:<passive>#NP_1:<case>=acc
##NP:<agr> = NP_1.b:<agr>#NP:<case> = NP_1.b:<case>#NP:<trace> = NP_1.b:<trace>#NP:<wh> = +#NP_0:<agr> = S.b:<agr>#S.t:<agr> = S_r.b:<agr>#NP_0:<case> = S.b:<assign-case>#S.t:<assign-case> = S_r.b:<assign-case>#S_r.b:<assign-case> = V.t:<assign-case>#NP_1.t:<case> = acc/nom#S_2.t:<assign-comp> = ind_nil#S_2.t:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_q.b:<assign-comp> = S_r.t:<assign-comp>#S_r.b:<assign-comp> = V.t:<assign-comp>#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_r.b:<conditional> = V.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_r.b:<passive> = V.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_r.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_r.b:<progressive> = V.t:<progressive>#S_q.b:<wh> = NP:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<agr> = V.t:<agr>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = V.t:<mode>#S_r.b:<tense> = V.t:<tense>###VP_1.b:<compar> = -#VP_r.b:<compar> = -#S_r.t:<conj> = nil#V.b:<mode> = V_r.b:<mode>#V_r.b:<mode> = V_1.b:<mode>#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
###NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc/none/gen#NP_1:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_1:<compar>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#NP_r.b:<gerund> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<assign-comp> = ind/ind_nil/inf_nil/that/whether/if/for#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#S_f.t:<punct term> = nil#Punct.t:<punct>= S_r.b:<punct>#S_f.t:<punct term> = nil#S_f.t:<punct bal> = nil#S_r.b:<inv> = S_f.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S_f.b:<comp> = nil#S_r.b:<nocomp-mode> = S_f.t:<nocomp-mode>
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = S_r.t:<wh>#S_r.t:<comp> = nil#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_q.b:<wh> = NP:<wh>#NP_0:<wh> = NP:<wh>#NP:<wh> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_r.t:<conj> = nil#S_1.t:<control> = NP_0:<control>#S_1.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
######S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#NP:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP:<wh>#PP.b:<wh> = NP:<wh>
#S_r.b:<assign-case> = NP_0.t:<case>#VP.t:<assign-case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<passive> = -#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<progressive> = -#S_2:<extracted> = -#S_2:<comp> = that/nil#S_2:<mode> = ind#S_2.t:<assign-comp> = ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####Conj:<conj> = Ad_r.b:<conj>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<inv> = -#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = S_r.t:<comp>#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>##NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#####S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = NP_1:<agr>#S_r.b:<assign-case> = NP_1:<case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##NP_1:<wh> = -#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none##V.t:<passive> = +#V.t:<mode> = ppart#V.t:<punct struct> = nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>##VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = AdvP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = nom/acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#AdvP:<trace> = AdvP_1:<trace>#AdvP:<wh> = AdvP_1.t:<wh>#AdvP_1.b:<wh> = NP_1.t:<wh>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.t:<conj> = nil
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -##NP_0:<wh> = -#VP.b:<compar> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc##S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#AP_1.b:<equiv> = A.t:<equiv>#AP_1.b:<compar> = A.t:<compar>#AP_1.b:<wh> = A.t:<wh>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#S_f.t:<punct struct> = nil#S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<conj> = S_r.b:<conj>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = ind/imp#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1:<wh>
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1.t:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.t:<mode> = ind#VP.t:<passive> = +#VP.b:<mode> = ppart#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = -#NP_0:<case> = acc/gen
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
#####NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<refl> = NP_f.t:<refl>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##########VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>#VP.t:<assign-comp> = ecm#V.t:<assign-case> = VP_r.b:<assign-case>#V.t:<mode> = VP_r.b:<mode>#V.t:<tense> = VP_r.b:<tense>#V.t:<mainv> = VP_r.b:<mainv>#V.t:<agr> = VP_r.b:<agr>#V.t:<neg> = VP_r.b:<neg>#V.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -#PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#P.t:<assign-case> = acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
####S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = NP_1:<agr>#S_r.b:<assign-case> = NP_1:<case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##NP_1:<wh> = -#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none##V.t:<passive> = +#V.t:<mode> = ppart#V.t:<punct struct> = nil
#####NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<refl> = NP_f.t:<refl>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_r.b:<compar> = -#NP_r.b:<super>= NP_f.t:<super>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
####S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<wh> = NP_f.t:<wh>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<passive> = +#VP.b:<mode> = ppart#V.t:<assign-comp> = ppart_nil#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1.t:<wh> = NP_r.b:<wh>#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc
###NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#NP.b:<compar> = N.t:<compar>#NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#N.t:<compar> = -
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<control> = NP_0.t:<control>#NP_0.t:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.t:<assign-comp> = that/for/ind_nil#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#V_r.b:<punct bal> = Punct_1.t:<punct bal>#V_r.b:<punct struct> = V_f.t:<punct struct>#V_r.b:<mode> = V_f.t:<mode>#V_r.b:<assign-comp> = V_f.t:<assign-comp>#V_r.b:<agr> = V_f.t:<agr>#V_r.b:<tense> = V_f.t:<tense>#V_r.b:<assign-case> = V_f.t:<assign-case>#V_r.b:<mainv> = V_f.t:<mainv>#V_r.b:<passive> = V_f.t:<passive>#V_r.b:<neg> = V_f.t:<neg>#V_r.b:<contr> = V_f.t:<contr>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
####Conj_1:<conj> = Ad.b:<conj>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_0:<case> = acc/gen
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<mode> = inf/ind#S_0:<comp> = that/whether/for/nil#S_0:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense>=V.t:<tense>##VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv>=-
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<assign-case> = acc#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart/ger#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#####PP_r.b:<assign-comp> = PP.t:<assign-comp>#PP.t:<conj> = PP_r.b:<conj>
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
####S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_q.b:<wh> = PP_1.t:<wh>#PP_1.t:<trace> = PP.t:<trace>#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<mode> = base#VP.t:<neg> = -#VP.t:<tense> = pres#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = - #S_1.t:<control> = NP_0.t:<control>#A.t:<compar> = AP_1.b:<compar>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1:<agr> = NP_1.b:<agr>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###A.b:<neg>=+#Conj:<conj> = A.b:<conj>#A_1.t:<compar> = A.b:<compar>#A_2:<compar> = A.b:<compar>#A_2:<equiv> = A.b:<equiv>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = AP_2.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#AP.t:<trace> = AP_2.t:<trace>#AP.t:<wh> = AP_2.t:<wh>#AP_2.t:<wh>=+
#####PP_r.b:<assign-comp> = PP_f.t:<assign-comp>#PP_r.b:<conj> = PP_f.t:<conj>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#####PP_r.b:<assign-comp> = PP.t:<assign-comp>#PP_r.b:<conj> = PP.t:<conj>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
####NP.b:<compar> = -#NP.b:<super> = -
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_f.t:<wh>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<passive> = +#VP.b:<mode> = ppart#V.t:<assign-comp> = ppart_nil#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<mode> = ind/inf/ger/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<wh> = NP_0.t:<wh>##S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#NP_0.t:<wh> = -#NP_0.t:<agr pers> = 2#NP_0.t:<agr 3rdsing> = -#NP_0.t:<agr num> = plur/sing#NP_0.t:<case> = nom#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.t:<tense> = pres##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc#VP.t:<mode> = ger#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
#####NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_1.b:<wh> = NP_1:<wh>#V.b:<mode> = ger
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<wh> = +#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
######NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<conj> = N.t:<conj>#NP_1.b:<const> = D.t:<const>#NP_1.b:<definite> = D.t:<definite>#NP_1.b:<quan> = D.t:<quan>#NP_1.b:<card> = D.t:<card>#NP_1.b:<gen> = D.t:<gen>#NP_1.b:<decreas> = D.t:<decreas>#NP_1.b:<wh> = D.t:<wh>#NP_1.t:<case> = nom/acc
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = -
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_1.t:<wh> = S_q.b:<wh>#NP_1.b:<wh> = N.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.b:<compar> = N.t:<compar>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#NP.t:<trace> = NP_1:<trace>#NP.t:<agr> = NP_1:<agr>#NP.t:<case> = NP_1:<case>#NP.t:<wh> = NP_1:<wh>#NP.t:<case> = acc#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_r.t:<conj> = nil
###D.b:<neg>=+#D.b:<wh> = D_2.t:<wh>#Conj:<conj> = D.b:<conj>#D.b:<definite> = D_1.t:<definite>#D.b:<agr> = D_1.t:<agr>#D.b:<quan> = D_1.t:<quan>#D.b:<card> = D_1.t:<card>#D.b:<gen> = D_1.t:<gen>#D.b:<decreas> = D_1.t:<decreas>#D.b:<const> = D_1.t:<const>#D.b:<wh> = D_1.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<gerund> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_w.t:<trace> = NP.t:<trace>#NP_w.t:<case> = NP.t:<case>#NP_w.t:<agr> = NP.t:<agr>#S_r.t:<nocomp-mode> = inf/ger#S_r.t:<conj> = nil#S_r.t:<inv> = -#S_r.t:<mode> = inf/ger/ind#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<wh> = -#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_1:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_2.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.t:<passive> = -#VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<wh> = NP_r.b:<wh>#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -#NP_0:<case> = acc/gen
####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP.t:<trace>#NP_w.t:<case> = NP.t:<case>#NP_w.t:<agr> = NP.t:<agr>#S_r.t:<mode> = ind#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<refl> = NP_f.t:<refl>#NP:<wh> = -#NP_f.t:<compar> = +#NP_f.t:<super> = -#NP_r.b:<compar> = -#NP_r.b:<super> = +#NP_f.t:<equiv> = P.t:<equiv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>##A.t:<assign-case> = VP_r.b:<assign-case>#A.t:<mode> = VP_r.b:<mode>#A.t:<tense> = VP_r.b:<tense>#A.t:<mainv> = VP_r.b:<mainv>#A.t:<agr> = VP_r.b:<agr>#A.t:<neg> = VP_r.b:<neg>#A.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -#VP.t:<mode> = inf#VP.t:<assign-comp>=ecm#A.b:<mode> = nom#AP.b:<equiv> = A.t:<equiv>#AP.b:<compar> = A.t:<compar>
##N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<assign-comp> = N_f.t:<assign-comp>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<card> = N_f.t:<card>#N_r.b:<const> = N_f.t:<const>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<compar> = N_f.t:<compar>#N_f.t:<compar> = -
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP.t:<trace>#NP_w.t:<case> = NP.t:<case>#NP_w.t:<agr> = NP.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.t:<mode> = ind#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc#NP_2:<case> = acc##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###N_f:<case> = nom/acc#N_r.b:<case> = N_f:<case>#N_r.b:<agr> = N_f:<agr>#N_r.b:<wh> = N_f:<wh>#N_r.b:<pron> = N_f:<pron>#N_r.b:<conj> = N_f:<conj>#V.t:<mode> = ppart#V.t:<punct struct> = nil#VP.t:<mode> = VP.b:<mode>#VP.b:<mode> = VP.t:<mode>#VP.b:<compar> = -#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0.t:<case> = none#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1:<case> = acc#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#S_r.b:<control> = NP_0.t:<control>#A.t:<compar> = AP_1.b:<compar>#VP.t:<mode> = inf/ger
##NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<gen> = NP_f.t:<gen>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<predet> = NP_f.t:<predet>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.t:<case> = acc/nom#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#Punct_1.t:<punct contains> = NP_r.b:<punct contains>#Punct_1.t:<punct struct> = NP_r.b:<punct struct>#Punct_1.t:<punct bal> = NP_r.b:<punct bal>#NP_f.t:<conj> = and/or/nil#NP.t:<case> = nom/acc#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#NP:<case> = PP_0.b:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#######S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_1.t:<mode> = S_2.t:<mode>#S.b:<mode> = S_1.t:<mode>#S_1.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<mode> = ind/inf/ger/nom/prep/imp#Conj_1:<conj> = S.b:<conj>#S_1.t:<wh> = S_2.t:<wh>#S.b:<wh> = S_1.t:<wh>#S_1.t:<extracted> = S_2.t:<extracted>#S.b:<extracted> = S_1.t:<extracted>#S_1.t:<comp> = S_2.t:<comp>#S_1:<comp> = S.b:<comp>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###P.b:<neg>=+#P.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = P_1.t:<assign-case>#Conj:<conj> = P.b:<conj>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc
#S_r.b:<assign-case> = NP_0.t:<case>#VP.t:<assign-case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<passive> = -#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<progressive> = -#S_2:<extracted> = -#S_2:<comp> = that/nil#S_2:<mode> = ind#S_2.t:<assign-comp> = ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<wh> = NP_r.b:<wh>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_2:<wh> = PP_2.b:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1.t:<wh> = NP_r.b:<wh>#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc#P_0.t:<assign-case> = PP_0.b:<assign-case>#NP_0:<case> = PP_0.b:<assign-case>#P_0.b:<assign-case> = acc

####S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<mode> = inf/ger#VP.b:<compar> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>
#NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#NP:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP:<wh>#PP.b:<wh> = NP:<wh>
###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#NP:<case> = PP_0.b:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.t:<passive> = -#VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_w.t:<wh> = +#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<trace> = NP_0.b:<trace>#S_r.t:<inv> = -#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil##S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#S_f.t:<punct struct> = nil#S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<conj> = S_r.b:<conj>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = ind/imp#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_1.b:<trace>#PP_w.t:<case> = PP_1.b:<case>#PP_w.t:<agr> = PP_1.b:<agr>#PP_w.b:<assign-case> = P.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<assign-case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_2.b:<assign-case> = acc#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#PP_1.b:<wh> = NP_1:<wh>#PP_2.b:<wh> = NP_2:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc#NP_2:<case> = acc#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.t:<conj> = nil
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_1:<compar>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#NP_r.b:<gerund> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
##NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
###S_1.t:<mode> = S_2.t:<mode>#S.b:<mode> = S_1.t:<mode>#S_1.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<mode> = ind/inf/ger/nom/prep/imp#Conj:<conj> = S.b:<conj>#S_1.t:<wh> = S_2.t:<wh>#S.b:<wh> = S_1.t:<wh>#S_1.t:<extracted> = S_2.t:<extracted>#S.b:<extracted> = S_1.t:<extracted>#S_1.t:<comp> = S_2.t:<comp>#S.b:<comp> = S_1.t:<comp>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
####P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<agr pers> = 3#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<assign-case> = acc
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#VP.b:<assign-case> = acc#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.t:<conj> = nil
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = imp#NP_1.t:<wh> = -#NP_1.t:<agr pers> = 2#NP_1.t:<agr 3rdsing> = -#NP_1.t:<agr num> = plur/sing#NP_1.t:<case> = nom#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V:<punct struct> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
###N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<compar> = N_f.t:<compar>#N_f.t:<case> = nom/acc#N_f.t:<compar> = -##VP.t:<mode> = VP.b:<mode>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ger#V.t:<punct struct> = nil
####S.t:<wh> = -#S.t:<extracted> = -#S.t:<inv> = -#S.t:<punct struct> = nil#S_r.b:<comp> = S_f:<comp>#S_r.b:<conj> = S_f:<conj>#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_f:<mode> = ind/imp#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh>#S_r.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#AP_1.t:<wh> = S_q.b:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#AP.t:<trace> = AP_1.t:<trace>#AP.t:<wh> = AP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<case> = NP_f.t:<case>#D.b:<wh> = NP.t:<wh>#NP_r.b:<wh> = D.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<const> = D.t:<const>#NP_r.b:<definite> = D.t:<definite>#NP_r.b:<quan> = D.t:<quan>#NP_r.b:<card> = D.t:<card>#NP_r.b:<gen> = D.t:<gen>#NP_r.b:<compl> = D.t:<compl>#NP_r.b:<decreas> = D.t:<decreas>#NP_f.t:<rel-clause> = -#NP_f.t:<gerund> = -#N.t:<agr> = NP.b:<agr>#N.t:<case> = NP.b:<case>#NP_f.t:<case> = nom/acc#N.t:<wh> = NP.b:<wh>#NP_r.b:<compar> = -#NP_f.t:<conj> = and/or/nil
####S_1.t:<comp> = nil#S_1.t:<comp> = S_r.b:<comp>#S_1.t:<extracted> = S_r.b:<extracted>#S_1.t:<assign-comp> = S_r.b:<assign-comp>#S_1.t:<tense> = S_r.b:<tense>#S_1.t:<wh> = S_r.b:<wh>#S_1.t:<inv> = S_r.b:<inv>#S_1.t:<invlink> = S_r.b:<invlink>#S_1.t:<mode> = S_r.b:<mode>#S_1.t:<assign-case> = S_r.b:<assign-case>#S_1.t:<agr> = S_r.b:<agr>##S.t:<inv> = -#S.t:<mode> = ind#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<assign-case> = VP.t:<assign-case>#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#NP:<agr> = S.b:<agr>#NP:<case> = S.b:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense>=V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#NP_1:<case>=acc
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1.t:<case> = nom/acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#AdvP_1.b:<wh> = NP_1:<wh>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
###NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#S_1.t:<assign-comp> = ecm#S_1.t:<comp> = nil#S_1.t:<inv> = -#S_1.t:<extracted> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = none#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.t:<mode> = inf/ger
###S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###P.b:<neg>=+#P.b:<assign-case> = P_1.t:<assign-case>#Conj:<conj> = P.b:<conj>
##S_r.t:<inv> = -#S_c.b:<mode> = S_r.b:<mode>#S_c.b:<comp> = Comp:<comp>#S_c.b:<inv> = -#S_r.b:<comp> = nil#S_c.b:<wh> = Comp.t:<wh>#S_r.t:<assign-comp> = S_c.b:<comp>#S_r.t:<control> = S_c.b:<control>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/nom#S_r.t:<nocomp-mode> = inf/ger/nom#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.t:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<assign-case> = NP_2.t:<case>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_q.b:<wh>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#A_f.t:<compar> = -#A_f.t:<super> = -#A_r.b:<compar> = -#A_r.b:<super> = +#A.t:<compar> = -#A.t:<super> = -
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>##NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = NP:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP:<trace> = NP_2:<trace>#NP:<agr> = NP_2:<agr>#NP:<case> = NP_2:<case>#NP:<wh> = NP_2:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###Conj:<conj> = AP.b:<conj>#AP_1.t:<compar> = AP.b:<compar>#AP_2:<compar> = AP.b:<compar>#AP.b:<equiv> = AP_2:<equiv>
####VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<conj> = VP_f.t:<conj>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.t:<conj> = nil
####VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<conj> = VP.t:<conj>#VP_r.b:<compar> = -#VP_r.b:<super>=VP.t:<super>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.t:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<mode> = ind/inf#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1.t:<case> = acc
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<mode> = base#VP.t:<neg> = -#VP.t:<tense> = pres#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil
####N_f:<case> = nom/acc#N_r.b:<case> = N_f:<case>#N_r.b:<agr> = N_f:<agr>#N_r.b:<wh> = N_f:<wh>#N_r.b:<pron> = N_f:<pron>#N_r.b:<conj> = N_f:<conj>#V.t:<mode> = ppart#V.t:<punct struct> = nil#VP.t:<mode> = VP.b:<mode>#VP.b:<mode> = VP.t:<mode>#VP.b:<compar> = -#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>
NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<const> = D.t:<const>#NP_r.b:<definite> = D.t:<definite>#NP_r.b:<quan> = D.t:<quan>#NP_r.b:<card> = D.t:<card>#NP_r.b:<gen> = D.t:<gen>#NP_r.b:<compl> = D.t:<compl>#NP_r.b:<decreas> = D.t:<decreas>#NP_r.b:<wh> = D.t:<wh>#NP_f.t:<rel-clause> = -#NP_f.t:<case> = nom/acc#NP_r.b:<compar> = -#NP_f.t:<gerund> = -#NP_r.b:<conj> = and/or/nil
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP.t:<wh> = +#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP_1:<case> = acc#S_r.t:<conj> = nil
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_q.b:<wh> = NP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP.t:<trace> = NP_2.t:<trace>#NP.t:<agr> = NP_2.t:<agr>#NP.t:<case> = NP_2.t:<case>#NP:<wh> = NP_2:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc/none/gen#NP_1:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_1:<compar>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#NP_r.b:<gerund> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<comp> = nil#S_q.b:<extracted> = +#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>##S_r.t:<comp> = nil#S_r.t:<conj> = nil##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#VP.t:<passive> = -#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>#NP_0:<wh> = +#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP:<trace> = NP_0.t:<trace>#NP:<wh> = NP_0.t:<wh>
##N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<assign-comp> = N_f.t:<assign-comp>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<card> = N_f.t:<card>#N_r.b:<const> = N_f.t:<const>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<gen> = N_f.t:<gen>#N_f.t:<compar> = -#N_r.b:<compar> = A.t:<compar>#N_r.b:<equiv> = -
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
###PP_0.b:<assign-case> = P_0.t:<assign-case>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#PP_0.t:<trace> = PP.t:<trace>#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<control> = NP_2.t:<control>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_1:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-case> = NP_0.t:<case>#VP.t:<assign-case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<passive> = -#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<progressive> = -#S_2:<extracted> = -#S_2:<comp> = that/nil#S_2:<mode> = ind#S_2.t:<assign-comp> = ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###Conj:<conj> = AP.b:<conj>#AP_1.t:<compar> = AP.b:<compar>#AP_2:<compar> = AP.b:<compar>#AP.b:<equiv> = AP_2:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<wh> = NP_0.t:<wh>##S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###NP.b:<case> = NP_1.t:<case>#NP.b:<wh> = NP_1.t:<wh>#NP.b:<case> = nom/acc#NP_1.t:<wh> = NP_2.t:<wh>#NP_1.t:<case> = NP_2.t:<case>#NP.b:<conj> = Conj.t:<conj>#Conj.b:<conj> = Conj_2.t:<conj>
####S.t:<wh> = -#S.t:<extracted> = -#S.t:<inv> = -#S.t:<punct struct> = nil#S_r.b:<comp> = S_f:<comp>#S_r.b:<conj> = S_f:<conj>#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_f:<mode> = ind/imp#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh>#S_r.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
#####Ad_r.b:<assign-comp> = Ad_0.t:<assign-comp>#Ad_r.b:<conj> = Ad_0.t:<conj>#Ad_r.b:<compar> = -#Ad_0.t:<compar> = -#Ad_r.b:<equiv> = Ad_0.t:<equiv>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
###S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>
#S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###NP.b:<neg>=+#Conj:<conj> = NP.b:<conj>#NP.b:<case> = NP_2.t:<case>#NP.b:<case> = nom/acc#NP.b:<case> = NP_1.t:<case>#NP.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = NP_2.t:<wh>#NP.b:<const> = NP_1.t:<const>#NP.b:<gen> = NP_1.t:<gen>#NP.b:<definite> = NP_1.t:<definite>#NP.b:<quan> = NP_1.t:<quan>#NP.b:<card> = NP_1.t:<card>#NP.b:<decreas> = NP_1.t:<decreas>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#NP:<trace> = NP:<trace>#NP:<agr> = NP:<agr>#NP:<case> = NP:<case>#NP:<wh> = NP:<wh>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#NP_1:<case> = acc/gen
###AP.b:<neg>=+#Conj:<conj> = AP.b:<conj>#AP_1.t:<compar> = AP.b:<compar>#AP_2:<compar> = AP.b:<compar>#AP_2:<equiv> = AP.b:<equiv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#VP_r.b:<punct bal> = Punct_1.t:<punct bal>#VP_r.b:<punct struct> = VP_f.t:<punct struct>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<compar> = VP_f.t:<compar>#VP_r.b:<equiv> = VP_f.t:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP.t:<trace> = NP_0.t:<trace>#NP.t:<case> = NP_0.t:<case>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##########VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>##V.t:<assign-case> = VP_r.b:<assign-case>#V.t:<mode> = VP_r.b:<mode>#V.t:<tense> = VP_r.b:<tense>#V.t:<mainv> = VP_r.b:<mainv>#V.t:<agr> = VP_r.b:<agr>#V.t:<neg> = VP_r.b:<neg>#V.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -
####S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#PP_0.b:<wh> = NP:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>
###P.b:<assign-case> = P_1.t:<assign-case>#Conj_1:<conj> = P.b:<conj>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc##VP.t:<mode> = ger##S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
##S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#D_1.t:<agr> = NP_1.b:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil
#NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_0.t:<wh>#NP_r.b:<compar> = NP_0.t:<compar>#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_0:<case> = acc/gen
###NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<compar> = NP_1:<compar>#NP_1:<case> = acc/none/gen#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###NP.b:<case> = NP_1.t:<case>#NP.b:<case> = NP_2.t:<case>#NP.b:<case> = nom/acc#NP.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = NP_2.t:<wh>#Conj_1:<conj> = NP.b:<conj>#NP.b:<const> = NP_1.t:<const>#NP.b:<gen> = NP_1.t:<gen>#NP.b:<definite> = NP_1.t:<definite>#NP.b:<quan> = NP_1.t:<quan>#NP.b:<card> = NP_1.t:<card>#NP.b:<decreas> = NP_1.t:<decreas>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = +#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<conj> = S_r.b:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##Ad:<trace> = Ad_1.b:<trace>#Ad:<wh> = +#NP_0:<agr> = S.b:<agr>#S.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S.b:<assign-case>#NP_0.b:<case> = N.t:<case>#NP_0.b:<agr> = N.t:<agr>#S.t:<assign-case> = S_r.b:<assign-case>#S_r.b:<assign-case> = V.t:<assign-case>#S_2.t:<assign-comp> = ind_nil#S_2.t:<comp> = that/nil#S_2:<extracted> = -#S_2:<inv> = -#S_2:<mode> = ind#S_q.b:<assign-comp> = S_r.t:<assign-comp>#S_r.b:<assign-comp> = V.t:<assign-comp>#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_r.b:<conditional> = V.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_r.b:<passive> = V.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_r.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_r.b:<progressive> = V.t:<progressive>#S_q.b:<wh> = Ad:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<agr> = V.t:<agr>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = V.t:<mode>#S_r.b:<tense> = V.t:<tense>###VP_1.b:<compar> = -#VP_r.b:<compar> = -#S_r.t:<conj> = nil#V.b:<mode> = V_r.b:<mode>#V_r.b:<mode> = V_1.b:<mode>#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.t:<inv> = S_q.b:<inv>#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#NP.t:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<control> = NP_2.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +#VP_r.b:<compar> = -#NP.b:<case> = N.t:<case>#NP.b:<wh> = N.t:<wh>#NP.b:<pron> = N.t:<pron>#NP.b:<conj> = N.t:<conj>#N.t:<agr> = NP.b:<agr>#N.t:<const> = NP.b:<const>#N.t:<definite> = NP.b:<definite>#N.t:<gen> = NP.b:<gen>#N.t:<decreas> = NP.b:<decreas>#N.t:<quan> = NP.b:<quan>#N.t:<card> = NP.b:<card>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#NP_0:<case> = acc/gen
##S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<inv> = -#S_r.b:<assign-case> = NP_0:<case>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>##NP_f.b:<case> = nom/acc#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#VP.t:<conj> = VP_r.b:<conj>#P.b:<wh> = PP.b:<wh>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<compar> = NP_1:<compar>#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_1.t:<case> = acc#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#VP_r.b:<conj> = VP_f:<conj>#VP_f:<mode> = ind/imp#VP_r.b:<mode> = VP_f:<mode>#VP_f:<mode> = ind/imp#VP_r.b:<assign-comp> = VP_f:<assign-comp>#VP_r.b:<agr> = VP_f:<agr>#VP_r.b:<tense> = VP_f:<tense>#VP_r.b:<assign-case> = VP_f:<assign-case>#VP_r.b:<passive> = VP_f:<passive>#VP_f.t:<compar> = -#VP_r.b:<compar> = VP_f.t:<compar>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#####D_r.b:<agr> = D_f.t:<agr>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<card> = D_f.t:<card>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<wh> = D_f.t:<wh>#D_r.b:<assign-comp> = D_f.t:<assign-comp>#D_f.t:<conj> = D_r.b:<conj>
###P.b:<assign-case> = P_1.t:<assign-case>#Conj:<conj> = P.b:<conj>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>##S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>##VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc
####VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = VP_r.b:<punct struct>#Punct_1.t:<punct struct> = comma/dash#S.b:<agr> = NP.t:<agr>#S.b:<assign-case> = NP.t:<case>#NP.t:<wh> = -#S.t:<mode> = ind#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = VP:<assign-case>##VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense> = V.t:<tense>#V:<passive> = V.t:<passive>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#####A_r.b:<wh> = Ad.t:<wh>#A.t:<wh> = -#A_r.b:<assign-comp> = A.t:<assign-comp>#A_r.b:<conj> = A.t:<conj>#A_r.b:<compar> = A.t:<compar>#A_r.b:<equiv> = A.t:<equiv>#A_r.b:<super> = A.t:<super>
#####D_r.b:<agr> = D_f.t:<agr>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<card> = D_f.t:<card>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<assign-comp> = D_f.t:<assign-comp>#D_f.t:<conj> = D_r.b:<conj>#D_r.b:<wh> = Ad.t:<wh>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#NP.t:<case> = acc#NP:<trace> = NP_1.t:<trace>#NP:<agr> = NP_1.t:<agr>#NP:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.b:<control> = NP_0:<control>#S_r.t:<conj> = nil
#NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<compar> = NP_1.t:<compar>#VP.b:<compar> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1.t:<wh> = -#NP_1.t:<case> = none
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0:<control>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<conj> = S_r.b:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Ad.t:<wh>= S_r.b:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
######S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<equiv> = VP.t:<equiv>#VP_r.b:<super> = VP.t:<super>
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_w.t:<agr> = NP_0.t:<agr>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<trace> = NP_0.t:<trace>#S_r.t:<nocomp-mode> = inf/ger#S_r.t:<inv> = -#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind#S_r.b:<comp> = nil#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<mode> = S_r.b:<nocomp-mode>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<assign-comp> = that/inf_nil/ind_nil/ecm#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#V.t:<passive> = -#V.t:<punct struct> = nil
###S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP.t:<case>#PP_2.b:<wh> = NP.t:<wh>#NP:<trace> = NP_2:<trace>#NP:<agr> = NP_2:<agr>#NP:<case> = NP_2:<case>#NP:<wh> = NP_2:<wh>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ppart/ger/ind#S_r.t:<mode> = ind/inf/ger/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_2.b:<trace>#PP_w.t:<case> = PP_2.b:<case>#PP_w.t:<agr> = PP_2.b:<agr>#PP_w.b:<assign-case> = P_2.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###Conj:<conj> = A.b:<conj>#A_1.t:<neg> = -#A_2.t:<neg> = -#A.b:<neg> = -#A_1.t:<compar> = A_2:<compar>#A_1.t:<compar> = A.b:<compar>#A_2:<equiv> = A.b:<equiv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_q.b:<wh> = PP_1.t:<wh>#PP_1.t:<trace> = PP.t:<trace>#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0:<control>#S_r.t:<conj> = nil
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -##NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1.t:<case> = none#NP_1.t:<wh> = -#NP_1:<wh> = NP_r.b:<wh>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<assign-comp> = none#V.b:<mode> = base#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>

#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#PP_2.b:<wh> = NP_2.t:<wh>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#######S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#PP_1:<trace> = PP.t:<trace>#S_q.b:<wh> = PP_1:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<passive> = -#S_r.b:<inv> = -#D_1:<agr> = NP_1.b:<agr>#NP_1:<case> = acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####Conj:<conj> = PP.b:<conj>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
######S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####S_r.b:<inv> = -#S_r.b:<extracted> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_2.t:<control>#PP_0.b:<wh> = NP_0:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<mode> = inf/ger/ppart/base#PP:<trace> = PP_1.b:<trace>#PP:<wh> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_0.t:<wh> = -#N.t:<case> = NP_0.b:<case>#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<assign-comp> = inf_nil/ind_nil#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_q.b:<wh> = PP:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = -#VP.b:<tense> = V.t:<tense>#VP_1.b:<compar> = -#VP.b:<compar> = -#S_r.t:<conj> = nil#P_1.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#NP_1:<case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_2.b:<assign-case> = acc#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
###S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc
##S_q.b:<inv> = +#S_q.b:<extracted> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = V.t:<mode>#V.t:<agr> = NP_0:<agr>#V.t:<assign-case> = NP_0:<case>#S_r.b:<assign-comp> = VP_r.t:<assign-comp>#S_r.b:<comp> = nil#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = V.t:<agr>#S_r.b:<assign-case> = V.t:<assign-case>#S_r.b:<tense> = V.t:<tense>###V.t:<mode> = V_r.b:<mode>#V.t:<trace> = V_r.b:<trace>#V_r.t:<mode> = VP_r.b:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = VP_1.t:<mode>#VP_r.b:<compar> = -#VP_1.b:<compar> = -#NP_1:<case> = nom/acc#S_r.t:<conj> = nil#NP_0:<gerund> = -#NP_1:<gerund> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
##NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc##NP_r.b:<gerund> = +#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_0:<case> = acc/gen
###PP.b:<neg>=+##Conj:<conj> = PP.b:<conj>
#PP_0.b:<assign-case> = P_0.t:<assign-case>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#PP_0.t:<trace> = PP.t:<trace>#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<agr> = NP_1.t:<agr>#VP.b:<compar> = -#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.t:<nocomp-mode>#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
######S.t:<mode> = ind/inf#S.t:<comp> = nil/that#S.t:<inv> = -#S.t:<extracted> = -#A.t:<compar> = AP.b:<compar>#A.t:<equiv> = AP.b:<equiv>#A.t:<super> = AP.b:<super>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_1.t:<wh> = +#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<refl> = NP_f.t:<refl>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#Ad.t:<compar> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_2.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#######S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<control> = NP_1:<control>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP.t:<case>#PP_0.b:<wh> = NP.t:<wh>#P_0.b:<assign-case> = acc#S_q.b:<wh> = NP_0:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#V.t:<punct struct> = nil#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<mode> = inf/ind#S_0:<comp> = that/whether/for/nil#S_0:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<compar> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###VP_r.t:<mainv> = -#VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>##Ad.t:<assign-case> = VP_r.b:<assign-case>#Ad.t:<mode> = VP_r.b:<mode>#Ad.t:<tense> = VP_r.b:<tense>#Ad.t:<mainv> = VP_r.b:<mainv>#Ad.t:<agr> = VP_r.b:<agr>#Ad.t:<neg> = VP_r.b:<neg>#Ad.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -#VP.t:<mode> = inf#VP.t:<assign-comp>=ecm#Ad.b:<mode> = nom#Ad_r.b:<equiv> = Ad.t:<equiv>#Ad_r.b:<compar> = Ad.t:<compar>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = PP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1.t:<trace>#NP:<agr> = NP_1.t:<agr>#NP:<case> = NP_1.t:<case>#NP:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.t:<conj> = nil#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = AP_2.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#AP.t:<trace> = AP_2.t:<trace>#AP.t:<wh> = AP_2.t:<wh>#AP_2.t:<wh>=+
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0.t:<wh> = -#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-comp> = V.t:<assign-comp>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.t:<mode> = inf/ger
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_1.t:<wh> = +#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_0.t:<wh>#NP_r.b:<compar> = NP_0.t:<compar>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil
###S.t:<comp> = nil#S.t:<wh> = S_r.b:<wh>#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S_r.b:<extracted> = S.t:<extracted>#S_r.b:<conj> = S.t:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#VP.t:<mode> = inf/ger
##Punct_1.t:<punct> = Punct_2.t:<punct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<compar> = -
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP:<wh>#PP.b:<wh> = NP:<wh>#NP:<case> = PP_w.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.b:<case> = acc/nom#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#S.t:<mode> = ind/prep/nom#S.t:<comp> = nil#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_1.t:<case> = nom/acc#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#NP_r.b:<gerund> = +#AdvP_1.b:<wh> = NP_1:<wh>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.t:<mode> = ind#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = AP_2.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#AP.t:<trace> = AP_2.t:<trace>#AP.t:<wh> = AP_2.t:<wh>#AP_2.t:<wh>=+
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####PP_r.b:<assign-comp> = PP.t:<assign-comp>#PP_r.b:<conj> = PP.t:<conj>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1:<case> = acc#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#VP.t:<mode> = inf/ger
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc #S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP_2:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<conj> = N.t:<conj>#NP_1.b:<const> = D.t:<const>#NP_1.b:<definite> = D.t:<definite>#NP_1.b:<quan> = D.t:<quan>#NP_1.b:<card> = D.t:<card>#NP_1.b:<gen> = D.t:<gen>#NP_1.b:<decreas> = D.t:<decreas>#NP_1.b:<wh> = D.t:<wh>#NP_1.t:<case> = nom/acc#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1.t:<wh> = -#NP_1.t:<case> = none#NP_1:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_1:<compar>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#NP_r.b:<gerund> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<extracted> = S_r.b:<extracted>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<wh> = S_r.b:<wh>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#P.t:<assign-case> = PP.b:<assign-case> #PP.b:<assign-case> = NP.t:<case>#S.b:<punct struct> = nil#S.b:<punct term> = nil
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S_r.b:<conj> = S.t:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Ad.t:<wh> = AdvP.b:<wh>#AdvP.t:<wh>= S_r.b:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#S.b:<comp> = nil#NP.t:<case> = nom/acc#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ppart/ger/ind#S_r.t:<mode> = ind/inf/ger/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
#NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -
####VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = VP_r.b:<punct struct>#Punct_1.t:<punct struct> = comma/dash#S_q.t:<mode> = ind#S_q.t:<comp> = nil#S_q.b:<comp> = nil#S_q.b:<agr> = V.t:<agr>#S_q.b:<tense> = V.t:<tense>#S_q.b:<mode> = V.t:<mode>#S_q.b:<assign-case> = V:<assign-case>#S_q.b:<assign-case> = S.t:<assign-case>#S_q.b:<agr> = S.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = NP:<case>#S.b:<agr> = NP:<agr>##VP.b:<mode> = V_i.t:<mode>#VP.b:<tense> = V_i.t:<tense>#VP.b:<mainv> = V_i.t:<mainv>#VP.b:<passive> = V_i.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense> = V.t:<tense>#V:<passive> = V.t:<passive>#V.t:<trace> = V_i.t:<trace>
##S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<case> = NP_1.t:<case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<wh> = NP_1.t:<wh>#NP.t:<case> = acc#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S_q.b:<comp> = nil#S_q.b:<extracted> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#NP_1.t:<wh> = NP.t:<wh>#NP_1.t:<trace> = NP.t:<trace>#NP_1.t:<agr> = NP.t:<agr>#NP_1.t:<case> = NP.t:<case>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = imp#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<wh> = NP_0.t:<wh>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_0.t:<wh> = -#NP_0.t:<agr pers> = 2#NP_0.t:<agr 3rdsing> = -#NP_0.t:<agr num> = plur/sing#NP_0.t:<case> = nom#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>
#####S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#PP_w.t:<wh> = +#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#NP:<case> = PP.b:<assign-case>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<wh> = NP.t:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#####VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<conj> = VP.t:<conj>#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<equiv> = VP.t:<equiv>#VP_r.b:<super> = VP.t:<super>#VP.t:<mainv> = +#NP.t:<case> = nom/acc
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0:<control>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<mode> = inf/ger#VP.b:<compar> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
###NP_0:<case> = acc/none/gen#NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_0:<compar>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc##VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP_w.b:<assign-case>#NP_1:<case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_1:<wh>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1:<case> = acc#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>

####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#VP_r.b:<conj> = VP_f:<conj>#VP_f:<mode> = ind/imp#VP_r.b:<mode> = VP_f:<mode>#VP_f:<mode> = ind/imp#VP_r.b:<assign-comp> = VP_f:<assign-comp>#VP_r.b:<agr> = VP_f:<agr>#VP_r.b:<tense> = VP_f:<tense>#VP_r.b:<assign-case> = VP_f:<assign-case>#VP_r.b:<passive> = VP_f:<passive>#VP_f.t:<compar> = -#VP_r.b:<compar> = VP_f.t:<compar>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0.t:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<compar> = -#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_1.t:<comp> = nil#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#NP_1:<case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.b:<control> = NP_2.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<case> = none#NP_1.t:<wh> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>
##NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_0:<compar>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -
#####VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<conj> = VP.t:<conj>#VP_r.b:<compar> = -#VP_r.b:<super>= VP.t:<super>#VP.t:<mainv> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<wh> = PP.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#PP.t:<trace> = PP.t:<trace>
#NP_2:<case> = acc#NP_1:<case> = acc#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>##NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###P.b:<assign-case> = P_1.t:<assign-case>#Conj:<conj> = P.b:<conj>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<control> = NP_2.t:<control>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#VP.t:<mode> = inf/ger
##N.t:<pron> = -#N.t:<case> = nom/acc#N_f:<pron> = -#N_f:<case> = nom/acc#N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<assign-comp> = N_f.t:<assign-comp>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#N.t:<compar> = N_r.b:<compar>#N.t:<equiv> = N_r.b:<equiv>#N.t:<super> = N_r.b:<super>#N_f.t:<compar> = -#N_f.t:<super> = -
##NP_r.b:<case> = nom/acc#NP_r.b:<gerund> = +#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<compar> = NP_1:<compar>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<case> = none#NP_1.t:<wh> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -
##S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = and/or/but/nil#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = NP.t:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#NP.b:<case> = N.t:<case>#NP.b:<wh> = N.t:<wh>#NP.b:<pron> = N.t:<pron>#NP.b:<conj> = N.t:<conj>#N.t:<agr> = NP.b:<agr>#N.t:<const> = NP.b:<const>#N.t:<definite> = NP.b:<definite>#N.t:<gen> = NP.b:<gen>#N.t:<decreas> = NP.b:<decreas>#N.t:<quan> = NP.b:<quan>#N.t:<card> = NP.b:<card>#N.t:<compar> = NP.b:<compar>#N.t:<equiv> = NP.b:<equiv>#N.t:<super> = NP.b:<super>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#VP_r.b:<conj> = VP_f:<conj>#VP_f:<mode> = ind/imp#VP_r.b:<mode> = VP_f:<mode>#VP_f:<mode> = ind/imp#VP_r.b:<assign-comp> = VP_f:<assign-comp>#VP_r.b:<agr> = VP_f:<agr>#VP_r.b:<tense> = VP_f:<tense>#VP_r.b:<assign-case> = VP_f:<assign-case>#VP_r.b:<passive> = VP_f:<passive>#VP_f.t:<compar> = -#VP_r.b:<compar> = VP_f.t:<compar>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP_1:<agr> = NP.t:<agr>#NP_1:<case> = NP.t:<case>#NP_1:<trace> = NP.t:<trace>#NP_1:<wh> = NP.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP_0:<case> = PP_0.b:<assign-case>#NP:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#PP_0.b:<wh> = NP_0:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<mode> = S_r.b:<mode>#S_r.b:<conj> = S.t:<conj>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<wh> = S_r.b:<wh>#S.t:<extracted> = S_r.b:<extracted>#NP.t:<case> = nom/acc
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#P.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<assign-case> = NP_w.t:<assign-case>
##P_r.b:<wh> = P.t:<wh>#Punct:<punct> = P_r.b:<punct>#P.t:<punct struct> = nil#P_r.b:<assign-case> = P.t:<assign-case>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.t:<agr> = NP_r.b:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<mode> = ind#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = NP.t:<case>#NP_2:<agr> = NP.t:<agr>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#NP.t:<wh> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#V.t:<passive> = -#NP_2:<case> = NP.t:<case>
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP.b:<definite> = -#NP.b:<compar> = Ad.t:<compar>#NP.b:<super> = Ad.t:<super>#NP.b:<equiv> = Ad.t:<equiv>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<case> = acc/gen
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#NP:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP:<wh>#PP.b:<wh> = NP:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_1:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#NP.t:<case> = acc#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.t:<tense> = pres#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -#V.b:<mode> = base
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>##NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#####VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<conj> = VP.t:<conj>#VP_r.b:<compar> = Ad.t:<compar>#VP_r.b:<equiv> = Ad.t:<equiv>#VP.t:<mainv> = +
####VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>##VP_r.b:<conj> = VP.t:<conj>#Ad.t:<compar> = VP_r.b:<compar>#VP_r.b:<equiv> = Ad.t:<equiv>#Ad.t:<equiv> = -
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S.t:<inv> = S_r.b:<inv>#S.t:<inv> = S_r.b:<invlink>#S.t:<conj> = S_r.b:<conj>#S.t:<extracted> = S_r.b:<extracted>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = P.t:<wh>#S.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<wh> = NP_0.t:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#VP.t:<mode> = inf/ger#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_1.t:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_1.t:<comp> = nil
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<control> = NP_2.t:<control>#NP_2:<agr> = S_r.b:<agr>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#VP.t:<mode> = inf/ger
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
####S_r.b:<punct struct> = Punct.t:<punct struct>#Punct.t:<punct struct> = comma/dash#S_1.t:<comp> = nil#S_1.t:<comp> = S_r.b:<comp>#S_1.t:<extracted> = S_r.b:<extracted>#S_1.t:<assign-comp> = S_r.b:<assign-comp>#S_1.t:<tense> = S_r.b:<tense>#S_1.t:<wh> = S_r.b:<wh>#S_1.t:<inv> = S_r.b:<inv>#S_1.t:<invlink> = S_r.b:<invlink>#S_1.t:<mode> = S_r.b:<mode>#S_1.t:<assign-case> = S_r.b:<assign-case>#S_1.t:<agr> = S_r.b:<agr>##S.t:<inv> = -#S.t:<mode> = ind#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<assign-case> = VP.t:<assign-case>#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#NP:<agr> = S.b:<agr>#NP:<case> = S.b:<assign-case>#NP:<wh> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>##S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP.t:<case> = acc#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = - #S_1.t:<control> = NP_0.t:<control>#S_r.b:<control> = NP_0.t:<control>#A.t:<compar> = AP_1.b:<compar>
####NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#NP_w.t:<trace> = NP_1.t:<trace>#S_r.t:<inv> = -#S_r.t:<mode> = ind#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####Conj:<conj> = Ad.b:<conj>
##S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart/ger#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#	#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<pron> = NP_f.t:<pron>
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#S_r.b:<punct bal> = Punct_1.t:<punct bal>#S_r.b:<punct struct> = Punct_1.t:<punct struct>#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#S_r.b:<nocomp-mode> = S_f.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<mode> = inf/ind#S_0:<comp> = that/whether/for/nil#S_0:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<compar> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#Ad_r.b:<punct bal> = Punct_1.t:<punct bal>#Ad_r.b:<punct struct> = Ad_f.t:<punct struct>#Ad_r.b:<assign-comp> = Ad_f.t:<assign-comp>#Ad_r.b:<compar> = Ad_f.t:<compar>#Ad_r.b:<equiv> = Ad_f.t:<equiv>
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_1:<case> = acc#NP_2:<wh> = NP_r.b:<wh>#NP_2.t:<case> = none#NP_2.t:<wh> = -#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#V.t:<passive> = +#V.t:<mode> = ppart
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<wh> = NP_0:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#NP_0:<case> = acc/gen
####S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_1.t:<wh> = -#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<gen> = N.t:<gen>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<quan> = N.t:<quan>#NP_1.b:<card> = N.t:<card>#NP_1.b:<const> = N.t:<const>#NP_1.b:<compar> = N.t:<compar>#NP_1.b:<decreas> = N.t:<decreas>#NP_1.b:<definite> = N.t:<definite>#N.t:<compar> = -#VP.b:<compar> = -#VP.b:<mode> = prep##S_0.t:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<assign-comp> = inf_nil#S_0.t:<comp> = that/whether/for/nil
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>##NP_0.t:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc
#######S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#P_0.b:<assign-case> = acc#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#PP_0.b:<assign-case> = P_0.t:<assign-case>##NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#PP.t:<trace> = PP_0.t:<trace>#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = S_r.b:<wh>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_2.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
######NP.t:<case> = nom/acc#NP_g.b:<wh> = NP.t:<wh>#NP_g.t:<case> = gen/nom/acc#NP_g.b:<compar> = -#NP_g.b:<super> = -
#NP_r.b:<wh> = NP_f.t:<wh>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>###S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##NP.t:<case> = nom/acc#S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<extracted> = S_r.b:<extracted>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<wh> = S_r.b:<wh>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Punct.t:<punct contains> =  S_r.b:<punct contains>#NP.t:<punct struct> = nil#NP.t:<conj> = and/or/but/nil#S.t:<mode> = ind/imp#S.t:<punct struct> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_q.b:<comp> = nil#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_1:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1:<trace> = S_1.b:<trace>#NP_1:<wh> = +#S_r.b:<tense> = VP.t:<tense>#S_1.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.t:<conj> = nil
##Punct_1.t:<punct> = Punct_2.t:<punct>#D_r.b:<punct bal> = Punct_1.t:<punct>#D_r.b:<punct struct> = D_f.t:<punct struct>#D_r.b:<agr> = D_f.t:<agr>#D_r.b:<const> = D_f.t:<const>#D_r.b:<predet> = D_f.t:<predet>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<card> = D_f.t:<card>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<wh> = D_f.t:<wh>#D_r.b:<assign-comp> = D_f.t:<assign-comp>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#NP:<trace> = NP:<trace>#NP:<agr> = NP:<agr>#NP:<case> = NP:<case>#NP:<wh> = NP:<wh>
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP_1:<agr> = NP.t:<agr>#NP_1:<case> = NP.t:<case>#NP.t:<wh> = +#NP_1:<trace> = NP.t:<trace>#NP_1:<wh> = NP.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.t:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#NP_0:<wh> = -#NP_0.t:<case> = none#VP.t:<passive> = -#VP.t:<mode> = inf/ger#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_2.t:<wh> = NP_r.b:<wh>#NP_2.t:<case> = none#NP_2.t:<wh> = -#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +
###Conj_1:<conj> = AP.b:<conj>#AP_1.t:<compar> = AP.b:<compar>#AP_2:<compar> = AP.b:<compar>#AP_2:<equiv> = AP.b:<equiv>
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#NP_1:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<wh> = PP.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#PP.t:<trace> = PP.t:<trace>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#PP.t:<trace> = PP_1:<trace>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = prep#VP.b:<compar> = -#VP.b:<assign-case> = acc#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_q.b:<wh> = PP_1.t:<wh>#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<passive> = VP_f.t:<passive>#VP_r.b:<conj> = VP_f.t:<conj>#VP.t:<mainv> = +
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#AP_1.b:<wh> = A.t:<wh>#VP.b:<compar> = -
##S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<conj> = and/or/but/nil#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S.t:<punct struct> = nil#Punct.t:<punct struct>= S_r.b:<punct struct>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<mode> = ind#VP.t:<passive> = +#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_2.t:<wh> = +#NP_2.t:<case> = acc#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_2:<trace> = S_2.t:<trace>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_2:<agr> = NP.t:<agr>#NP_2:<trace> = NP.t:<trace>#NP.t:<case> = NP_2:<case>#NP.t:<wh> = NP_2:<wh>
#S_r.b:<extracted> = -#S_r.b:<wh> = NP_0.t:<wh>##VP.b:<compar> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_1.t:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_1.t:<comp> = nil#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<passive> = VP_f.t:<passive>#VP_r.b:<conj> = VP_f.t:<conj>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
####S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf/ger#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>##NP_w.t:<trace> = NP_0.t:<trace>#NP_w.t:<agr> = NP_0.t:<agr>#NP_w.t:<case> = NP_0.t:<case>
#NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<agr> = VP.t:<agr>#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1:<case> = acc#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<inv> = -#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = S_r.t:<comp>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<tense> = S_r.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<case> = NP_1.t:<case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<passive> = +#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil
##S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#NP:<case> = PP.b:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<wh> = NP.t:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
######NP:<case> = nom/acc#D.b:<wh> = NP:<wh>#D.b:<gen> = G.t:<gen>#G.b:<gen> = +
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#S_f.t:<punct struct> = nil#S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<conj> = S_r.b:<conj>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = ind/imp#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
##S_q.b:<inv> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#NP_1.t:<case> = acc/nom#S_2.t:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_q.b:<agr> = S_r.t:<agr>#S_q.b:<assign-case> = V.t:<assign-case>#S_q.b:<comp> = nil#S_q.b:<conditional> = V.t:<conditional>#S_q.b:<mode> = V.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = V.t:<passive>#S_q.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = V.t:<progressive>#S_r.b:<assign-case> = NP_0:<case>#S_r.t:<conj> = nil#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.t:<assign-case> = S_q.b:<assign-case>#S_r.t:<assign-comp> = S_q.b:<assign-comp>#V.t:<assign-comp> = S_q.b:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<tense> = V.t:<tense>#V.t:<agr> = S_q.b:<agr>#V.b:<mode> = V_r.b:<mode>#VP_r.b:<compar> = -#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<compar> = -#VP_1.b:<mode> = V_1.t:<mode>#V_r.b:<mode> = V_1.b:<mode>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<agr> = VP.t:<agr>#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<const> = D.t:<const>#NP_r.b:<definite> = D.t:<definite>#NP_r.b:<quan> = D.t:<quan>#NP_r.b:<card> = D.t:<card>#NP_r.b:<gen> = D.t:<gen>#NP_r.b:<compl> = D.t:<compl>#NP_r.b:<decreas> = D.t:<decreas>#NP_r.b:<wh> = D.t:<wh>#NP_f.t:<rel-clause> = -#NP_f.t:<gerund> = -#NP_f.t:<case> = nom/acc#NP_r.b:<compar> = -#NP_r.b:<conj> = and/or/nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#NP:<case> = PP.b:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<wh> = NP.t:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_2.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####PP_r.b:<assign-comp> = PP_f.t:<assign-comp>#PP_r.b:<conj> = PP_f.t:<conj>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<compar> = -###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_0:<case> = acc/gen
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##########S_r.b:<inv> = +#S_r.b:<mode> = ind#S.b:<inv> = -#S.b:<comp> = nil#S.t:<agr> = V.b:<agr>#S.t:<conj> = and/or/but/nil#S_r.b:<assign-case> = S.t:<assign-case>#S_r.b:<conditional> = S.t:<conditional>#S_r.b:<perfect> = S.t:<perfect>#S_r.b:<progressive> = S.t:<progressive>#V.t:<assign-case> = S_r.b:<assign-case>#V.t:<mode> = S_r.b:<mode>#V.t:<tense> = S_r.b:<tense>#V.t:<agr> = S_r.b:<agr>#V.t:<neg> = S_r.b:<neg>#V.t:<assign-case> = S.t:<assign-case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_1:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = NP:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
####S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>##S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP.t:<case> = acc#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
####Punct.t:<punct struct> = comma/dash/colon#S_1.t:<comp> = nil#S_1.t:<comp> = S_r.b:<comp>#S_1.t:<extracted> = S_r.b:<extracted>#S_1.t:<assign-comp> = S_r.b:<assign-comp>#S_1.t:<tense> = S_r.b:<tense>#S_1.t:<wh> = S_r.b:<wh>#S_1.t:<inv> = S_r.b:<inv>#S_1.t:<invlink> = S_r.b:<invlink>#S_1.t:<mode> = S_r.b:<mode>#S_1.t:<assign-case> = S_r.b:<assign-case>#S_1.t:<agr> = S_r.b:<agr>##S_q.t:<mode> = ind#S_q.t:<comp> = nil#S_q.b:<comp> = nil#S_q.b:<agr> = V.t:<agr>#S_q.b:<tense> = V.t:<tense>#S_q.b:<mode> = V.t:<mode>#S_q.b:<assign-case> = V:<assign-case>#S_q.b:<assign-case> = S.t:<assign-case>#S_q.b:<agr> = S.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = NP:<case>#S.b:<agr> = NP:<agr>##VP.b:<mode> = V_i.t:<mode>#VP.b:<tense> = V_i.t:<tense>#VP.b:<mainv> = V_i.t:<mainv>#VP.b:<passive> = V_i.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense> = V.t:<tense>#V:<passive> = V.t:<passive>#V.t:<trace> = V_i.t:<trace>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<wh> = PP.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#PP.t:<trace> = PP.t:<trace>
#A_r.b:<neg> = +#A.t:<neg> = +#A.t:<compar> = A_r.b:<compar>#A.t:<equiv> = A_r.b:<equiv>#A.t:<super> = A_r.b:<super>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = -#NP_0:<case> = acc/gen
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<inv> = -#S_r.b:<extracted> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
###S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<wh> = -#NP_0.t:<case> = none#NP_0.t:<agr> = S_r.b:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.t:<mode> = inf/ger#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
###S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#VP.t:<passive> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_0.t:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<assign-case> = acc#VP.b:<mode> = prep#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = imp#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<case> = none#NP_1.t:<wh> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#NP_r.b:<gerund> = +
###NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#NP.b:<compar> = N.t:<compar>#N.t:<compar> = -#V.b:<mode> = ger
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<compar> = -#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
##NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_0.t:<trace>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<agr> = NP_0.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<mode> = inf/ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1:<case> = acc
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = -
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<mode> = ind#VP.t:<passive> = +#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1.t:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#P.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>
#####S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<extracted> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -##VP.b:<compar> = -#NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#AP_r.b:<compar> = -#AP_r.b:<super> = +#AP_f.t:<compar> = P.t:<compar>#AP_f.t:<equiv> = P.t:<equiv>#PP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
##S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_1:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####Ad_r.b:<assign-comp> = Ad_1.t:<assign-comp>#Ad_r.b:<conj> = Ad_1.t:<conj>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<compar> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = AP_2.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#AP.t:<trace> = AP_2.t:<trace>#AP.t:<wh> = AP_2.t:<wh>#AP_2.t:<wh>=+
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP_1:<agr> = NP.t:<agr>#NP_1:<case> = NP.t:<case>#NP_1:<trace> = NP.t:<trace>#NP_1:<wh> = NP.t:<wh>#NP:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>

#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<inv> = -#S_r.b:<extracted> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<assign-case> = NP_2.t:<case>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###S_r.b:<mode> = inf/ger/ppart/base#NP:<case> = NP_1.b:<case>#NP:<trace> = NP_1.b:<trace>#NP:<wh> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_0.t:<wh> = -#NP_1.t:<case> = nom/acc#N.t:<case> = NP_0.b:<case>#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<assign-comp> = inf_nil/ind_nil#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_q.b:<wh> = NP:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = -#VP.b:<tense> = V.t:<tense>#VP.b:<compar> = -#VP_r.b:<compar> = -#S_r.t:<conj> = nil#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_1.t:<trace>#NP:<agr> = NP_1.t:<agr>#NP:<case> = NP_1.t:<case>#NP:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP.t:<case>#PP_1.b:<wh> = NP.t:<wh>#S_r.t:<conj> = nil
####Conj_1:<conj> = PP.b:<conj>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_2.t:<wh> = NP_r.b:<wh>#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#NP_2:<case> = acc/gen

####S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<inv> = -#NP.t:<trace> = NP_0.t:<trace>#NP.t:<case> = NP_0.t:<case>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<assign-case> = S_r.b:<assign-case>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>

#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#NP_1:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_2.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_1.t:<assign-case> = PP_1.b:<assign-case>#NP_1:<case> = PP_1.b:<assign-case>#PP_1.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_1.b:<trace>#PP_w.t:<case> = PP_1.b:<case>#PP_w.t:<agr> = PP_1.b:<agr>#PP_w.b:<assign-case> = P.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<assign-case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
######N.b:<compar> = -
#####NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_1.b:<wh> = NP_1:<wh>#V.b:<mode> = ger
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<compar> = -#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>

#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<wh> = +#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#S_r.t:<mode> = ind/inf#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_c.b:<mode> = S_r.t:<mode>#S_c.b:<extracted> = S_r.t:<extracted>#S_c.b:<wh> = S_r.t:<wh>#S_c.b:<inv> = S_r.t:<inv>#S_c.b:<comp> = S_r.t:<comp>#S_r.t:<punct term> = nil #S_r.t:<punct struct> = comma/nil #S_r.t:<comp> = nil #S_r.t:<conj>=and/or/but/nil#S_c.b:<conj>=disc
####S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf/ger#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_w.t:<trace> = NP_0.t:<trace>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<agr> = NP_0.t:<agr>
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_2.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP.t:<wh> = +#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#PP_0.b:<wh> = NP_0:<wh>#NP_1.t:<case> = acc
###D.b:<neg>=+#D.b:<wh> = D_2.t:<wh>#Conj:<conj> = D.b:<conj>#D.b:<definite> = D_0.t:<definite>#D.b:<agr> = D_0.t:<agr>#D.b:<quan> = D_0.t:<quan>#D.b:<card> = D_0.t:<card>#D.b:<gen> = D_0.t:<gen>#D.b:<decreas> = D_0.t:<decreas>#D.b:<const> = D_0.t:<const>#D.b:<wh> = D_0.t:<wh>#D_0.b:<definite> = D_1.t:<definite>#D_0.b:<agr> = D_1.t:<agr>#D_0.b:<quan> = D_1.t:<quan>#D_0.b:<card> = D_1.t:<card>#D_0.b:<gen> = D_1.t:<gen>#D_0.b:<decreas> = D_1.t:<decreas>#D_0.b:<const> = D_1.t:<const>#D_0.b:<wh> = D_1.t:<wh>
####NP_0:<case> = acc/none/gen#NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_0:<compar>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc##VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##PP_0.b:<assign-case> = P_0.t:<assign-case>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#PP_0.t:<trace> = PP.t:<trace>#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<comp> = nil#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#PP_w:<wh> = +#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
NP.t:<case> = nom/acc#D.b:<wh> = NP.t:<wh>#D.b:<gen> = G.t:<gen>#G.b:<gen> = +#NP_r.b:<wh> = D.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_f.t:<conj> = NP_r.b:<conj>#NP_r.b:<definite> = D.t:<definite>#NP_r.b:<quan> = D.t:<quan>#NP_r.b:<card> = D.t:<card>#NP_r.b:<gen> = D.t:<gen>#NP_r.b:<compl> = D.t:<compl>#NP_r.b:<decreas> = D.t:<decreas>#NP_r.b:<case> = NP_f.t:<case>#NP_f.t:<case> = nom/acc#NP_f.t:<decreas> = -#NP_f.t:<definite> = -#NP_f.t:<card> = -#NP_f.t:<const> = -#NP_f.t:<gen> = -#NP_f.t:<quan> = -#NP_r.b:<compar> = -#NP_f.t:<gerund> = -#NP_f.t:<rel-clause> = -#NP_r.b:<conj> = and/or/nil
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>##S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#VP.t:<agr pers> = 3#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc
##V_r.b:<passive> = V.t:<passive>#V.t:<contr> = V_r.b:<contr>#V_r.b:<agr> = V.t:<agr>#V_r.b:<assign-case> = V.t:<assign-case>#V_r.b:<assign-comp> = V.t:<assign-comp>#V_r.b:<mode> = V.t:<mode>#V_r.b:<tense> = V.t:<tense>#V_r.b:<mainv> = V.t:<mainv>#V.t:<refl> = V_r.b:<refl>#V.t:<punct struct> = nil#Punct:<punct struct> = V_r.b:<punct struct>#Punct:<punct contains> = V_r.b:<punct contains>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<wh> = NP_r.b:<wh>#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -
#####NP_r.b:<agr> = NP_1.t:<agr>#NP_r.b:<case> = NP_1.t:<case>#NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<conj> = NP_1.t:<conj>#NP_1.b:<case> = acc/nom#NP_r.b:<assign-comp> = NP_1.t:<assign-comp>#NP_r.b:<card> = NP_1.t:<card>#NP_r.b:<const> = NP_1.t:<const>#NP_r.b:<quan> = NP_1.t:<quan>#NP_r.b:<decreas> = NP_1.t:<decreas>#NP_r.b:<definite> = NP_1.t:<definite>#NP_r.b:<gen> = NP_1.t:<gen>#NP_1.t:<rel-clause> = NP_r.b:<rel-clause>#NP_2.t:<case> = nom/acc
###NP.b:<case> = NP_1.t:<case>#NP.b:<case> = NP_2.t:<case>#NP.b:<case> = nom/acc#NP.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = NP_2.t:<wh>#Conj:<conj> = NP.b:<conj>#NP.b:<const> = NP_1.t:<const>#NP.b:<gen> = NP_1.t:<gen>#NP.b:<definite> = NP_1.t:<definite>#NP.b:<quan> = NP_1.t:<quan>#NP.b:<card> = NP_1.t:<card>#NP.b:<decreas> = NP_1.t:<decreas>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
###NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_0.t:<trace>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<agr> = NP_0.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<mode> = inf/ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1:<case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<control> = NP_2.t:<control>#NP_2:<agr> = S_r.b:<agr>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####Conj:<conj> = Ad_r.b:<conj>
#####PP_r.b:<assign-comp> = PP_f.t:<assign-comp>#PP_r.b:<conj> = PP_f.t:<conj>
####S_r.b:<punct struct> = Punct.t:<punct struct>#Punct.t:<punct struct> = comma/dash/colon#S_1.t:<comp> = nil#S_1.t:<comp> = S_r.b:<comp>#S_1.t:<extracted> = S_r.b:<extracted>#S_1.t:<assign-comp> = S_r.b:<assign-comp>#S_1.t:<tense> = S_r.b:<tense>#S_1.t:<wh> = S_r.b:<wh>#S_1.t:<inv> = S_r.b:<inv>#S_1.t:<invlink> = S_r.b:<invlink>#S_1.t:<mode> = S_r.b:<mode>#S_1.t:<assign-case> = S_r.b:<assign-case>#S_1.t:<agr> = S_r.b:<agr>##S.t:<inv> = -#S.t:<mode> = ind/inf#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<assign-case> = VP.t:<assign-case>#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#NP:<agr> = S.b:<agr>#NP:<case> = S.b:<assign-case>#NP:<wh> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#VP.t:<passive> = -#VP.t:<agr pers> = 3#S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<wh> = +#S_0:<assign-case> = NP_0:<case>#S_0:<trace> = NP_0:<trace>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<assign-case> = acc#VP.b:<mode> = nom#S_r.t:<conj> = nil#A.t:<compar> = AP_1.b:<compar>
#####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0.t:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#S_r.t:<conj> = nil#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<assign-case> = acc
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
###NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#NP_1:<case> = acc#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<conj> = N.t:<conj>#NP_1.b:<const> = D.t:<const>#NP_1.b:<definite> = D.t:<definite>#NP_1.b:<quan> = D.t:<quan>#NP_1.b:<card> = D.t:<card>#NP_1.b:<gen> = D.t:<gen>#NP_1.b:<decreas> = D.t:<decreas>#NP_1.b:<wh> = D.t:<wh>#NP_1.t:<case> = nom/acc#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<wh> = NP_r.b:<wh>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#####S_q.b:<comp> = nil#S_q.b:<extracted> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#NP_1.t:<wh> = NP.t:<wh>#NP_1.t:<trace> = NP.t:<trace>#NP_1.t:<agr> = NP.t:<agr>#NP_1.t:<case> = NP.t:<case>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
######S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
######NP_r.b:<wh> = N.t:<wh>#NP_r.b:<agr> = N.t:<agr>#NP_r.b:<case> = N.t:<case>#NP_r.b:<pron> = N.t:<pron>#NP_r.b:<conj> = N.t:<conj>#NP_r.b:<card> = N.t:<card>#NP_r.b:<const> = N.t:<const>#NP_r.b:<quan> = N.t:<quan>#NP_r.b:<decreas> = N.t:<decreas>#NP_r.b:<definite> = N.t:<definite>#NP_r.b:<gen> = N.t:<gen>#NP_r.b:<compar> = N.t:<compar>#NP_r.b:<equiv> = N.t:<equiv>#NP_r.b:<super> = N.t:<super>#N.b:<compar> = -#S.t:<extracted> = -#S.t:<inv> = - #S.t:<comp> = that/nil#S.t:<mode> = inf/ind
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP_w.b:<assign-case>#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.t:<passive> = -#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#S_r.t:<case> = nom#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil
#NP_1:<case> = acc#NP_2:<wh> = NP_r.b:<wh>#NP_2:<case> = none#NP_2.t:<wh> = -#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +
###S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#NP_0.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<wh> = -#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.t:<agr> = NP_r.b:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####V_r.b:<tense> = V_f.t:<tense>#V_r.b:<mode> = V_f.t:<mode>#V_r.b:<agr> = V_f.t:<agr>#V_r.b:<assign-case> = V_f.t:<assign-case>#V_r.b:<assign-comp> = V_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = V_r.b:<punct struct>#Punct_1.t:<punct struct> = comma/dash#S.b:<agr> = NP.t:<agr>#S.b:<assign-case> = NP.t:<case>#NP.t:<wh> = -#S.t:<mode> = ind#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = VP:<assign-case>##VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense> = V.t:<tense>#V:<passive> = V.t:<passive>
##N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<predet> = N_f.t:<predet>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<case> = N_f.t:<case>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<conj> = N_f.t:<conj>#N_f.t:<conj> = and/or/nil#N_f.t:<case> = acc/nom#N_f.t:<pron> = - #N_r.b:<assign-comp> = N_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#Punct_1.t:<punct contains> = N_r.b:<punct contains>#Punct_1.t:<punct struct> = N_r.b:<punct struct>#Punct_1.t:<punct bal> = N_r.b:<punct bal>#NP.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
######S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_1.t:<case> = acc#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
####S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
######S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_q.b:<wh>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<wh> = NP_0.t:<wh>##S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>###VP.b:<compar> = -#S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#S_r.t:<conj> = nil
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP.t:<agr> = NP_1:<agr>#NP.t:<case> = NP_1:<case>#NP.t:<wh> = NP_1:<wh>#NP_1.t:<wh> = +#NP.t:<trace> = NP_1:<trace>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#NP_r.b:<gerund> = +#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_0.t:<wh> = -#NP_0.t:<case> = none
###PP.b:<neg>=+#Conj:<conj> = PP.b:<conj>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0:<control>
####NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<case> = NP.t:<case>#NP_w.t:<agr> = NP.t:<agr>#NP_w.t:<trace> = NP.t:<trace>#S_r.t:<inv> = -#S_r.t:<mode> = ind#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#NP_0.t:<wh> = -#NP_0.t:<agr pers> = 2#NP_0.t:<agr 3rdsing> = -#NP_0.t:<agr num> = plur/sing#NP_0.t:<case> = nom#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>##NP_r.b:<gerund> = +#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#######NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.t:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_2:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#PP_2.t:<trace> = PP.t:<trace>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#P_2.t:<assign-case> = PP_2.b:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#PP_2.b:<wh> = NP_2.t:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -
##S_r.b:<extracted> = -#S_r.b:<wh> = NP_0.t:<wh>##VP.b:<compar> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_1.t:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_1.t:<comp> = nil
###S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#P_1.t:<assign-case> = PP_1.b:<assign-case>#NP_1:<case> = PP_1.b:<assign-case>#PP_1.b:<wh> = NP_1:<wh>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
####S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1.t:<case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####VP_r.b:<mode> = VP_f.t:<mode>#VP_r.b:<agr> = VP_f.t:<agr>#VP_r.b:<tense> = VP_f.t:<tense>#VP_r.b:<assign-comp> = VP_f.t:<assign-comp>#VP_r.b:<assign-case> = VP_f.t:<assign-case>#VP_r.b:<passive> = VP_f.t:<passive>#VP_r.b:<conj> = VP_f.t:<conj>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<mode> = ind#VP.t:<passive> = +#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_0.t:<wh> = -#VP.b:<compar> = -##VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#V.t:<passive> = -#V.t:<punct struct> = nil
######NP.b:<wh> = G.t:<wh>#NP.t:<case> = nom/acc/gen#NP.b:<compar> = -#NP.b:<super> = -
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<agr> = NP_1.t:<agr>#VP.b:<compar> = -#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S.t:<wh> = -#S.t:<extracted> = -#S.t:<inv> = -#S.t:<punct struct> = nil#S_r.b:<comp> = S_f:<comp>#S_r.b:<conj> = S_f:<conj>#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_f:<mode> = ind/imp#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh>#S_r.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
######NP.b:<agr> = N.t:<agr>#NP.b:<refl> = N.t:<refl>#NP.b:<case> = N.t:<case>#NP.b:<wh> = N.t:<wh>#NP.b:<case> = nom/acc#NP.b:<pron> = N.t:<pron>#NP.b:<conj> = N.t:<conj>#NP.b:<card> = N.t:<card>#NP.b:<const> = N.t:<const>#NP.b:<quan> = N.t:<quan>#NP.b:<decreas> = N.t:<decreas>#NP.b:<definite> = N.t:<definite>#NP.b:<gen> = N.t:<gen>#NP.b:<compl> = N.t:<compl>#NP.b:<compar> = N.t:<compar>#NP.b:<super> = N.t:<super>#NP.b:<equiv> = N.t:<equiv>#N.b:<compar> = -
#NP_2:<case> = acc#NP_1:<case> = acc#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<gerund> = +
#####D_r.b:<agr> = D_f.t:<agr>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<card> = D_f.t:<card>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<wh> = D_f.t:<wh>#D_r.b:<assign-comp> = D_f.t:<assign-comp>#D_f.t:<conj> = D_r.b:<conj>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###PP:<trace> = PP_1.b:<trace>#PP:<wh> = +#NP_0:<agr> = S.b:<agr>#NP_0.b:<case> = N.t:<case>#NP_0.b:<agr> = N.t:<agr>#S.t:<agr> = S_r.b:<agr>#NP_0:<case> = S.b:<assign-case>#S.t:<assign-case> = S_r.b:<assign-case>#S_r.b:<assign-case> = V.t:<assign-case>#S_2.t:<assign-comp> = ind_nil#S_2.t:<comp> = that/nil#S_2:<extracted> = -#S_2:<inv> = -#S_2:<mode> = ind#S_q.b:<assign-comp> = S_r.t:<assign-comp>#S_r.b:<assign-comp> = V.t:<assign-comp>#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_r.b:<conditional> = V.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_r.b:<passive> = V.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_r.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_r.b:<progressive> = V.t:<progressive>#S_q.b:<wh> = PP:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<agr> = V.t:<agr>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = V.t:<mode>#S_r.b:<tense> = V.t:<tense>##VP_1.b:<compar> = -#VP_r.b:<compar> = -#S_r.t:<conj> = nil#P_1.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#V.b:<mode> = V_r.b:<mode>#V_r.b:<mode> = V_1.b:<mode>#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -##VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<wh> = NP_0.t:<wh>##S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_1.t:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_1.t:<comp> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####Ad_r.b:<assign-comp> = Ad_1.t:<assign-comp>#Ad_r.b:<conj> = Ad_1.t:<conj>#Ad_r.b:<compar> = Ad_1.t:<compar>#Ad_r.b:<equiv> = Ad_1.t:<equiv>#Ad_r.b:<super> = Ad_1.t:<super>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##########VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>#VP.t:<assign-comp> = ecm#V.t:<assign-case> = VP_r.b:<assign-case>#V.t:<mode> = VP_r.b:<mode>#V.t:<tense> = VP_r.b:<tense>#V.t:<mainv> = VP_r.b:<mainv>#V.t:<agr> = VP_r.b:<agr>#V.t:<neg> = VP_r.b:<neg>#V.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -#PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#P.t:<assign-case> = acc
#####NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +##NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<compar> = NP_1.t:<compar>#NP_1.t:<case> = acc/none/gen#VP.b:<compar> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
####S.t:<wh> = -#S.t:<extracted> = -#S.t:<inv> = -#S.t:<punct struct> = nil#S_r.b:<comp> = S_f:<comp>#S_r.b:<conj> = S_f:<conj>#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_f:<mode> = ind/imp#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh>#S_r.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#NP_1:<case> = acc/gen
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#VP_r.b:<conj> = VP_f:<conj>#VP_f:<mode> = ind/imp#VP_r.b:<mode> = VP_f:<mode>#VP_f:<mode> = ind/imp#VP_r.b:<assign-comp> = VP_f:<assign-comp>#VP_r.b:<agr> = VP_f:<agr>#VP_r.b:<tense> = VP_f:<tense>#VP_r.b:<assign-case> = VP_f:<assign-case>#VP_r.b:<passive> = VP_f:<passive>#VP_f.t:<compar> = -#VP_r.b:<compar> = VP_f.t:<compar>#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +

#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr num> = sing#VP.b:<agr pers> = 3#VP.b:<agr 3rdsing> = +#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.t:<case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#PP_w.t:<wh> = +#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_2:<case> = acc#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>##S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#VP.t:<agr pers> = 3#S_0.t:<mode> = inf/ind#S_0.t:<comp> = that/for/whether/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_0:<wh> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_1.t:<case> = acc#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#####Ad_r.b:<assign-comp> = Ad_1.t:<assign-comp>#Ad_r.b:<conj> = Ad_1.t:<conj>#Ad_r.b:<compar> = Ad_1.t:<compar>#Ad_r.b:<equiv> = Ad_1.t:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_2:<case> = acc#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_q.b:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_0:<assign-case>=NP_0:<case>#S_0:<trace>=NP_0:<trace>#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0:<mode> = inf/ind#S_0:<comp> = that/whether/for/nil#S_0:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense>=V.t:<tense>##VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv>=-
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#NP_1:<case> = acc/gen
####S_r.b:<punct struct> = Punct.t:<punct struct>#S_1.t:<comp> = nil#S_1.t:<comp> = S_r.b:<comp>#S_1.t:<extracted> = S_r.b:<extracted>#S_1.t:<assign-comp> = S_r.b:<assign-comp>#S_1.t:<tense> = S_r.b:<tense>#S_1.t:<wh> = S_r.b:<wh>#S_1.t:<inv> = S_r.b:<inv>#S_1.t:<invlink> = S_r.b:<invlink>#S_1.t:<mode> = S_r.b:<mode>#S_1.t:<assign-case> = S_r.b:<assign-case>#S_1.t:<agr> = S_r.b:<agr>##S.t:<inv> = -#S.t:<mode> = ind/inf#S.t:<comp> = nil#S.b:<comp> = nil#S.b:<assign-case> = VP.t:<assign-case>#S.b:<agr> = VP.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#NP:<agr> = S.b:<agr>#NP:<case> = S.b:<assign-case>#NP:<wh> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense>=V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_1:<case>=acc
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#VP_r.b:<conj> = VP_f:<conj>#VP_f:<mode> = ind/imp#VP_r.b:<mode> = VP_f:<mode>#VP_f:<mode> = ind/imp#VP_r.b:<assign-comp> = VP_f:<assign-comp>#VP_r.b:<agr> = VP_f:<agr>#VP_r.b:<tense> = VP_f:<tense>#VP_r.b:<assign-case> = VP_f:<assign-case>#VP_r.b:<passive> = VP_f:<passive>#P.t:<compar> = VP_f.t:<compar>#P.t:<equiv> = VP_f.t:<equiv>#VP_r.b:<compar> = -#VP_r.b:<mainv> = VP_f.t:<mainv>#VP.t:<mainv> = +
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_1:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>
##S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<conj> = nil#S_r.t:<comp> = nil##S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>##VP.b:<compar> = -#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP.t:<wh> = NP_0.t:<wh>#NP_0.t:<wh> = +#NP_0.t:<trace> = NP.t:<trace> #NP_0.t:<case> = NP.t:<case>#NP_0.t:<agr> = NP.t:<agr>
###D.b:<definite> = D_1.t:<definite>#D.b:<agr> = D_1.t:<agr>#D.b:<quan> = D_1.t:<quan>#D.b:<card> = D_1.t:<card>#D.b:<gen> = D_1.t:<gen>#D.b:<decreas> = D_1.t:<decreas>#D.b:<const> = D_1.t:<const>#D.b:<wh> = D_1.t:<wh>#D.b:<wh> = D_2.t:<wh>#Conj_1:<conj> = D.b:<conj>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
###A.b:<neg>=+##Conj:<conj> = A.b:<conj>#A_1.t:<compar> = A.b:<compar>#A_2:<compar> = A.b:<compar>#A_2:<equiv> = A.b:<equiv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.t:<conj> = nil#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<case> = PP.b:<assign-case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = +#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<wh> = PP.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#PP.t:<trace> = PP.t:<trace>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_2:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = NP:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP:<trace> = NP_2:<trace>#NP:<agr> = NP_2:<agr>#NP:<case> = NP_2:<case>#NP:<wh> = NP_2:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#VP.b:<compar> = -
#####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_q.b:<wh> = PP_1.t:<wh>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#PP_1.t:<trace> = PP.t:<trace>#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<nocomp-mode> = inf/ger#S_r.t:<conj> = nil#S_r.t:<inv> = -#S_r.t:<mode> = inf/ger/ind#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#####Ad_r.b:<assign-comp> = Ad_1.t:<assign-comp>#Ad_r.b:<conj> = Ad_1.t:<conj>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<assign-case> = Comp.t:<assign-case>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>

#####V_r.b:<tense> = V_f.t:<tense>#V_r.b:<mode> = V_f.t:<mode>#V_r.b:<agr> = V_f.t:<agr>#V_r.b:<assign-case> = V_f.t:<assign-case>#V_r.b:<assign-comp> = V_f.t:<assign-comp>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = V_r.b:<punct struct>#Punct_1.t:<punct struct> = comma/dash#S_q.t:<mode> = ind#S_q.t:<comp> = nil#S_q.b:<comp> = nil#S_q.b:<agr> = V.t:<agr>#S_q.b:<tense> = V.t:<tense>#S_q.b:<mode> = V.t:<mode>#S_q.b:<assign-case> = V:<assign-case>#S_q.b:<assign-case> = S.t:<assign-case>#S_q.b:<agr> = S.t:<agr>#S.b:<tense> = VP.t:<tense>#S.b:<mode> = VP.t:<mode>#S.b:<assign-case> = NP:<case>#S.b:<agr> = NP:<agr>#VP.b:<mode> = V_i.t:<mode>#VP.b:<tense> = V_i.t:<tense>#VP.b:<mainv> = V_i.t:<mainv>#VP.b:<passive> = V_i.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#V:<assign-comp> = V.t:<assign-comp>#V:<mode> = V.t:<mode>#V:<tense> = V.t:<tense>#V:<passive> = V.t:<passive>#V.t:<trace> = V_i.t:<trace>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -
#NP_r.b:<wh> = NP_f.t:<wh>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<wh> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>###S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#PP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####A.b:<wh> = -#V.t:<mode> = ppart#V.t:<punct struct> = nil
####S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_f.b:<refl> = -#NP_1.t:<case> = acc#S_r.t:<conj> = nil#NP_r.b:<pron> = NP_f.t:<pron>#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>
######PP.b:<wh> = P.t:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = PP.t:<wh>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.t:<trace> = PP.t:<trace>#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<wh> = NP_1:<wh>#S_r.b:<agr> = NP_1:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1:<wh> = -#NP_1.t:<case> = none#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-comp> = V.t:<assign-comp>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = +#V.t:<mode> = ppart#V.t:<punct struct> = nil#VP.t:<mode> = inf/ger
#NP_1:<case> = acc#NP_2:<wh> = NP_r.b:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +##NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#V.t:<passive> = +#V.t:<mode> = ppart#NP_2:<case> = acc/gen
D_r.b:<wh> = D_f.t:<wh>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<card> = D_f.t:<card>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<compl> = D_f.t:<compl>#D_r.b:<const> = D_f.t:<const>#D_r.b:<agr> = D.t:<agr>#D.t:<agr num> = plur
#####D_r.b:<agr> = D_f.t:<agr>#D_r.b:<definite> = D_f.t:<definite>#D_r.b:<quan> = D_f.t:<quan>#D_r.b:<card> = D_f.t:<card>#D_r.b:<gen> = D_f.t:<gen>#D_r.b:<decreas> = D_f.t:<decreas>#D_r.b:<wh> = D_f.t:<wh>#D_r.b:<assign-comp> = D_f.t:<assign-comp>#D_f.t:<conj> = D_r.b:<conj>
####Conj:<conj> = Ad_r.b:<conj>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -

####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>
###D.b:<definite> = D_1.t:<definite>#D.b:<agr> = D_1.t:<agr>#D.b:<quan> = D_1.t:<quan>#D.b:<card> = D_1.t:<card>#D.b:<gen> = D_1.t:<gen>#D.b:<decreas> = D_1.t:<decreas>#D.b:<const> = D_1.t:<const>#D.b:<wh> = D_1.t:<wh>#D.b:<wh> = D_2.t:<wh>#Conj:<conj> = D.b:<conj>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<conj> = S_r.b:<conj>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Ad_1.t:<wh>= S_r.b:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = imp#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<agr> = NP_1.t:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#VP.t:<passive> = -#VP.b:<compar> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
####NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_0.t:<trace>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<agr> = NP_0.t:<agr>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<mode> = ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_1:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#NP.t:<case> = acc#NP:<trace> = NP_1.t:<trace>#NP:<agr> = NP_1.t:<agr>#NP:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2.t:<case>#NP_2:<wh> = -#NP_f.b:<case> = acc/nom#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<conj> = N.t:<conj>#NP_1.b:<const> = D.t:<const>#NP_1.b:<definite> = D.t:<definite>#NP_1.b:<quan> = D.t:<quan>#NP_1.b:<card> = D.t:<card>#NP_1.b:<gen> = D.t:<gen>#NP_1.b:<decreas> = D.t:<decreas>#NP_1.b:<wh> = D.t:<wh>#NP_1.t:<case> = nom/acc#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP_r.t:<assign-comp>##VP_1.t:<mode> = VP_r.b:<mode>#VP_1.t:<mode> = VP_1.b:<mode>#S_r.b:<mode> = VP_r.t:<mode>#S_r.b:<mainv> = VP_r.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP_r.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = nom/acc#S_r.b:<agr> = VP_r.t:<agr>#S_r.b:<assign-case> = VP_r.t:<assign-case>#V.t:<passive> = -#V.t:<mainv> = -#VP_r.b:<passive> = V.t:<passive>#VP_r.b:<agr> = V.t:<agr>#VP_r.b:<assign-case> = V.t:<assign-case>#VP_r.b:<assign-comp> = V.t:<assign-comp>#VP_r.b:<mode> = V.t:<mode>#VP_r.b:<tense> = V.t:<tense>#VP_r.b:<mainv> = V.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#NP_0:<gerund> = -#NP_1:<gerund> = -#VP_r.b:<compar> = -#VP_1.b:<compar> = -
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
######A.t:<wh> = AP.b:<wh>#A.t:<compar> = AP.b:<compar>#A.t:<equiv> = AP.b:<equiv>#A.t:<super> = AP.b:<super>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<agr> = NP_1:<agr>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1:<wh> = -#NP_0.t:<case> = none#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-comp> = V.t:<assign-comp>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<passive> = +#V.t:<mode> = ppart#V.t:<punct struct> = nil#VP.t:<mode> = inf/ger
##S_q.b:<inv> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_2.t:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_q.b:<agr> = S_r.t:<agr>#S_q.b:<assign-case> = V.t:<assign-case>#S_q.b:<comp> = nil#S_q.b:<conditional> = V.t:<conditional>#S_q.b:<mode> = V.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = V.t:<passive>#S_q.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = V.t:<progressive>#S_r.b:<assign-case> = NP_0:<case>#S_r.t:<assign-comp> = S_q.b:<assign-comp>#V.t:<assign-comp> = S_q.b:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<tense> = V.t:<tense>#S_r.t:<assign-case> = S_q.b:<assign-case>#S_r.t:<assign-comp> = inf_nil/ind_nil#V.t:<agr> = S_q.b:<agr>##VP_1.b:<compar> = -#VP_r.b:<compar> = -##S_r.t:<conj> = nil#V.b:<mode> = V_r.b:<mode>#V_r.b:<mode> = V_1.b:<mode>#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<mode> = base#VP.t:<neg> = -#VP.t:<tense> = pres#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<mode> = ind/inf#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1.t:<case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<wh> = -#NP_0.t:<case> = none#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.t:<passive> = -#VP.t:<agr pers> = 3#VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0.t:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1.t:<case> = nom/acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>#AdvP_1.b:<wh> = NP_1:<wh>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP_1:<agr> = NP.t:<agr>#NP_1:<case> = NP.t:<case>#NP_1:<wh> = NP.t:<wh>#NP.t:<wh> = +#NP_1:<trace> = NP.t:<trace>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.t:<conj> = nil#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<assign-case> = NP_w.t:<assign-case>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
##NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_1.t:<assign-case> = PP_1.b:<assign-case>#NP_1:<case> = PP_1.b:<assign-case>#PP_1.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.t:<mode> = inf/ger#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#NP_1:<case> = acc
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P_1.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
##NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#VP.t:<passive> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1.t:<case> = none#NP_1.t:<wh> = -#NP_1:<wh> = NP_r.b:<wh>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
#S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_1:<wh>#S_r.b:<inv> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#NP.t:<agr> = NP.t:<agr>#NP.t:<case> = NP.t:<case>#NP.t:<wh> = NP.t:<wh>#NP.t:<wh> = +#NP.t:<trace> = NP.t:<trace>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.t:<conj> = nil#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>

#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
####NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<compar> = NP_1:<compar>#NP_1:<case> = acc/none/gen#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>##S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V.t:<punct struct> = nil#NP.t:<case> = acc#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<gerund> = NP_r.b:<gerund>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
####S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.t:<conj> = nil##NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<trace> = NP_0.t:<trace>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#S_r.b:<wh> = PP.t:<wh>#PP.b:<wh> = NP:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP:<case>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#NP_1.t:<case> = nom/acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_1.t:<comp> = nil#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1.t:<case> = nom/acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>#AdvP_1.b:<wh> = NP_1:<wh>#VP.t:<mode> = inf/ger
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>#NP:<trace> = NP_0:<trace>#NP_0:<agr> = NP.t:<agr>#NP_0:<case> = NP.t:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#AP_1.b:<wh> = A.t:<wh>#VP.b:<compar> = -#VP.t:<passive> = -
#######S_r.b:<inv> = +#S_r.b:<mode> = imp#S.b:<inv> = -#S.b:<comp> = nil#S.t:<agr> = V.b:<agr>#S_r.b:<conditional> = S.t:<conditional>#S_r.b:<perfect> = S.t:<perfect>#S_r.b:<progressive> = S.t:<progressive>#V.t:<tense> = S_r.b:<tense>#V.t:<agr> = S_r.b:<agr>#V.t:<neg> = S_r.b:<neg>#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>#V.b:<mode> = base
####Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#Punct_1.t:<punct struct> = comma/dash#VP_r.b:<punct struct> = Punct_1.t:<punct struct>#VP.t:<punct struct> = nil#VP.t:<punct bal> = nil#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#NP.t:<case> = nom/acc
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#N_r.b:<punct bal> = Punct_1.t:<punct bal>#N_r.b:<punct struct> = N_f.t:<punct struct>#N_r.b:<case> = N_f.t:<case>#N_r.b:<agr> = N_f.t:<agr>#N_r.b:<assign-comp> = N_f.t:<assign-comp>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<conj> = N_f.t:<conj>#N_r.b:<const> = N_f.t:<const>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<card> = N_f.t:<card>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<predet> = N_f.t:<predet>#N_r.b:<compar> = N_f.t:<compar>#N_r.b:<equiv> = N_f.t:<equiv>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#NP:<trace> = NP:<trace>#NP:<agr> = NP:<agr>#NP:<case> = NP:<case>#NP:<wh> = NP:<wh>
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<compar> = -#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/ppart#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#NP_0:<case> = acc/gen
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>##S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +##S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<wh> = NP_1.t:<wh>##VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>##V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +
#NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +##NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<compar> = NP_1.t:<compar>#VP.b:<compar> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#NP_1:<case> = acc/gen
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.t:<tense> = pres#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<assign-comp> = none#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1.t:<wh> = -#NP_1.t:<case> = none#NP_1.t:<agr> = S_r.b:<agr>#VP.t:<mode> = inf/ger#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc
#VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>#VP_r.b:<passive> = VP.t:<passive>#VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<mainv> = VP.t:<mainv>#VP_r.b:<neg> = +#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>##VP_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<mode> = inf/base/ger/ppart/nom/prep/imp#VP_r.b:<compar> = -
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>##S_r.t:<inv> = -#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<assign-case> = NP_2.t:<case>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf/ppart#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#PP_0.t:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#PP_1:<trace> = PP.t:<trace>#S_q.b:<wh> = PP_1:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<control> = NP_2.t:<control>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<gerund> = +
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<mode> = inf/ger/ppart/base#Ad:<trace> = Ad_1.b:<trace>#Ad:<wh> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_0.t:<wh> = -#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<assign-comp> = inf_nil/ind_nil#S_q.b:<comp> = nil#S_q.b:<conditional> = S_r.t:<conditional>#S_q.b:<inv> = +#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = S_r.t:<passive>#S_q.b:<perfect> = S_r.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = S_r.t:<progressive>#S_q.b:<wh> = Ad:<wh>#S_q.t:<assign-comp> = inf_nil/ind_nil#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = -#VP.b:<tense> = V.t:<tense>#VP.b:<compar> = -#VP_1.b:<compar> = -#S_r.t:<conj> = nil#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#A_f.t:<compar> = -#A_f.t:<super> = -#A_r.b:<compar> = A_f.t:<compar>#A_r.b:<super> = +
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#S_r.t:<conj> = nil#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind/prep#S_r.t:<nocomp-mode> = inf/ger/prep#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<agr> = NP_1.t:<agr>#VP.b:<compar> = -#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>

#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<wh> = -#NP_1.t:<case> = none#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc#VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc
##S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#VP.t:<passive> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = - #S_1.t:<control> = NP_0.t:<control>#S_r.t:<conj> = nil#A.t:<compar> = AP_1.b:<compar>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<case> = acc/gen
####S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<control> = NP_1:<control>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP.t:<case>#PP_0.b:<wh> = NP.t:<wh>#P_0.b:<assign-case> = acc#S_q.b:<wh> = NP_0:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.t:<comp> = nil#S_r.t:<conj> = nil#V.t:<punct struct> = nil#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm###S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<case> = N_1.t:<case>#NP_1.b:<wh> = N_1.t:<wh>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#S_r.t:<conj> = nil
###NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#NP_w.t:<trace> = NP_1.t:<trace>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf/ppart#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = acc/nom#PP_w.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<inv> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0.t:<wh> = -#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#V.t:<passive> = -#V.t:<punct struct> = nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.t:<nocomp-mode>#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_0:<case> = acc/gen
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_2.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<extracted> = S_r.b:<extracted>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<wh> = S_r.b:<wh>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#S_f.t:<punct struct> = nil#S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<conj> = S_r.b:<conj>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = ind/imp#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
##NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_f.b:<case> = nom/acc#NP_w.t:<wh> = +#NP_w.t:<agr> = NP_0.t:<agr>#NP_w.t:<case> = NP_0.t:<case>#NP_w.t:<trace> = NP_0.t:<trace>#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#V.t:<passive> = -#V.t:<punct struct> = nil
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = PP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<gen> = NP_f.t:<gen>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<predet> = NP_f.t:<predet>#Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#NP_r.b:<punct struct> = NP_f.t:<punct struct>#NP_r.b:<punct bal> = Punct_1.t:<punct bal>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.t:<case> = acc/nom#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<compar> = NP_f.t:<compar>#NP_r.b:<equiv> = NP_f.t:<equiv>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#NP_0.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm##S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>##NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP.t:<wh> = NP_0.t:<wh>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#NP:<wh> = PP_0.b:<wh>#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1.t:<wh> = -#NP_1.t:<case> = none#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#NP_2.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.t:<mode> = inf/ger#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
###Conj_1:<conj> = A.b:<conj>#A_1.t:<compar> = A.b:<compar>#A_2:<compar> = A.b:<compar>#A_2:<equiv> = A.b:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#VP.t:<mode> = inf/ger
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc##VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#NP_r.b:<gerund> = +#A.t:<compar> = AP_1.b:<compar>#NP_0:<case> = acc/gen
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#NP_0:<case> = acc/gen
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = nom#VP.b:<assign-case> = acc#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#A.t:<compar> = AP_1.b:<compar>#A.t:<equiv> = AP_1.b:<equiv>#VP.b:<compar> = -#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>##S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil##S_r.b:<inv> = -#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#VP.t:<tense> = pres#S_r.b:<wh> = NP_0:<wh>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<control> = NP_0.t:<control>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = NP_0:<agr>#S_r.b:<assign-case> = NP_0:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####Ad_r.b:<assign-comp> = Ad_1.t:<assign-comp>#Ad_r.b:<conj> = Ad_1.t:<conj>
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#NP:<case> = PP.b:<assign-case>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<wh> = NP.t:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ppart/ger/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<case> = none#NP_1.t:<wh> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>
#####NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#PP_w.t:<wh> = +#S_r.t:<inv> = -#S_r.t:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_1.t:<control>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP_1.t:<wh> = -#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#VP.t:<mode> = inf/ger
##S_r.t:<mode> = inf/ind#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = imp#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = ecm#S_1.t:<inv> = -#S_1.t:<extracted> = -#S_1.t:<control> = NP_0.t:<control>#S_1.t:<comp> = nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<wh> = NP_0:<wh>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = VP_e.t:<compar>#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -#VP.t:<mode> = inf/ger
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#NP_1.t:<case> = nom/acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#AdvP_1.b:<wh> = NP_1:<wh>
##NP_0:<wh> = NP_r.b:<wh>#NP_r.b:<compar> = NP_0:<compar>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1:<case> = acc##VP.t:<mode> = ger#VP.b:<compar> = -#NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#NP_0:<case> = acc/gen
###AP.b:<neg>=+#Conj:<conj> = AP.b:<conj>#AP_1.t:<compar> = AP.b:<compar>#AP_2:<compar> = AP.b:<compar>#AP_2:<equiv> = AP.b:<equiv>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#NP_1:<case> = acc/gen
#NP_r.b:<wh> = NP_1:<wh>#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1.t:<case> = none#NP_1.t:<wh> = -#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#V.t:<mode> = ppart#V.t:<passive> = +
###S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>
###S_r.t:<comp> = nil#S_q.b:<extracted> = +###S_q.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<invlink> = S_q.b:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#V.t:<punct struct> = nil#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP:<case> = PP_0.b:<assign-case>#S_r.t:<conj> = nil#PP_0.b:<wh> = NP:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#P.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<wh> = NP_0:<wh>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#P_r.b:<punct bal> = Punct_1.t:<punct bal>#P_r.b:<punct struct> = P_f.t:<punct struct>#P_r.b:<wh> = P_f.t:<wh>
##S_r.b:<extracted> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>
#####Ad.t:<wh> = +#S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<conj> = S_r.b:<conj>#S.t:<extracted> = S_r.b:<extracted>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Ad.t:<wh>= Ad_r.b:<wh>#Ad_r.t:<wh> = S_r.b:<wh>#S_r.b:<inv> = S.t:<inv>#S_r.b:<invlink> = S_r.b:<inv>#S.b:<comp> = nil#S.t:<inv> = +#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#NP_0:<case> = acc/gen
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#NP_0:<case> = acc/gen
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil#NP_r.b:<gerund> = +
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#NP_1.b:<compar> = N_1.t:<compar>#N_1.t:<compar> = -#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
##S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = NP.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#NP:<trace> = NP:<trace>#NP:<agr> = NP:<agr>#NP:<case> = NP:<case>#NP:<wh> = NP:<wh>
####S.t:<inv> = -#S.t:<wh> = -#S.t:<extracted> = -#S.t:<punct struct> = nil#S_f.t:<punct struct> = nil#S_f.t:<comp> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<conj> = S_r.b:<conj>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = ind/imp#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash#S_r.b:<nocomp-mode> = S.t:<nocomp-mode>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#NP_1.t:<case> = none#NP_1.t:<wh> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP.b:<wh> = NP_1:<wh>
####S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#NP_0.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +#VP.t:<mode> = inf/ger
###Conj:<conj> = A.b:<conj>#A_1.t:<neg> = -#A_2.t:<neg> = -#A.b:<neg> = -#A_1.t:<compar> = A.b:<compar>#A_2:<compar> = A.b:<compar>#A.b:<compar> = -
##NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<gen> = NP_f.t:<gen>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<predet> = NP_f.t:<predet>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#NP_f.t:<conj> = and/or/nil#NP_f.t:<case> = acc/nom#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<punct contains> = Punct.t:<punct contains> #NP_r.b:<punct struct> = Punct.t:<punct struct> #NP.t:<case> = nom/acc#NP.t:<pron> = -#NP_r.b:<compar> = -
#NP_0:<wh> = NP_r.b:<wh>#NP_1.t:<case> = nom/acc#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -##NP_r.b:<gerund> = +#AdvP_1.b:<wh> = NP_1:<wh>#NP_0:<case> = acc/gen
#NP_r.b:<rel-clause> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#NP_w.t:<trace> = NP_1.t:<trace>#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#S_r.t:<nocomp-mode> = inf/ger#S_r.t:<conj> = nil#S_r.t:<inv> = -#S_r.t:<mode> = inf/ger/ind#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = VP.t:<agr>#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#VP.b:<compar> = -#VP.b:<agr> = V.t:<agr>#VP.b:<passive> = V.t:<passive>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_q.b:<comp> = S_r.t:<comp>#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<case> = NP_1.t:<case>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#S_q.b:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = ppart#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.t:<conj> = nil
####S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<wh> = PP_0.t:<wh>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#NP_2:<agr> = VP.t:<agr>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#NP_0:<case> = PP_0.b:<assign-case>#NP_1:<case> = acc#PP_0:<trace> = PP.t:<trace>#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1.b:<case> = N_1.t:<case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_2.t:<wh> = NP_r.b:<wh>#NP_2.t:<case> = none#NP_2.t:<wh> = -#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#P_0.b:<assign-case> = acc#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#PP_0.b:<assign-case> = P_0.t:<assign-case>##NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#PP.t:<trace> = PP_0.t:<trace>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0.t:<case> = none#NP_0:<wh> = -#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<inv> = -#N_1:<case> = nom/acc#D_1:<agr> = NP_1.b:<agr>#NP_1.b:<agr> = N_1.t:<agr>#NP_1:<case> = acc#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#VP.t:<mode> = inf/ger
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_q.b:<wh> = NP_0.t:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<inv> = -#NP.t:<trace> = NP_0.t:<trace>#NP.t:<case> = NP_0.t:<case>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_2:<case> = acc#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP:<wh> = NP_0:<wh>#NP_0:<wh> = +#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.t:<conj> = nil
#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_0.t:<case> = S_r.b:<assign-case>#N.t:<case> = NP_0.b:<case>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<conditional> = VP.t:<conditional>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<progressive> = VP.t:<progressive>#VP.b:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<compar> = -#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#S_2:<extracted> = -#S_2:<mode> = ind#S_2:<assign-comp> = ind_nil#S_2:<comp> = that/nil#NP_1.t:<case> = nom/acc#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#V.b:<mode> = V_1.b:<mode>#VP.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_1:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_2:<case> = NP:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP:<trace> = NP_1:<trace>#NP:<agr> = NP_1:<agr>#NP:<case> = NP_1:<case>#NP:<wh> = NP_1:<wh>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.t:<assign-comp> = inf_nil/ind_nil#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mode> = imp#NP_1.t:<wh> = -#NP_1.t:<agr pers> = 2#NP_1.t:<agr 3rdsing> = -#NP_1.t:<agr num> = plur/sing#NP_1.t:<case> = nom#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#V:<punct struct> = nil#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
##S_f:<punct struct>=nil#S_f:<mode>=ind/imp#S_1:<punct struct>=nil#S_r.b:<punct contains> = Punct:<punct contains>#S_r.b:<comp> = S_f:<comp>#S_f:<conj> = and/or/but/nil#S_r.b:<assign-comp> = S_f:<assign-comp>#S_r.b:<tense> = S_f:<tense>#S_r.b:<mode> = S_f:<mode>#S_r.b:<assign-case> = S_f:<assign-case>#S_r.b:<agr> = S_f:<agr>#S_r.b:<wh> = S_f:<wh> #S_r.b:<comp> = nil#S_1:<comp> = nil#S_r.b:<nocomp-mode> = S_f.t:<nocomp-mode>
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#A_r.b:<punct bal> = Punct_1.t:<punct bal>#A_r.b:<punct struct> = A_f.t:<punct struct>#A_r.b:<wh> = A_f.t:<wh>#A_r.b:<assign-comp> = A_f.t:<assign-comp>#A_r.b:<compar> = A_f.t:<compar>#A_r.b:<equiv> = A_f.t:<equiv>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.t:<passive> = -#VP.b:<compar> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<conj> = nil#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP_w.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP.t:<control>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<comp> = nil#S_r.b:<control> = NP_0:<control>#S_r.b:<extracted> = -#PP_w:<wh> = +#NP_0:<wh> = -#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#S_r.t:<mode> = inf/ger/ppart/ind#S_r.t:<nocomp-mode> = ind/ger/ppart#VP.t:<assign-comp> = that/inf_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
####NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<assign-comp> = NP_f.t:<assign-comp>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<conj> = NP_f.t:<conj>#PP.b:<assign-case> = P_1.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP:<wh> = -#NP_f.b:<case> = acc/nom#NP_r.b:<card> = NP_f.t:<card>#NP_r.b:<const> = NP_f.t:<const>#NP_r.b:<quan> = NP_f.t:<quan>#NP_r.b:<decreas> = NP_f.t:<decreas>#NP_r.b:<definite> = NP_f.t:<definite>#NP_r.b:<gen> = NP_f.t:<gen>#NP_f.t:<rel-clause> = NP_r.b:<rel-clause>#NP_f.t:<compar> = NP_r.b:<compar>#NP_f.t:<equiv> = NP_r.b:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_1:<wh>#S_r.b:<assign-case> = NP_1.t:<case>#NP_1:<agr> = S_r.b:<agr>#NP_1:<wh> = -#NP_1.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#PP_0.b:<wh> = NP_0:<wh>#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.t:<comp> = nil#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP_w.b:<assign-case>#NP_1:<case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_1:<wh>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#####NP_r.b:<gerund> = +#NP_r.b:<agr pers> = 3#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr 3rdsing> = +##NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<compar> = NP_1.t:<compar>#NP_1.t:<case> = acc/none/gen#VP.b:<compar> = -#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<punct struct> = nil#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
##NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = nom/acc#NP_f.b:<refl> = -#NP_w.t:<wh> = +#NP_w.t:<case> = NP_1.t:<case>#NP_w.t:<agr> = NP_1.t:<agr>#NP_w.t:<trace> = NP_1.t:<trace>#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf/ppart#S_r.t:<conj> = nil#S_r.t:<comp> = nil#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP_r.b:<conj> = VP.t:<conj>#VP.t:<compar> = P.t:<compar>#VP.t:<equiv> = P.t:<equiv>#VP_r.b:<compar> = -#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
###S_q.b:<comp> = nil#S_q.b:<extracted> = +##S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = +#NP_1.t:<wh> = NP.t:<wh>#NP_1.t:<trace> = NP.t:<trace>#NP_1.t:<agr> = NP.t:<agr>#NP_1.t:<case> = NP.t:<case>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -##S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>##VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<passive> = -
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0.t:<case> = none#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0.t:<control>#VP.t:<mode> = inf/ger
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<inv> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<extracted> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##########VP_r.b:<conditional> = VP.t:<conditional>#VP_r.b:<perfect> = VP.t:<perfect>#VP_r.b:<progressive> = VP.t:<progressive>#VP.t:<assign-comp> = inf_nil/ind_nil#V.t:<assign-case> = VP_r.b:<assign-case>#V.t:<mode> = VP_r.b:<mode>#V.t:<tense> = VP_r.b:<tense>#V.t:<mainv> = VP_r.b:<mainv>#V.t:<agr> = VP_r.b:<agr>#V.t:<neg> = VP_r.b:<neg>#V.t:<assign-comp> = VP_r.b:<assign-comp>#VP_r.b:<compar> = -#VP.t:<compar> = -#PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#P.t:<assign-case> = acc
###S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<wh> = NP_1.t:<wh>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_1.t:<wh> = -#NP_1.t:<agr> = S_r.b:<agr>#NP_1.t:<case> = S_r.b:<assign-case>#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#####S.t:<comp> = nil#S.t:<comp> = S_r.b:<comp>#S.t:<conj> = S_r.b:<conj>#S.t:<extracted> = S_r.b:<extracted>#S.t:<assign-comp> = S_r.b:<assign-comp>#S.t:<tense> = S_r.b:<tense>#S.t:<wh> = S_r.b:<wh>#S.t:<inv> = S_r.b:<inv>#S.t:<invlink> = S_r.b:<invlink>#S.t:<mode> = S_r.b:<mode>#S.t:<assign-case> = S_r.b:<assign-case>#S.t:<agr> = S_r.b:<agr>#Punct.t:<punct struct> = comma/dash
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<comp> = nil#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_2:<case> = PP_w.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_w.t:<trace> = PP.b:<trace>#PP_w.t:<case> = PP.b:<case>#PP_w.t:<agr> = PP.b:<agr>#PP_w.t:<wh> = +#P.t:<assign-case> = PP_w.b:<assign-case>#PP_w.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_q.b:<extracted> = +#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1.t:<case> = acc#NP.t:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_2:<trace> = NP.t:<trace>#NP_2:<agr> = NP.t:<agr>#NP_2:<case> = NP.t:<case>#NP_2:<wh> = NP.t:<wh>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#S_r.b:<tense> = VP.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_2.t:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<case> = NP_r.b:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#NP_1:<case> = acc#NP_2:<case> = acc#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1:<case> = acc#N_1:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#S_r.b:<control> = NP_0.t:<control>#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#VP.t:<mode> = inf/ger
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_2.t:<wh> = NP_r.b:<wh>#NP_1:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#P_0.b:<assign-case> = acc#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = acc/gen
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_0.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = imp#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.t:<tense> = pres#VP.t:<mode> = base#VP.t:<neg> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<gerund> = +
#####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_0.b:<trace>#PP_w.t:<case> = PP_0.b:<case>#PP_w.t:<agr> = PP_0.b:<agr>#PP_w.b:<assign-case> = P_0.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#V.t:<mode> = ppart#V.t:<passive> = +#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#NP_1:<case> = acc#S_r.t:<conj> = nil#S_r.b:<control> = NP_2.t:<control>#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#NP_0:<wh> = NP_r.b:<wh>#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#NP_1:<case> = acc##VP.b:<mode> = none#VP.b:<compar> = -#NP_r.b:<gerund> = +#V:<mode> = ger#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_0:<case> = acc/gen
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = PP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<mode> = prep#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_q.b:<wh> = PP_1.t:<wh>#PP_1.t:<trace> = PP.t:<trace>#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0:<control>
###S_q.b:<inv> = +#NP_0.b:<agr> = N:<agr>#NP_0.b:<wh> = N:<wh>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<wh> = -#S_2.t:<assign-comp> = ind_nil#S_2:<comp> = that/nil#S_2:<extracted> = -#S_2:<mode> = ind#S_q.b:<agr> = S_r.t:<agr>#S_q.b:<assign-case> = V.t:<assign-case>#S_q.b:<comp> = nil#S_q.b:<conditional> = V.t:<conditional>#S_q.b:<mode> = V.t:<mode>#S_q.b:<passive> = -#S_q.b:<passive> = V.t:<passive>#S_q.b:<perfect> = V.t:<perfect>#S_q.b:<progressive> = -#S_q.b:<progressive> = V.t:<progressive>#S_r.b:<assign-case> = NP_0:<case>#S_r.t:<assign-comp> = S_q.b:<assign-comp>#V.t:<assign-comp> = S_q.b:<assign-comp>#S_r.b:<comp> = nil#S_r.b:<tense> = V.t:<tense>#S_r.t:<assign-case> = S_q.b:<assign-case>#S_r.t:<assign-comp> = inf_nil/ind_nil#V.t:<agr> = S_q.b:<agr>##VP_1.b:<compar> = -#VP_r.b:<compar> = -#S_r.t:<conj> = nil#P_1.t:<assign-case> = PP_1.b:<assign-case>#NP_1:<case> = PP_1.b:<assign-case>#PP_1.b:<wh> = NP_1:<wh>#V.b:<mode> = V_r.b:<mode>#V_r.b:<mode> = V_1.b:<mode>#VP_r.b:<mode> = V_r.t:<mode>#VP_r.b:<mode> = VP_1.t:<mode>#VP_1.b:<mode> = V_1.t:<mode>
#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<refl> = -#NP_f.b:<case> = nom/acc#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_w.t:<trace> = NP.b:<trace>#NP_w.t:<case> = NP.b:<case>#NP_w.t:<agr> = NP.b:<agr>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_2:<case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#A_r.b:<equiv> = Ad.t:<equiv>#A_r.b:<compar> = Ad.t:<compar>#A_r.b:<wh> = A_f.t:<wh> #Ad.t:<compar> = +#A_f.t:<wh> = -#A_f.t:<compar> = -#A_f.t:<super> = -
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#NP_1:<case> = acc/gen
####S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<pron> = NP_f.t:<pron>
####S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = S_r.b:<wh>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0.t:<wh>#P_0.b:<assign-case> = acc#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = ecm/inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#VP.t:<passive> = -#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.t:<conj> = nil
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#S_r.b:<control> = NP_0:<control>#VP.t:<mode> = inf/ger
###NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<control> = NP_1.t:<control>#VP.t:<mode> = ind#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#NP_f.b:<refl> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#N_r.b:<pron>=-#N_r.b:<wh>=-#N_r.b:<definite>=-#N_r.b:<quan>=-#N_r.b:<gen>=-#N_r.b:<refl>=-#N_r.b:<compar> = +#N_r.b:<super> = -#N_r.t:<rel-clause>=-#N_r.b:<wh> = N_f.t:<wh>#N_r.b:<agr>=N_f.t:<agr>#N_r.b:<gen> = N_f.t:<gen>#N_r.b:<conj>=N_f.t:<conj>#N_r.b:<case>=N_f.t:<case>#N_r.b:<pron> = N_f.t:<pron>#N_r.b:<card> = N_f.t:<card>#N_r.b:<quan> = N_f.t:<quan>#N_r.b:<const> = N_f.t:<const>#N_r.b:<decreas> = N_f.t:<decreas>#N_r.b:<definite> = N_f.t:<definite>#N_r.b:<assign-comp> = N_f.t:<assign-comp>#Ad.t:<super> = -#Ad.t:<compar> = +#Ad.t:<equiv> = N_r.b:<equiv>#N_f.t:<wh>=-#N_f.t:<gen>=-#N_f.t:<pron>=-#N_f.t:<quan>=-#N_f.t:<card>=-#N_f.t:<refl>=-#N_f.t:<const>=-#N_f.t:<super>=-#N_f.t:<compar>=-#N_f.t:<decreas>=-#N_f.t:<definite>=-
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<agr> = NP.t:<agr>#NP.t:<trace> = NP_0.t:<trace>#NP.t:<agr> = NP_0.t:<agr>#NP.t:<case> = NP_0.t:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
#S_r.b:<inv> = -#S_r.b:<comp> = nil#S_r.b:<extracted> = -#NP_0:<wh> = -#VP.b:<compar> = -#VP.b:<mode> = nom#S_r.b:<agr> = VP.t:<agr>#S_r.b:<agr> = NP_0:<agr>#S_r.b:<control> = NP_0.t:<control>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#AP_1.b:<equiv> = A.t:<equiv>#AP_1.b:<compar> = A.t:<compar>#AP_1.b:<wh> = A.t:<wh>#VP.t:<mode> = inf/ger#NP_0.t:<wh> = -#NP_0.t:<case> = none#S_r.b:<assign-case> = NP_0.t:<case>
#####S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.t:<conj> = nil#S_r.b:<control> = NP_1.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = PP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#VP.b:<passive> = V.t:<passive>#NP_0:<case> = PP_0.b:<assign-case>#NP_2:<case> = PP.b:<assign-case>#PP_2:<trace> = PP.t:<trace>#P_0.b:<assign-case> = acc#PP_0.b:<assign-case> = P_0.t:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
######PP.b:<wh> = NP:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<case> = N.t:<case>#NP_1.b:<conj> = N.t:<conj>#NP_1.b:<const> = D.t:<const>#NP_1.b:<definite> = D.t:<definite>#NP_1.b:<quan> = D.t:<quan>#NP_1.b:<card> = D.t:<card>#NP_1.b:<gen> = D.t:<gen>#NP_1.b:<decreas> = D.t:<decreas>#NP_1.b:<wh> = D.t:<wh>#NP_1.t:<case> = nom/acc
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<mode> = V.t:<mode>#V.t:<mode> = ppart#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP_0.t:<case>#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_2.b:<assign-case> = acc#P.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
###S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_2.t:<control>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
####NP.b:<const> = D.t:<const>#NP.b:<definite> = D.t:<definite>#NP.b:<quan> = D.t:<quan>#NP.b:<card> = D.t:<card>#NP.b:<gen> = D.t:<gen>#NP.b:<decreas> = D.t:<decreas>#NP.b:<wh> = D.t:<wh>#NP_1:<case> = acc#V.b:<mode> = ger#NP.b:<case> = nom/acc#NP.b:<agr num> = sing#NP.b:<agr pers> = 3#NP.b:<agr 3rdsing> = +#P_2.b:<assign-case> = acc#PP_2.b:<assign-case> = P_2.t:<assign-case>#PP_2.b:<assign-case> = NP_2.t:<case>#P_1.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>
##PP_0.b:<assign-case> = P_0.t:<assign-case>#S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#NP_0:<case> = PP_0.b:<assign-case>#PP_0.b:<wh> = NP_0:<wh>#S_q.b:<wh> = PP_0.t:<wh>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#PP_0.t:<trace> = PP.t:<trace>#S_r.b:<extracted> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_2:<wh>#NP_2:<agr> = S_r.b:<agr>#NP_2:<case> = S_r.b:<assign-case>#NP_2:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<punct struct> = nil#V.t:<mode> = ppart#V.t:<passive> = +#S_r.b:<inv> = -#S_r.b:<control> = NP_2.t:<control>#NP_1.b:<agr> = N_1.t:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#PP_0.b:<wh> = NP_0:<wh>
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#Punct_1.t:<punct struct> = Punct_2.t:<punct struct>#S_r.b:<punct bal> = Punct_1.t:<punct bal>#S_r.b:<punct struct> = Punct_1.t:<punct struct>#S_f.t:<punct bal> = dquote/squote#S_f.t:<punct struct> = nil#S_f.t:<comp> = S_r.b:<comp>#S_f.t:<extracted> = S_r.b:<extracted>#S_f.t:<assign-comp> = S_r.b:<assign-comp>#S_f.t:<tense> = S_r.b:<tense>#S_f.t:<wh> = S_r.b:<wh>#S_f.t:<inv> = S_r.b:<inv>#S_f.t:<invlink> = S_r.b:<invlink>#S_f.t:<mode> = S_r.b:<mode>#S_f.t:<assign-case> = S_r.b:<assign-case>#S_f.t:<agr> = S_r.b:<agr>#S.t:<mode> = ind/imp#S.t:<comp> = nil#S.t:<punct bal> = dquote/squote#S.t:<punct struct> = nil#S_r.b:<nocomp-mode> = S_f.t:<nocomp-mode>
####S_r.b:<extracted> = -##S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = S_r.b:<wh>#NP_0:<wh> = -#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<punct contains> = VP.t:<punct contains>#VP.b:<punct contains> = S_1.t:<punct contains>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
####S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<wh> = NP_0:<wh>#S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#NP_2:<wh> = PP_2.b:<wh>#NP:<trace> = NP_0.t:<trace>#NP:<agr> = NP_0.t:<agr>#NP:<case> = NP_0.t:<case>#NP:<wh> = NP_0:<wh>#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#P_2.b:<assign-case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_2:<case> = acc#NP_1:<case> = acc#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##Punct_1.t:<punct bal> = Punct_2.t:<punct bal>#PP_r.b:<punct bal> = Punct_1.t:<punct bal>#PP_r.b:<punct struct> = PP_f.t:<punct struct>#PP_r.b:<wh> = PP_f.t:<wh>#PP_r.b:<assign-comp> = PP_f.t:<assign-comp>#PP_r.b:<conj> = PP_f.t:<conj>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
#####NP_r.b:<agr> = NP_1.t:<agr>#NP_r.b:<case> = NP_1.t:<case>#NP_r.b:<wh> = NP_1.t:<wh>#NP_r.b:<conj> = NP_1.t:<conj>#NP_1.b:<case> = acc/nom#NP_r.b:<assign-comp> = NP_1.t:<assign-comp>#NP_r.b:<card> = NP_1.t:<card>#NP_r.b:<const> = NP_1.t:<const>#NP_r.b:<quan> = NP_1.t:<quan>#NP_r.b:<decreas> = NP_1.t:<decreas>#NP_r.b:<definite> = NP_1.t:<definite>#NP_r.b:<gen> = NP_1.t:<gen>#NP_1.t:<rel-clause> = NP_r.b:<rel-clause>
#NP_0:<wh> = NP_r.b:<wh>#NP_0.t:<case> = none#NP_0.t:<wh> = -#VP.t:<mode> = ger#NP_r.t:<case> = nom/acc#NP_r.t:<agr num> = sing#NP_r.t:<agr pers> = 3#NP_r.t:<agr 3rdsing> = +#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#S_1.t:<assign-comp> = inf_nil/ind_nil#S_1.t:<inv> = -#S_1.t:<control> = NP_0.t:<control>#NP_r.b:<gerund> = +#A.t:<compar> = AP_1.b:<compar>
###S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_r.t:<comp> = nil#S_q.b:<wh> = NP_0.t:<wh>#S_r.b:<assign-comp> = inf_nil/ind_nil#S_r.b:<assign-comp> = VP.t:<assign-comp>###S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP_0:<trace> = S_0:<trace>#NP_0:<wh> = +#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#PP_1.b:<wh> = NP_1.t:<wh>#VP.b:<equiv> = PP_1.t:<equiv>#VP.b:<compar> = PP_1.t:<compar>#PP_1.b:<equiv> = P_1.t:<equiv>#PP_1.b:<compar> = P_1.t:<compar>#P_1.b:<equiv> = A.t:<equiv>#P_1.b:<compar> = A.t:<compar>
###S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<tense> = VP.t:<tense>#S_r.t:<conj> = nil#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#S_q.b:<extracted> = +#S_q.b:<wh> = NP_2:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<inv> = S_q.b:<invlink>#S_q.b:<mode> = S_r.t:<mode>#S_q.b:<comp> = nil#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = NP.t:<case>#NP_2:<agr> = NP.t:<agr>#NP_2:<trace> = NP.t:<trace>#NP_2:<wh> = NP.t:<wh>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>#V.t:<passive> = -
#NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#NP_f.b:<agr> = VP.t:<agr>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<agr> = NP_2.t:<agr>#S_r.b:<assign-case> = NP_2.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<trace> = NP.t:<trace>
####VP_r.b:<mode> = VP.t:<mode>#VP_r.b:<agr> = VP.t:<agr>#VP_r.b:<tense> = VP.t:<tense>#VP_r.b:<assign-case> = VP.t:<assign-case>#VP_r.b:<assign-comp> = VP.t:<assign-comp>#VP_r.b:<passive> = VP.t:<passive>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#VP.t:<compar> = -#VP_r.b:<compar> = VP.t:<compar>#VP_r.b:<mainv> = VP.t:<mainv>#VP.t:<mainv> = +
#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_1:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#S_2.t:<assign-comp> = inf_nil/ind_nil#S_2.t:<inv> = -#NP_1:<case> = acc/gen
######NP_f.t:<agr> = NP_r.b:<agr>#NP_f.t:<wh> = NP_r.b:<wh>#NP_f.t:<case> = NP_r.b:<case>#S_r.t:<mode> = ind#S_r.t:<inv> = -#S_r.b:<comp> = nil#S_r.b:<agr> = NP_1.t:<agr>#S_r.b:<assign-case> = NP_1.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<passive> = +#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<assign-comp> = ppart_nil#V.t:<passive> = +#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#V.t:<punct struct> = nil#NP_f.b:<refl> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_1.b:<trace>#NP_w.t:<case> = NP_1.b:<case>#NP_w.t:<agr> = NP_1.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = NP_0.t:<case>#NP_0:<agr> = S_r.b:<agr>#NP_0:<wh> = S_r.b:<wh>#NP_1:<case> = acc#NP_0:<wh> = -#NP_0.t:<case> = none#S_r.b:<agr> = VP.t:<agr>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.b:<control> = NP_0.t:<control>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<mode> = inf/ger
##NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_r.b:<gerund> = +#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<compar> = -#NP_0:<case> = acc/gen
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mode> = V.t:<mode>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#S_r.b:<control> = NP_0.t:<control>#S_r.t:<inv> = -#PP_w.t:<wh> = +#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#P.t:<assign-case> = PP.b:<assign-case>#NP_1:<case> = PP.b:<assign-case>#PP.b:<wh> = NP_1:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<agr> = NP_0.t:<agr>#S_r.b:<assign-case> = NP_0.t:<case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#VP.b:<assign-case> = acc#PP_1.b:<assign-case> = P_1.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_w.t:<wh> = +#S_r.t:<comp> = nil#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_q.b:<extracted> = +#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<wh> = NP_0.t:<wh>#S_r.t:<comp> = nil#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_q.b:<comp> = nil#S_q.b:<mode> = S_r.t:<mode>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<inv> = -#NP:<trace> = NP_0:<trace>#NP:<agr> = NP_0:<agr>#NP:<case> = NP_0:<case>#NP.t:<wh> = NP_0.t:<wh>#NP_0:<wh> = +#NP.t:<agr> = S_r.b:<agr>#NP.t:<case> = S_r.b:<assign-case>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<mode> = nom#VP.b:<assign-case> = acc#VP.b:<compar> = -#VP.t:<passive> = -#N:<agr> = NP_1.b:<agr>#NP_1.t:<wh> = -#NP_1.t:<case> = acc#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<compar> = N.t:<compar>#N.t:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>#S_1.t:<assign-comp> = inf_nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm
###S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<extracted> = -#S_r.b:<tense> = VP.t:<tense>#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#S_r.b:<inv> = -#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#S_r.b:<control> = NP_1.t:<control>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#PP_0.b:<wh> = NP_0:<wh>#NP_r.b:<pron> = NP_f.t:<pron>#NP_r.b:<compar> = NP_f.t:<compar>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>
##S_r.b:<extracted> = -#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<wh> = NP_0.t:<wh>#S_r.b:<mode> = imp#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#NP_0.t:<wh> = -#NP_0.t:<agr pers> = 2#NP_0.t:<agr 3rdsing> = -#NP_0.t:<agr num> = plur/sing#NP_0.t:<case> = nom#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#VP.t:<tense> = pres#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.b:<compar> = -#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#V.t:<passive> = -#NP_1.t:<case> = acc#PP.b:<assign-case> = P.t:<assign-case>#PP.b:<assign-case> = NP.t:<case>#PP.b:<wh> = NP.t:<wh>
#NP_1:<case> = acc#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>#P_2.b:<assign-case> = acc#NP_0:<wh> = NP_r.b:<wh>#VP.t:<mode> = ger#NP_r.b:<case> = nom/acc#NP_r.b:<agr num> = sing#NP_r.b:<agr pers> = 3#NP_r.b:<agr 3rdsing> = +#NP_1.b:<case> = N.t:<case>#NP_1.b:<pron> = N.t:<pron>#NP_1.b:<agr> = N.t:<agr>#NP_1.b:<wh> = N.t:<wh>#NP_1.b:<compar> = N.t:<compar>#N.b:<compar> = -#N.t:<const> = NP_1.b:<const>#N.t:<gen> = NP_1.b:<gen>#N.t:<definite> = NP_1.b:<definite>#N.t:<quan> = NP_1.b:<quan>#N.t:<card> = NP_1.b:<card>#N.t:<decreas> = NP_1.b:<decreas>##NP_r.b:<gerund> = +#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<compar> = -#V.t:<passive> = -#NP_0:<case> = acc/gen
###S_q.b:<extracted> = +#S_q.b:<comp> = nil#S_q.b:<wh> = NP_1.t:<wh>#S_q.b:<inv> = S_r.t:<inv>#S_q.b:<mode> = S_r.t:<mode>#NP_1.t:<wh> = +#S_r.t:<comp> = nil#S_r.t:<conj> = nil#S_r.b:<assign-comp> = inf_nil/ind_nil/ecm#S_r.b:<comp> = nil#S_r.b:<inv> = -#S_r.b:<agr> = NP.t:<agr>#S_r.b:<assign-case> = NP.t:<case>#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<assign-comp> = VP.t:<assign-comp>#NP.t:<agr> = NP_1.t:<agr>#NP.t:<case> = NP_1.t:<case>#NP.t:<trace> = NP_1.t:<trace>#NP.t:<wh> = NP_1.t:<wh>#VP.b:<passive> = +#VP.b:<compar> = -#VP.b:<mode> = V.t:<mode>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<agr> = V.t:<agr>#VP.b:<mainv> = V.t:<mainv>#VP.b:<passive> = V.t:<passive>#V.t:<mode> = ppart#V.t:<passive> = +#V.t:<punct struct> = nil#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#PP_0.b:<wh> = NP_0:<wh>#P_0.b:<assign-case> = acc#AP_2.b:<wh> = A.t:<wh>#AP_2.b:<compar> = A.t:<compar>#AP_2.b:<equiv> = A.t:<equiv>
#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_r.b:<rel-clause> = +#NP_r.b:<pron> = NP_f.t:<pron>#NP_f.b:<case> = acc/nom#NP_f.b:<case> = nom/acc#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = VP.t:<mode>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<control> = NP_1.t:<control>#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#S_r.t:<inv> = -#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.b:<mode> = V.t:<mode>#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<tense> = V.t:<tense>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<mode> = base#VP_e.b:<assign-comp> = none#NP_1:<agr> = S_r.b:<agr>#NP_1:<case> = S_r.b:<assign-case>#NP_1:<wh> = -#NP_2:<case> = PP.b:<assign-case>#PP_0.b:<assign-case> = P_0.t:<assign-case>#PP_0.b:<assign-case> = NP_0.t:<case>#P_0.b:<assign-case> = acc#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#PP_0.b:<wh> = NP_0:<wh>#V.t:<mode> = ppart#V.t:<passive> = +
###S_r.b:<comp> = nil#S_r.b:<mode> = VP.t:<mode>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-comp> = VP.t:<assign-comp>#S_r.t:<inv> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_0.t:<agr> = S_r.b:<agr>#NP_0.t:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#V.t:<contr> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_0.b:<trace>#NP_w.t:<case> = NP_0.b:<case>#NP_w.t:<agr> = NP_0.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ger/ind#S_r.t:<nocomp-mode> = inf/ger#VP.t:<assign-comp> = that/ind_nil/inf_nil/ecm#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_1.b:<agr> = N_1.t:<agr>#D_1.t:<agr> = NP_1.b:<agr>#N_1.t:<case> = nom/acc#P_2.b:<assign-case> = acc#PP_2.b:<wh> = NP_2:<wh>#P_2.t:<assign-case> = PP_2.b:<assign-case>#NP_2:<case> = PP_2.b:<assign-case>
###NP.b:<case> = NP_1.t:<case>#NP.b:<case> = NP_2.t:<case>#NP.b:<case> = nom/acc#NP.b:<wh> = NP_1.t:<wh>#NP_1.t:<wh> = NP_2.t:<wh>#Conj:<conj> = NP.b:<conj>#NP.b:<const> = NP_1.t:<const>#NP.b:<gen> = NP_1.t:<gen>#NP.b:<definite> = NP_1.t:<definite>#NP.b:<quan> = NP_1.t:<quan>#NP.b:<card> = NP_1.t:<card>#NP.b:<decreas> = NP_1.t:<decreas>#NP.b:<compar> = NP_1.t:<compar>#NP.b:<compar> = NP_2:<compar>#NP.b:<equiv> = NP_2:<equiv>
#S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#PP_1.b:<assign-case> = P.t:<assign-case>#PP_1.b:<assign-case> = NP_1.t:<case>#P.b:<wh> = -#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#NP_f.b:<case> = acc/nom#S_r.t:<inv> = -#S_r.t:<mode> = ind/inf#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
##S_r.b:<extracted> = -#S_r.b:<inv> = -#S_r.b:<assign-comp> = VP.t:<assign-comp>##S_r.b:<mode> = imp#S_r.b:<comp> = nil#S_r.b:<tense> = VP.t:<tense>#S_r.b:<wh> = NP_0:<wh>#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<progressive> = VP.t:<progressive>#S_r.b:<perfect> = VP.t:<perfect>#S_r.b:<passive> = VP.t:<passive>#S_r.b:<mainv> = VP.t:<mainv>#VP.t:<neg> = -#VP.t:<mode> = base#VP.b:<mode> = V.t:<mode>#VP.t:<tense> = pres#VP.b:<passive> = V.t:<passive>#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#VP_e.b:<mainv> = -#VP_e.b:<compar> = -#VP_e.b:<assign-comp> = none#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_0:<wh> = -#NP_0:<agr pers> = 2#NP_0:<agr 3rdsing> = -#NP_0:<agr num> = plur/sing#NP_0:<case> = nom#NP_1:<case> = acc#NP_2:<case> = PP.b:<assign-case>#P.t:<assign-case> = PP.b:<assign-case>#PP.b:<wh> = NP_2:<wh>#V.t:<passive> = -
##S_r.b:<assign-comp> = VP.t:<assign-comp>###S_r.b:<mode> = VP.t:<mode>#S_r.t:<inv> = -#S_r.b:<inv> = -#NP_0:<agr> = S_r.b:<agr>#NP_0:<case> = S_r.b:<assign-case>#NP_1:<case> = acc#NP_2:<case> = acc#S_r.b:<agr> = VP.t:<agr>#S_r.b:<assign-case> = VP.t:<assign-case>#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<control> = NP_0.t:<control>#VP.b:<passive> = V.t:<passive>#V.t:<passive> = -#VP.b:<agr> = V.t:<agr>#VP.b:<assign-case> = V.t:<assign-case>#VP.b:<assign-comp> = V.t:<assign-comp>#VP.b:<mode> = V.t:<mode>#VP.b:<tense> = V.t:<tense>#VP.b:<mainv> = V.t:<mainv>#VP.b:<compar> = -#S_r.t:<conj> = nil#NP_w.t:<trace> = NP_2.b:<trace>#NP_w.t:<case> = NP_2.b:<case>#NP_w.t:<agr> = NP_2.b:<agr>#NP_r.b:<rel-clause> = +#S_r.t:<mode> = inf/ind#S_r.t:<nocomp-mode> = ind#VP.t:<assign-comp> = that/for/ind_nil#S_r.b:<nocomp-mode> = S_r.b:<mode>#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
#S_r.b:<assign-comp> = VP.t:<assign-comp>###VP.b:<compar> = -#S_r.b:<mode> = VP.t:<mode>#S_r.t:<mode> = ind/inf#S_r.b:<tense> = VP.t:<tense>#S_r.t:<inv> = -#S_0.t:<inv> = -#S_0.t:<extracted> = -#S_0.t:<mode> = ind/inf#S_0.t:<comp> = that/whether/for/nil#S_0.t:<assign-comp> = inf_nil#S_r.b:<agr> = VP.t:<agr>#S_r.b:<tense> = VP.t:<tense>#S_r.b:<assign-case> = VP.t:<assign-case>#S_r.b:<mainv> = VP.t:<mainv>#S_r.b:<passive> = VP.t:<passive>#VP.t:<passive> = -#VP.b:<mode> = prep#NP_r.b:<wh> = NP_f.t:<wh>#NP_r.b:<agr> = NP_f.t:<agr>#NP_r.b:<case> = NP_f.t:<case>#S_r.t:<conj> = nil#NP_w.t:<wh> = +#S_r.t:<comp> = nil#PP_w.t:<trace> = PP_1.b:<trace>#PP_w.t:<case> = PP_1.b:<case>#PP_w.t:<agr> = PP_1.b:<agr>#PP_w.b:<assign-case> = P.t:<assign-case>#PP_w.b:<assign-case> = NP_w.t:<assign-case>#PP_w.b:<wh> = NP_w.t:<wh>#NP_r.b:<rel-clause> = +#NP_f.b:<case> = nom/acc#NP_r.b:<pron> = NP_f.t:<pron>
