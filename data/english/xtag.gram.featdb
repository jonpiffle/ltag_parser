alphaA	 !
alphaAN1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaAN1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaAN1VPnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaAN1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaAP	 !
alphaARBP	 !
alphaAV	A.b:<wh>=-, V.t:<mode>=ppart, V.t:<punct struct>=nil !
alphaAXA	A.t:<wh>=AP.b:<wh>, A.t:<compar>=AP.b:<compar>, A.t:<equiv>=AP.b:<equiv>, A.t:<super>=AP.b:<super> !
alphaAXAs	S.t:<mode>=ind/inf, S.t:<comp>=nil/that, S.t:<inv>=-, S.t:<extracted>=-, A.t:<compar>=AP.b:<compar>, A.t:<equiv>=AP.b:<equiv>, A.t:<super>=AP.b:<super> !
alphaAd	 !
alphaCARB	NP.b:<definite>=-, NP.b:<compar>=Ad.t:<compar>, NP.b:<super>=Ad.t:<super>, NP.b:<equiv>=Ad.t:<equiv> !
alphaD	 !
alphaDAN1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
alphaDAN1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaDAN1VPnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaDAN1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
alphaDD	 !
alphaDEnx1V	NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, NP.b:<compar>=N.t:<compar>, N.t:<compar>=-, V.b:<mode>=ger !
alphaDN1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaDN1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaDN1VPnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaDN1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaDnx0V	NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, NP.b:<compar>=N.t:<compar>, NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, N.t:<compar>=- !
alphaDnx0VPnx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.t:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaDnx0Vnx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1:<wh> !
alphaDnx0Vnx1Pnx2	NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_1.b:<wh>=NP_1:<wh>, V.b:<mode>=ger !
alphaDnx0Vnx1pnx2	NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_1.b:<wh>=NP_1:<wh>, V.b:<mode>=ger !
alphaDnx0Vnx1s2	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=- !
alphaDnx0Vnx2nx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_2.b:<assign-case>=acc, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, PP_1.b:<wh>=NP_1:<wh>, PP_2.b:<wh>=NP_2:<wh> !
alphaDnx0Vpl	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+ !
alphaDnx0Vplnx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case> !
alphaDnx0Vplnx2nx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_2.b:<assign-case>=acc, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case> !
alphaDnx0Vpnx1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.t:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaDnx0Vs1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- !
alphaDnx0lVN1	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, NP_1:<case>=acc, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphaDnx0lVN1Pnx2	NP.b:<const>=D.t:<const>, NP.b:<definite>=D.t:<definite>, NP.b:<quan>=D.t:<quan>, NP.b:<card>=D.t:<card>, NP.b:<gen>=D.t:<gen>, NP.b:<decreas>=D.t:<decreas>, NP.b:<wh>=D.t:<wh>, NP_1:<case>=acc, V.b:<mode>=ger, NP.b:<case>=nom/acc, NP.b:<agr num>=sing, NP.b:<agr pers>=3, NP.b:<agr 3rdsing>=+, P_2.b:<assign-case>=acc, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_1.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphaDnxG	NP:<case>=nom/acc, D.b:<wh>=NP:<wh>, D.b:<gen>=G.t:<gen>, G.b:<gen>=+ !
alphaEW1nx1V	S_q.b:<comp>=nil, S_q.b:<extracted>=+, , S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, NP_1.t:<wh>=NP.t:<wh>, NP_1.t:<trace>=NP.t:<trace>, NP_1.t:<agr>=NP.t:<agr>, NP_1.t:<case>=NP.t:<case>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=- !
alphaEnx1V	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil !
alphaEnx1V-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=none, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.t:<mode>=inf/ger !
alphaGEnx1V	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<compar>=NP_1.t:<compar>, VP.b:<compar>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1:<case>=acc/gen !
alphaGEnx1V-PRO	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<compar>=NP_1.t:<compar>, VP.b:<compar>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1.t:<wh>=-, NP_1.t:<case>=none !
alphaGN1lVPnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1.t:<wh>=NP_r.b:<wh>, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc !
alphaGN1lVPnx2bynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1.t:<wh>=NP_r.b:<wh>, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc, P_0.t:<assign-case>=PP_0.b:<assign-case>, NP_0:<case>=PP_0.b:<assign-case>, P_0.b:<assign-case>=acc !
alphaGnx0A1s1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, , VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, NP_r.b:<gerund>=+, A.t:<compar>=AP_1.b:<compar>, NP_0:<case>=acc/gen !
alphaGnx0A1s1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, NP_r.b:<gerund>=+, A.t:<compar>=AP_1.b:<compar> !
alphaGnx0ARBPnx1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, , NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0ARBPnx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<gerund>=+ !
alphaGnx0Ax1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, , NP_r.b:<gerund>=+, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_0:<case>=acc/gen !
alphaGnx0Ax1-PRO	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, NP_r.b:<gerund>=+, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_0.t:<wh>=-, NP_0.t:<case>=none !
alphaGnx0N1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, , NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0N1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<gerund>=+ !
alphaGnx0N1s1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.b:<compar>=-, , S_1.t:<assign-comp>=inf_nil, NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0N1s1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=nom, VP.b:<assign-case>=acc, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil, NP_r.b:<gerund>=+ !
alphaGnx0PNaPnx1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, , NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0PNaPnx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<gerund>=+ !
alphaGnx0PPnx1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, , NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0PPnx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<gerund>=+ !
alphaGnx0Pnx1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, , VP.b:<compar>=-, NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0Pnx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, VP.b:<compar>=- !
alphaGnx0Px1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, , NP_r.b:<gerund>=+, NP_0:<case>=acc/gen !
alphaGnx0Px1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, NP_r.b:<gerund>=+ !
alphaGnx0V	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_0.t:<wh>, NP_r.b:<compar>=NP_0.t:<compar>, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_0:<case>=acc/gen !
alphaGnx0V-PRO	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_0.t:<wh>, NP_r.b:<compar>=NP_0.t:<compar>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil !
alphaGnx0VAN1	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, NP_0:<case>=acc/gen !
alphaGnx0VAN1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc !
alphaGnx0VAN1Pnx2	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_0:<case>=acc/gen !
alphaGnx0VAN1Pnx2-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaGnx0VDAN1	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, NP_0:<case>=acc/gen !
alphaGnx0VDAN1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc !
alphaGnx0VDAN1Pnx2	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_0:<case>=acc/gen !
alphaGnx0VDAN1Pnx2-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaGnx0VDN1	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, NP_0:<case>=acc/gen !
alphaGnx0VDN1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc !
alphaGnx0VDN1Pnx2	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_0:<case>=acc/gen !
alphaGnx0VDN1Pnx2-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaGnx0VN1	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, NP_0:<case>=acc/gen !
alphaGnx0VN1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc !
alphaGnx0VN1Pnx2	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_0:<case>=acc/gen !
alphaGnx0VN1Pnx2-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_r.t:<case>=nom/acc, NP_r.t:<agr num>=sing, NP_r.t:<agr pers>=3, NP_r.t:<agr 3rdsing>=+, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_1:<case>=acc, VP.b:<mode>=none, VP.b:<compar>=-, NP_r.b:<gerund>=+, V:<mode>=ger, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaGnx0VPnx1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0VPnx1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=- !
alphaGnx0Vax1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_0:<case>=acc/gen !
alphaGnx0Vax1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=- !
alphaGnx0Vnx1	NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_0:<compar>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_0:<compar>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=- !
alphaGnx0Vnx1Pnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<wh>=NP_r.b:<wh>, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx1Pnx2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaGnx0Vnx1pl	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx1pl-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, NP_1:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vnx1pnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<wh>=NP_r.b:<wh>, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx1pnx2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<wh>=-, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaGnx0Vnx1s2	NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.t:<mode>=ger, , S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx1s2-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, VP.t:<mode>=ger, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vnx2nx1	NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, NP_2:<case>=acc, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx2nx1-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, NP_2:<case>=acc, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=- !
alphaGnx0Vnx2nx1pl	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx2nx1pl-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vnx2plnx1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vnx2plnx1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vpl	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vpl-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vplnx1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vplnx1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, NP_1:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0Vplnx2nx1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vplnx2nx1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=- !
alphaGnx0Vpnx1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vpnx1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.t:<mode>=ger, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=- !
alphaGnx0Vs1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0Vs1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0lVN1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0lVN1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_r.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=- !
alphaGnx0lVN1Pnx2	NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, , NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0lVN1Pnx2-PRO	NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0lVnx2N1	NP_2:<case>=acc, NP_1:<case>=acc, NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, , NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaGnx0lVnx2N1-PRO	NP_2:<case>=acc, NP_1:<case>=acc, NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
alphaGnx0nx1ARB	NP_0:<wh>=NP_r.b:<wh>, NP_1.t:<case>=nom/acc, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, , NP_r.b:<gerund>=+, AdvP_1.b:<wh>=NP_1:<wh>, NP_0:<case>=acc/gen !
alphaGnx0nx1ARB-PRO	NP_0:<wh>=NP_r.b:<wh>, NP_0.t:<case>=none, NP_0.t:<wh>=-, NP_1.t:<case>=nom/acc, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, NP_r.b:<gerund>=+, AdvP_1.b:<wh>=NP_1:<wh> !
alphaGnx1V	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<compar>=NP_1:<compar>, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1V-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<gerund>=+, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<compar>=NP_1:<compar>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1VP	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, NP_1:<case>=acc/gen !
alphaGnx1VP-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<case>=none, NP_1.t:<wh>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh> !
alphaGnx1VPbynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<case>=acc/gen !
alphaGnx1VPbynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case> !
alphaGnx1VPnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<wh>=NP_r.b:<wh>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1VPnx2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1.t:<case>=none, NP_1.t:<wh>=-, NP_1:<wh>=NP_r.b:<wh>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1VPnx2bynx0	NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1VPnx2bynx0-PRO	NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1.t:<wh>=-, NP_1.t:<case>=none, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1Vbynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_1:<compar>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, NP_r.b:<gerund>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1Vbynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1.t:<wh>=-, NP_1.t:<case>=none, NP_1:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_1:<compar>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, NP_r.b:<gerund>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1Vbynx0s2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, NP_1:<case>=acc/gen !
alphaGnx1Vbynx0s2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<case>=none, NP_1.t:<wh>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh> !
alphaGnx1Vp	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, NP_1:<case>=acc/gen !
alphaGnx1Vp-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<case>=none, NP_1.t:<wh>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh> !
alphaGnx1Vpbnx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<case>=acc/gen !
alphaGnx1Vpbynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<case>=none, NP_1.t:<wh>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<wh>=NP_1:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case> !
alphaGnx1Vpl	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1Vpl-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1Vplbynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<case>=acc/gen !
alphaGnx1Vplbynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, NP_0:<case>=PP_0.b:<assign-case> !
alphaGnx1Vpnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<wh>=NP_r.b:<wh>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1Vpnx2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1.t:<case>=none, NP_1.t:<wh>=-, NP_1:<wh>=NP_r.b:<wh>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1Vpnx2bynx0	NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, V.t:<mode>=ppart, V.t:<passive>=+, NP_1:<case>=acc/gen !
alphaGnx1Vpnx2bynx0-PRO	NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1.t:<case>=none, NP_1.t:<wh>=-, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx1Vs2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, NP_1:<case>=acc/gen !
alphaGnx1Vs2-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<case>=none, NP_1.t:<wh>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=- !
alphaGnx1Vs2bynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, NP_1:<case>=acc/gen !
alphaGnx1Vs2bynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_1:<wh>=NP_r.b:<wh>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh> !
alphaGnx2Vnx1	NP_1:<case>=acc, NP_2:<wh>=NP_r.b:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, NP_2:<case>=acc/gen !
alphaGnx2Vnx1-PRO	NP_1:<case>=acc, NP_2:<wh>=NP_r.b:<wh>, NP_2:<case>=none, NP_2.t:<wh>=-, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx2Vnx1bynx0	NP_1:<case>=acc, NP_2:<wh>=NP_r.b:<wh>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, V.t:<passive>=+, V.t:<mode>=ppart, NP_2:<case>=acc/gen !
alphaGnx2Vnx1bynx0-PRO	NP_1:<case>=acc, NP_2:<wh>=NP_r.b:<wh>, NP_2.t:<case>=none, NP_2.t:<wh>=-, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, PP_0.b:<wh>=NP_0:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, V.t:<passive>=+, V.t:<mode>=ppart !
alphaGnx2lVN1	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_2.t:<wh>=NP_r.b:<wh>, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, NP_2:<case>=acc/gen !
alphaGnx2lVN1-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_2.t:<wh>=NP_r.b:<wh>, NP_2.t:<case>=none, NP_2.t:<wh>=-, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaGnx2lVN1bynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_2.t:<wh>=NP_r.b:<wh>, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=acc/gen !
alphaGnx2lVN1bynx0-PRO	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<gerund>=+, NP_2.t:<wh>=NP_r.b:<wh>, NP_2.t:<case>=none, NP_2.t:<wh>=-, NP_1:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case> !
alphaIEnx1V	S_r.t:<assign-comp>=inf_nil/ind_nil, , S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=imp, NP_1.t:<wh>=-, NP_1.t:<agr pers>=2, NP_1.t:<agr 3rdsing>=-, NP_1.t:<agr num>=plur/sing, NP_1.t:<case>=nom, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V:<punct struct>=nil, VP.t:<mode>=base !
alphaInvItVad1s2	S_q.b:<inv>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_2.t:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_q.b:<agr>=S_r.t:<agr>, S_q.b:<assign-case>=V.t:<assign-case>, S_q.b:<comp>=nil, S_q.b:<conditional>=V.t:<conditional>, S_q.b:<mode>=V.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=V.t:<passive>, S_q.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=V.t:<progressive>, S_r.b:<assign-case>=NP_0:<case>, S_r.t:<assign-comp>=S_q.b:<assign-comp>, V.t:<assign-comp>=S_q.b:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<tense>=V.t:<tense>, S_r.t:<assign-case>=S_q.b:<assign-case>, S_r.t:<assign-comp>=inf_nil/ind_nil, V.t:<agr>=S_q.b:<agr>, , VP_1.b:<compar>=-, VP_r.b:<compar>=-, , S_r.t:<conj>=nil, V.b:<mode>=V_r.b:<mode>, V_r.b:<mode>=V_1.b:<mode>, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaInvItVnx1s2	S_q.b:<inv>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, NP_1.t:<case>=acc/nom, S_2.t:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_q.b:<agr>=S_r.t:<agr>, S_q.b:<assign-case>=V.t:<assign-case>, S_q.b:<comp>=nil, S_q.b:<conditional>=V.t:<conditional>, S_q.b:<mode>=V.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=V.t:<passive>, S_q.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=V.t:<progressive>, S_r.b:<assign-case>=NP_0:<case>, S_r.t:<conj>=nil, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.t:<assign-case>=S_q.b:<assign-case>, S_r.t:<assign-comp>=S_q.b:<assign-comp>, V.t:<assign-comp>=S_q.b:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<tense>=V.t:<tense>, V.t:<agr>=S_q.b:<agr>, V.b:<mode>=V_r.b:<mode>, VP_r.b:<compar>=-, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<compar>=-, VP_1.b:<mode>=V_1.t:<mode>, V_r.b:<mode>=V_1.b:<mode> !
alphaInvItVpnx1s2	S_q.b:<inv>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_2.t:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_q.b:<agr>=S_r.t:<agr>, S_q.b:<assign-case>=V.t:<assign-case>, S_q.b:<comp>=nil, S_q.b:<conditional>=V.t:<conditional>, S_q.b:<mode>=V.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=V.t:<passive>, S_q.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=V.t:<progressive>, S_r.b:<assign-case>=NP_0:<case>, S_r.t:<assign-comp>=S_q.b:<assign-comp>, V.t:<assign-comp>=S_q.b:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<tense>=V.t:<tense>, S_r.t:<assign-case>=S_q.b:<assign-case>, S_r.t:<assign-comp>=inf_nil/ind_nil, V.t:<agr>=S_q.b:<agr>, , VP_1.b:<compar>=-, VP_r.b:<compar>=-, S_r.t:<conj>=nil, P_1.t:<assign-case>=PP_1.b:<assign-case>, NP_1:<case>=PP_1.b:<assign-case>, PP_1.b:<wh>=NP_1:<wh>, V.b:<mode>=V_r.b:<mode>, V_r.b:<mode>=V_1.b:<mode>, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaInvnx0BEnx1	S_q.b:<inv>=+, S_q.b:<extracted>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=V.t:<mode>, V.t:<agr>=NP_0:<agr>, V.t:<assign-case>=NP_0:<case>, S_r.b:<assign-comp>=VP_r.t:<assign-comp>, S_r.b:<comp>=nil, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=V.t:<agr>, S_r.b:<assign-case>=V.t:<assign-case>, S_r.b:<tense>=V.t:<tense>, , , V.t:<mode>=V_r.b:<mode>, V.t:<trace>=V_r.b:<trace>, V_r.t:<mode>=VP_r.b:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=VP_1.t:<mode>, VP_r.b:<compar>=-, VP_1.b:<compar>=-, NP_1:<case>=nom/acc, S_r.t:<conj>=nil, NP_0:<gerund>=-, NP_1:<gerund>=- !
alphaInx0A1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<mode>=base, VP.t:<neg>=-, VP.t:<tense>=pres, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- , S_1.t:<control>=NP_0.t:<control>, A.t:<compar>=AP_1.b:<compar> !
alphaInx0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<mode>=base, VP.t:<neg>=-, VP.t:<tense>=pres, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphaInx0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, AP_1.b:<wh>=A.t:<wh>, VP.b:<compar>=- !
alphaInx0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphaInx0N1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<mode>=base, VP.t:<neg>=-, VP.t:<tense>=pres, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil !
alphaInx0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphaInx0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphaInx0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphaInx0Px1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc !
alphaInx0V	S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=imp, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<wh>=NP_0.t:<wh>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_0.t:<wh>=-, NP_0.t:<agr pers>=2, NP_0.t:<agr 3rdsing>=-, NP_0.t:<agr num>=plur/sing, NP_0.t:<case>=nom, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case> !
alphaInx0VAN1	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc !
alphaInx0VAN1Pnx2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaInx0VDAN1	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc !
alphaInx0VDAN1Pnx2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaInx0VDN1	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1:<agr>=NP_1.b:<agr>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0VDN1Pnx2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaInx0VN1	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc !
alphaInx0VN1Pnx2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, , S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaInx0VPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<assign-comp>=none, V.b:<mode>=base, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=imp, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, , NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vnx1	S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<wh>=NP_0.t:<wh>, , S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, NP_0.t:<wh>=-, NP_0.t:<agr pers>=2, NP_0.t:<agr 3rdsing>=-, NP_0.t:<agr num>=plur/sing, NP_0.t:<case>=nom, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.t:<tense>=pres, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc !
alphaInx0Vnx1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.t:<tense>=pres, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=-, V.b:<mode>=base !
alphaInx0Vnx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vnx1pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.t:<tense>=pres, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaInx0Vnx1s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vnx2nx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vnx2plnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=imp, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vplnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vplnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0Vpnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<assign-comp>=none, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0lVN1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0lVN1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.t:<tense>=pres, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, PP_2.b:<wh>=NP_2.t:<wh>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0lVnx2N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=imp, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaInx0nx1ARB	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=imp, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, NP_1.t:<case>=nom/acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<tense>=pres, VP.t:<mode>=base, VP.t:<neg>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, AdvP_1.b:<wh>=NP_1:<wh> !
alphaItVad1s2	S_r.b:<assign-case>=NP_0.t:<case>, VP.t:<assign-case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<passive>=-, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<progressive>=-, S_2:<extracted>=-, S_2:<comp>=that/nil, S_2:<mode>=ind, S_2.t:<assign-comp>=ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaItVnx1s2	S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, VP_1.b:<compar>=-, VP.b:<mode>=VP_1.t:<mode>, VP_1.t:<mode>=VP_1.b:<mode>, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, NP_1.t:<case>=nom/acc !
alphaItVpnx1s2	S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, P_1.t:<assign-case>=PP_1.b:<assign-case>, NP_1:<case>=PP_1.b:<assign-case>, PP_1.b:<wh>=NP_1:<wh>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaN	N.b:<compar>=- !
alphaN1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaN1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaN1VPnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaN1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1.b:<case>=N_1.t:<case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaN1lVPnx2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, P.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphaN1s0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_1.t:<wh>=-, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<gen>=N.t:<gen>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<quan>=N.t:<quan>, NP_1.b:<card>=N.t:<card>, NP_1.b:<const>=N.t:<const>, NP_1.b:<compar>=N.t:<compar>, NP_1.b:<decreas>=N.t:<decreas>, NP_1.b:<definite>=N.t:<definite>, N.t:<compar>=-, VP.b:<compar>=-, VP.b:<mode>=prep, , S_0.t:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<assign-comp>=inf_nil, S_0.t:<comp>=that/whether/for/nil !
alphaNXG	NP.b:<wh>=G.t:<wh>, NP.t:<case>=nom/acc/gen, NP.b:<compar>=-, NP.b:<super>=- !
alphaNXN	NP.b:<agr>=N.t:<agr>, NP.b:<refl>=N.t:<refl>, NP.b:<case>=N.t:<case>, NP.b:<wh>=N.t:<wh>, NP.b:<case>=nom/acc, NP.b:<pron>=N.t:<pron>, NP.b:<conj>=N.t:<conj>, NP.b:<card>=N.t:<card>, NP.b:<const>=N.t:<const>, NP.b:<quan>=N.t:<quan>, NP.b:<decreas>=N.t:<decreas>, NP.b:<definite>=N.t:<definite>, NP.b:<gen>=N.t:<gen>, NP.b:<compl>=N.t:<compl>, NP.b:<compar>=N.t:<compar>, NP.b:<super>=N.t:<super>, NP.b:<equiv>=N.t:<equiv>, N.b:<compar>=- !
alphaNXNs	NP_r.b:<wh>=N.t:<wh>, NP_r.b:<agr>=N.t:<agr>, NP_r.b:<case>=N.t:<case>, NP_r.b:<pron>=N.t:<pron>, NP_r.b:<conj>=N.t:<conj>, NP_r.b:<card>=N.t:<card>, NP_r.b:<const>=N.t:<const>, NP_r.b:<quan>=N.t:<quan>, NP_r.b:<decreas>=N.t:<decreas>, NP_r.b:<definite>=N.t:<definite>, NP_r.b:<gen>=N.t:<gen>, NP_r.b:<compar>=N.t:<compar>, NP_r.b:<equiv>=N.t:<equiv>, NP_r.b:<super>=N.t:<super>, N.b:<compar>=-, S.t:<extracted>=-, S.t:<inv>=- , S.t:<comp>=that/nil, S.t:<mode>=inf/ind !
alphaNXnxG	NP.t:<case>=nom/acc, NP_g.b:<wh>=NP.t:<wh>, NP_g.t:<case>=gen/nom/acc, NP_g.b:<compar>=-, NP_g.b:<super>=- !
alphaP	 !
alphaPDNP	NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<conj>=N.t:<conj>, NP_1.b:<const>=D.t:<const>, NP_1.b:<definite>=D.t:<definite>, NP_1.b:<quan>=D.t:<quan>, NP_1.b:<card>=D.t:<card>, NP_1.b:<gen>=D.t:<gen>, NP_1.b:<decreas>=D.t:<decreas>, NP_1.b:<wh>=D.t:<wh>, NP_1.t:<case>=nom/acc !
alphaPNP	 !
alphaPNaP	 !
alphaPP	 !
alphaPW1nx0Px1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, PP.t:<trace>=PP_1:<trace>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=prep, VP.b:<compar>=-, VP.b:<assign-case>=acc, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_q.b:<wh>=PP_1.t:<wh>, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=- !
alphaPW2nx0lVN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_2:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, PP_2.t:<trace>=PP.t:<trace>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, P_2.t:<assign-case>=PP_2.b:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, PP_2.b:<wh>=NP_2.t:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaPXAPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPXARBPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPXP	PP.b:<wh>=P.t:<wh> !
alphaPXPDNPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<conj>=N.t:<conj>, NP_1.b:<const>=D.t:<const>, NP_1.b:<definite>=D.t:<definite>, NP_1.b:<quan>=D.t:<quan>, NP_1.b:<card>=D.t:<card>, NP_1.b:<gen>=D.t:<gen>, NP_1.b:<decreas>=D.t:<decreas>, NP_1.b:<wh>=D.t:<wh>, NP_1.t:<case>=nom/acc !
alphaPXPNPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPXPNaPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPXPPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPXPnx	PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
alphaPu	 !
alphaREGnx1VA2	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<compar>=NP_1.t:<compar>, NP_1.t:<case>=acc/none/gen, VP.b:<compar>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaREGnx1VPnx2	NP_r.b:<gerund>=+, NP_r.b:<agr pers>=3, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr 3rdsing>=+, , NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<compar>=NP_1.t:<compar>, NP_1.t:<case>=acc/none/gen, VP.b:<compar>=-, VP.t:<mode>=ger, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaREInx1VA2	S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=imp, NP_1.t:<wh>=-, NP_1.t:<agr pers>=2, NP_1.t:<agr 3rdsing>=-, NP_1.t:<agr num>=plur/sing, NP_1.t:<case>=nom, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V:<punct struct>=nil, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaREInx1VPnx2	S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=imp, NP_1.t:<wh>=-, NP_1.t:<agr pers>=2, NP_1.t:<agr 3rdsing>=-, NP_1.t:<agr num>=plur/sing, NP_1.t:<case>=nom, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V:<punct struct>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaREW1nx1VA2	S_q.b:<comp>=nil, S_q.b:<extracted>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, NP_1.t:<wh>=NP.t:<wh>, NP_1.t:<trace>=NP.t:<trace>, NP_1.t:<agr>=NP.t:<agr>, NP_1.t:<case>=NP.t:<case>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaREW1nx1VPnx2	S_q.b:<comp>=nil, S_q.b:<extracted>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, NP_1.t:<wh>=NP.t:<wh>, NP_1.t:<trace>=NP.t:<trace>, NP_1.t:<agr>=NP.t:<agr>, NP_1.t:<case>=NP.t:<case>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaREW2nx1VPnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, NP:<trace>=NP:<trace>, NP:<agr>=NP:<agr>, NP:<case>=NP:<case>, NP:<wh>=NP:<wh> !
alphaREWA2VA2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=AP_2.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, AP.t:<trace>=AP_2.t:<trace>, AP.t:<wh>=AP_2.t:<wh>, AP_2.t:<wh>=+ !
alphaREnx1VA2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaREnx1VPnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaREpW2nx1VPnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<wh>=PP.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, PP.t:<trace>=PP.t:<trace> !
alphaRGnx0Vnx1A2	NP_0:<case>=acc/none/gen, NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_0:<compar>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRGnx0Vnx1Pnx2	NP_0:<case>=acc/none/gen, NP_0:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_0:<compar>, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc, , VP.t:<mode>=ger, VP.b:<compar>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRGnx1VA2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<compar>=NP_1:<compar>, NP_1:<case>=acc/none/gen, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRGnx1VA2bynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc/none/gen, NP_1:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_1:<compar>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, NP_r.b:<gerund>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRGnx1VPnx2	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_r.b:<wh>=NP_1:<wh>, NP_r.b:<compar>=NP_1:<compar>, NP_1:<case>=acc/none/gen, NP_r.b:<gerund>=+, VP.t:<mode>=ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRGnx1VPnx2bynx0	NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, NP_1:<case>=acc/none/gen, NP_1:<wh>=NP_r.b:<wh>, NP_r.b:<compar>=NP_1:<compar>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, NP_r.b:<gerund>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=acc, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, VP.t:<mode>=ger, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRInx0Vnx1A2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, NP_0.t:<wh>=-, NP_0.t:<agr pers>=2, NP_0.t:<agr 3rdsing>=-, NP_0.t:<agr num>=plur/sing, NP_0.t:<case>=nom, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRInx0Vnx1Pnx2	S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<mode>=imp, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, NP_0.t:<wh>=-, NP_0.t:<agr pers>=2, NP_0.t:<agr 3rdsing>=-, NP_0.t:<agr num>=plur/sing, NP_0.t:<case>=nom, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW0nx0Vnx1A2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, NP_0.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRW0nx0Vnx1Pnx2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, NP_0.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW0nx1VA2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRW0nx1VPnx2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW1nx0Vnx1A2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, , S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP.t:<case>=acc, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRW1nx0Vnx1Pnx2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, , S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP.t:<case>=acc, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW1nx1VA2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRW1nx1VA2bynx0	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRW1nx1VPnx2	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW1nx1VPnx2bynx0	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRW2nx0Vnx1Pnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, NP:<trace>=NP:<trace>, NP:<agr>=NP:<agr>, NP:<case>=NP:<case>, NP:<wh>=NP:<wh> !
alphaRW2nx1VPnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, NP:<trace>=NP:<trace>, NP:<agr>=NP:<agr>, NP:<case>=NP:<case>, NP:<wh>=NP:<wh> !
alphaRW2nx1VPnx2bynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, NP:<trace>=NP:<trace>, NP:<agr>=NP:<agr>, NP:<case>=NP:<case>, NP:<wh>=NP:<wh> !
alphaRWA2nx0Vnx1A2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=AP_2.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, AP.t:<trace>=AP_2.t:<trace>, AP.t:<wh>=AP_2.t:<wh>, AP_2.t:<wh>=+ !
alphaRWA2nx1VA2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=AP_2.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, AP.t:<trace>=AP_2.t:<trace>, AP.t:<wh>=AP_2.t:<wh>, AP_2.t:<wh>=+ !
alphaRWA2nx1VA2bynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=AP_2.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, AP.t:<trace>=AP_2.t:<trace>, AP.t:<wh>=AP_2.t:<wh>, AP_2.t:<wh>=+ !
alphaRnx0Vnx1A2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRnx0Vnx1Pnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRnx1VA2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRnx1VA2bynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRnx1VPnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRnx1VPnx2bynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRpW0nx1VA2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
alphaRpW0nx1VPnx2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
alphaRpW2nx0Vnx1Pnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<wh>=PP.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, PP.t:<trace>=PP.t:<trace> !
alphaRpW2nx1VPnx2	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<wh>=PP.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, PP.t:<trace>=PP.t:<trace> !
alphaRpW2nx1VPnx2bynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, S_q.b:<extracted>=+, S_q.b:<wh>=PP.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, PP.t:<trace>=PP.t:<trace> !
alphaVN	NP.b:<compar>=-, NP.b:<super>=- !
alphaW0AN1VPnx2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0AN1Vbynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaW0DAN1VPnx2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0DAN1Vbynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
alphaW0DN1VPnx2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0DN1Vbynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, D_1.t:<agr>=NP_1.b:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0N1VPnx2bynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0N1Vbynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphaW0nx0A1s1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, VP.t:<passive>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- , S_1.t:<control>=NP_0.t:<control>, S_r.t:<conj>=nil, A.t:<compar>=AP_1.b:<compar> !
alphaW0nx0APnx1	S_q.b:<comp>=nil, S_q.b:<extracted>=+, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, , S_r.t:<comp>=nil, S_r.t:<conj>=nil, , S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, VP.t:<passive>=-, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar>, NP_0:<wh>=+, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP:<trace>=NP_0.t:<trace>, NP:<wh>=NP_0.t:<wh> !
alphaW0nx0ARBPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=ecm/inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0nx0Ax1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, NP:<trace>=NP_0:<trace>, NP_0:<agr>=NP.t:<agr>, NP_0:<case>=NP.t:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, AP_1.b:<wh>=A.t:<wh>, VP.b:<compar>=-, VP.t:<passive>=- !
alphaW0nx0N1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, VP.t:<passive>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0N1s1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, VP.t:<passive>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0NPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0PNaPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.t:<conj>=nil !
alphaW0nx0PPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Pnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, VP.t:<passive>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Px1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, VP.t:<passive>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0V	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, , S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, , VP.b:<compar>=-, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP.t:<wh>=NP_0.t:<wh>, NP_0.t:<wh>=+, NP_0.t:<trace>=NP.t:<trace> , NP_0.t:<case>=NP.t:<case>, NP_0.t:<agr>=NP.t:<agr> !
alphaW0nx0VAN1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil !
alphaW0nx0VAN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0nx0VDAN1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil !
alphaW0nx0VDAN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0nx0VDN1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, S_r.t:<conj>=nil !
alphaW0nx0VDN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0nx0VN1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil !
alphaW0nx0VN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1:<case>=nom/acc, S_r.t:<conj>=nil, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphaW0nx0VPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW0nx0Vax1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vnx1	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, NP_0.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=- !
alphaW0nx0Vnx1Pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<wh>=+, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaW0nx0Vnx1pl	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vnx1pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<wh>=+, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaW0nx0Vnx1s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP.t:<trace>=NP_0.t:<trace>, NP.t:<case>=NP_0.t:<case>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<agr>=NP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vnx2nx1	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<inv>=-, NP.t:<trace>=NP_0.t:<trace>, NP.t:<case>=NP_0.t:<case>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vnx2nx1pl	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vnx2plnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vpl	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<wh>=NP_0:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vplnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vplnx2nx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0Vpnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW0nx0Vs1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.t:<conj>=nil !
alphaW0nx0lVN1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphaW0nx0lVN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_2:<wh>=PP_2.b:<wh>, NP:<trace>=NP_0.t:<trace>, NP:<agr>=NP_0.t:<agr>, NP:<case>=NP_0.t:<case>, NP:<wh>=NP_0:<wh>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0lVnx2N1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<inv>=-, NP.t:<trace>=NP_0.t:<trace>, NP.t:<case>=NP_0.t:<case>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<wh>=NP_0.t:<wh>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_2:<case>=acc, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphaW0nx0nx1ARB	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_0:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, NP:<wh>=NP_0:<wh>, NP_0:<wh>=+, NP_1.t:<case>=nom/acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, AdvP_1.b:<wh>=NP_1:<wh> !
alphaW0nx1VPbynx0	S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<control>=NP_1:<control>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP.t:<case>, PP_0.b:<wh>=NP.t:<wh>, P_0.b:<assign-case>=acc, S_q.b:<wh>=NP_0:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, V.t:<punct struct>=nil, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0nx1VPnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, NP:<case>=PP_0.b:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW0nx1Vbynx0	S_r.t:<comp>=nil, S_q.b:<extracted>=+, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<invlink>=S_q.b:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, V.t:<punct struct>=nil, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, S_r.t:<conj>=nil, PP_0.b:<wh>=NP:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0nx1Vbynx0s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP.t:<wh>=NP_0.t:<wh>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, NP:<wh>=PP_0.b:<wh>, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0nx1Vpbynx0	S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<control>=NP_1:<control>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP.t:<case>, PP_0.b:<wh>=NP.t:<wh>, P_0.b:<assign-case>=acc, S_q.b:<wh>=NP_0:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, V.t:<punct struct>=nil, NP.t:<trace>=NP_0.t:<trace>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0nx1Vplbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_0:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP.t:<agr>=NP_0:<agr>, NP.t:<case>=NP_0:<case>, NP.t:<trace>=NP_0:<trace>, NP.t:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, NP:<wh>=PP_0.b:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0nx1Vpnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, NP:<case>=PP_0.b:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW0nx2Vnx1bynx0	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP.t:<agr>=NP_0.t:<agr>, NP.t:<case>=NP_0.t:<case>, NP.t:<trace>=NP_0.t:<trace>, NP.t:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP:<case>=PP_0.b:<assign-case>, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, PP_0.b:<wh>=NP:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW0s0APnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
alphaW0s0ARBPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, VP.t:<passive>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0s0Ax1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, VP.t:<passive>=-, VP.t:<agr pers>=3, S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<wh>=+, S_0:<assign-case>=NP_0:<case>, S_0:<trace>=NP_0:<trace>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<assign-case>=acc, VP.b:<mode>=nom, S_r.t:<conj>=nil, A.t:<compar>=AP_1.b:<compar> !
alphaW0s0N1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.t:<passive>=-, S_q.b:<wh>=NP_0.t:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, S_r.t:<case>=nom, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil !
alphaW0s0NPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0.t:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0s0PNaPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.t:<passive>=-, VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0s0PPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.t:<passive>=-, VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0s0Pnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_q.b:<wh>=NP_0.t:<wh>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.t:<passive>=-, VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil !
alphaW0s0V	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , , VP.b:<compar>=-, S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, S_r.t:<conj>=nil !
alphaW0s0Vnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0.t:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil !
alphaW0s0Vs1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_q.b:<wh>=NP_0:<wh>, NP_0:<wh>=+, S_0:<assign-case>=NP_0:<case>, S_0:<trace>=NP_0:<trace>, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<mode>=inf/ind, S_0:<comp>=that/whether/for/nil, S_0:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, , VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- !
alphaW0s0Vtonx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.b:<assign-comp>=inf_nil/ind_nil, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , , S_q.b:<wh>=NP_0:<wh>, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<trace>=S_0.t:<trace>, NP_0:<wh>=+, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, S_r.t:<conj>=nil, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<assign-case>=acc !
alphaW1ARBnx0nx1ARB	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=AdvP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=nom/acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, AdvP:<trace>=AdvP_1:<trace>, AdvP:<wh>=AdvP_1.t:<wh>, AdvP_1.b:<wh>=NP_1.t:<wh>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.t:<conj>=nil !
alphaW1InvItVad1s2	Ad:<trace>=Ad_1.b:<trace>, Ad:<wh>=+, NP_0:<agr>=S.b:<agr>, S.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S.b:<assign-case>, NP_0.b:<case>=N.t:<case>, NP_0.b:<agr>=N.t:<agr>, S.t:<assign-case>=S_r.b:<assign-case>, S_r.b:<assign-case>=V.t:<assign-case>, S_2.t:<assign-comp>=ind_nil, S_2.t:<comp>=that/nil, S_2:<extracted>=-, S_2:<inv>=-, S_2:<mode>=ind, S_q.b:<assign-comp>=S_r.t:<assign-comp>, S_r.b:<assign-comp>=V.t:<assign-comp>, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_r.b:<conditional>=V.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_r.b:<passive>=V.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_r.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_r.b:<progressive>=V.t:<progressive>, S_q.b:<wh>=Ad:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<agr>=V.t:<agr>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=V.t:<mode>, S_r.b:<tense>=V.t:<tense>, , , VP_1.b:<compar>=-, VP_r.b:<compar>=-, S_r.t:<conj>=nil, V.b:<mode>=V_r.b:<mode>, V_r.b:<mode>=V_1.b:<mode>, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaW1InvItVnx1s2	NP:<agr>=NP_1.b:<agr>, NP:<case>=NP_1.b:<case>, NP:<trace>=NP_1.b:<trace>, NP:<wh>=+, NP_0:<agr>=S.b:<agr>, S.t:<agr>=S_r.b:<agr>, NP_0:<case>=S.b:<assign-case>, S.t:<assign-case>=S_r.b:<assign-case>, S_r.b:<assign-case>=V.t:<assign-case>, NP_1.t:<case>=acc/nom, S_2.t:<assign-comp>=ind_nil, S_2.t:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_q.b:<assign-comp>=S_r.t:<assign-comp>, S_r.b:<assign-comp>=V.t:<assign-comp>, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_r.b:<conditional>=V.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_r.b:<passive>=V.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_r.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_r.b:<progressive>=V.t:<progressive>, S_q.b:<wh>=NP:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<agr>=V.t:<agr>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=V.t:<mode>, S_r.b:<tense>=V.t:<tense>, , , VP_1.b:<compar>=-, VP_r.b:<compar>=-, S_r.t:<conj>=nil, V.b:<mode>=V_r.b:<mode>, V_r.b:<mode>=V_1.b:<mode>, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaW1ItVad1s2	S_r.b:<mode>=inf/ger/ppart/base, Ad:<trace>=Ad_1.b:<trace>, Ad:<wh>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_0.t:<wh>=-, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<assign-comp>=inf_nil/ind_nil, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_q.b:<wh>=Ad:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=-, VP.b:<tense>=V.t:<tense>, VP.b:<compar>=-, VP_1.b:<compar>=-, S_r.t:<conj>=nil, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaW1ItVnx1s2	S_r.b:<mode>=inf/ger/ppart/base, NP:<case>=NP_1.b:<case>, NP:<trace>=NP_1.b:<trace>, NP:<wh>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_0.t:<wh>=-, NP_1.t:<case>=nom/acc, N.t:<case>=NP_0.b:<case>, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<assign-comp>=inf_nil/ind_nil, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_q.b:<wh>=NP:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=-, VP.b:<tense>=V.t:<tense>, VP.b:<compar>=-, VP_r.b:<compar>=-, S_r.t:<conj>=nil, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphaW1nx0APnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1.t:<trace>, NP:<agr>=NP_1.t:<agr>, NP:<case>=NP_1.t:<case>, NP:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.t:<conj>=nil, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
alphaW1nx0ARBPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1.t:<trace>, NP:<agr>=NP_1.t:<agr>, NP:<case>=NP_1.t:<case>, NP:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.t:<conj>=nil !
alphaW1nx0N1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_1.t:<wh>=S_q.b:<wh>, NP_1.b:<wh>=N.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.b:<compar>=N.t:<compar>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, NP.t:<trace>=NP_1:<trace>, NP.t:<agr>=NP_1:<agr>, NP.t:<case>=NP_1:<case>, NP.t:<wh>=NP_1:<wh>, NP.t:<case>=acc, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_r.t:<conj>=nil !
alphaW1nx0NPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, VP.b:<assign-case>=acc, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.t:<conj>=nil !
alphaW1nx0PNaPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.t:<conj>=nil !
alphaW1nx0PPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.b:<control>=NP_0:<control>, S_r.t:<conj>=nil !
alphaW1nx0Pnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP.t:<case>, PP_1.b:<wh>=NP.t:<wh>, S_r.t:<conj>=nil !
alphaW1nx0VPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_q.b:<wh>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vnx1	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, , S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP.t:<case>=acc, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh> !
alphaW1nx0Vnx1Pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, NP.t:<case>=acc, NP:<trace>=NP_1.t:<trace>, NP:<agr>=NP_1.t:<agr>, NP:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaW1nx0Vnx1pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, NP.t:<case>=acc, NP:<trace>=NP_1.t:<trace>, NP:<agr>=NP_1.t:<agr>, NP:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphaW1nx0Vnx1s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<case>=NP_1.t:<case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<wh>=NP_1.t:<wh>, NP.t:<case>=acc, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vnx2nx1	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.t:<inv>=S_q.b:<inv>, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, NP.t:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vnx2nx1pl	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_1:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=NP:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vplnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_1:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, NP.t:<case>=acc, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vplnx2nx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_1:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=NP:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP:<trace>=NP_1:<trace>, NP:<agr>=NP_1:<agr>, NP:<case>=NP_1:<case>, NP:<wh>=NP_1:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vpnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_q.b:<wh>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0Vs1	S_q.b:<comp>=nil, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_1:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1:<trace>=S_1.b:<trace>, NP_1:<wh>=+, S_r.b:<tense>=VP.t:<tense>, S_1.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx0nx1ARB	S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, AdvP_1.b:<wh>=NP_1:<wh>, S_r.b:<control>=NP_0.t:<control>, S_q.b:<wh>=NP_1:<wh>, S_q.b:<extracted>=+, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.t:<comp>=nil, S_r.t:<conj>=nil, V.t:<punct struct>=nil, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh> !
alphaW1nx1V	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, , S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, , S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, , VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, , V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW1nx1VP	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP_1:<agr>=NP.t:<agr>, NP_1:<case>=NP.t:<case>, NP_1:<wh>=NP.t:<wh>, NP.t:<wh>=+, NP_1:<trace>=NP.t:<trace>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.t:<conj>=nil, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW1nx1VPbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP_1:<agr>=NP.t:<agr>, NP_1:<case>=NP.t:<case>, NP.t:<wh>=+, NP_1:<trace>=NP.t:<trace>, NP_1:<wh>=NP.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW1nx1VPnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=+, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW1nx1VPnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_1.t:<wh>=+, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW1nx1Vbynx0	S_q.b:<extracted>=+, S_q.b:<comp>=nil, S_q.b:<wh>=NP_1.t:<wh>, , S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, NP_1.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, , VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc !
alphaW1nx1Vbynx0s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=NP_1.t:<wh>, S_r.t:<comp>=nil, S_r.b:<inv>=-, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=S_r.t:<comp>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<tense>=S_r.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<case>=NP_1.t:<case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<passive>=+, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil !
alphaW1nx1Vp	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP.t:<agr>=NP.t:<agr>, NP.t:<case>=NP.t:<case>, NP.t:<wh>=NP.t:<wh>, NP.t:<wh>=+, NP.t:<trace>=NP.t:<trace>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.t:<conj>=nil, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW1nx1Vpbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP_1:<agr>=NP.t:<agr>, NP_1:<case>=NP.t:<case>, NP.t:<wh>=+, NP_1:<trace>=NP.t:<trace>, NP_1:<wh>=NP.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh> !
alphaW1nx1Vpl	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP.t:<agr>=S_r.b:<agr>, NP.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=+, NP.t:<trace>=NP_1:<trace>, NP.t:<agr>=NP_1:<agr>, NP.t:<case>=NP_1:<case>, NP.t:<wh>=NP_1:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.t:<conj>=nil !
alphaW1nx1Vplbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_1:<wh>, S_r.b:<inv>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP.t:<agr>=NP_1:<agr>, NP.t:<case>=NP_1:<case>, NP.t:<wh>=NP_1:<wh>, NP_1.t:<wh>=+, NP.t:<trace>=NP_1:<trace>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil !
alphaW1nx1Vpnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=+, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW1nx1Vpnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, S_r.t:<conj>=nil, S_q.b:<extracted>=+, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_1.t:<wh>=+, NP_2:<case>=PP.b:<assign-case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<wh>=NP_1.t:<wh>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW1nx1Vs2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<inv>=-, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=S_r.t:<comp>, S_q.b:<wh>=NP_1.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<case>=NP_1.t:<case>, NP.t:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil !
alphaW1nx1Vs2bynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_q.b:<comp>=S_r.t:<comp>, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP.t:<trace>=NP_1.t:<trace>, NP.t:<case>=NP_1.t:<case>, NP.t:<agr>=NP_1.t:<agr>, NP.t:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=+, S_q.b:<wh>=NP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil !
alphaW1nx2Vnx1	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP_1:<agr>=NP.t:<agr>, NP_1:<case>=NP.t:<case>, NP_1:<trace>=NP.t:<trace>, NP_1:<wh>=NP.t:<wh>, NP:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW1nx2Vnx1bynx0	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=NP_1:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP_1:<agr>=NP.t:<agr>, NP_1:<case>=NP.t:<case>, NP_1:<trace>=NP.t:<trace>, NP_1:<wh>=NP.t:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP_0:<case>=PP_0.b:<assign-case>, NP:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, PP_0.b:<wh>=NP_0:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0Vnx1Pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=NP.t:<case>, NP_2:<agr>=NP.t:<agr>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, NP.t:<wh>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, V.t:<passive>=-, NP_2:<case>=NP.t:<case> !
alphaW2nx0Vnx1pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=NP.t:<case>, NP_2:<agr>=NP.t:<agr>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh>, V.t:<passive>=- !
alphaW2nx0Vnx1s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_2.t:<wh>=+, NP_2.t:<case>=acc, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_2:<trace>=S_2.t:<trace>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0Vnx2nx1	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP.t:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_2:<trace>=NP.t:<trace>, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP_2:<wh>=NP.t:<wh>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0Vnx2plnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=NP:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP:<trace>=NP_2:<trace>, NP:<agr>=NP_2:<agr>, NP:<case>=NP_2:<case>, NP:<wh>=NP_2:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0Vplnx2nx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=NP:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP:<trace>=NP_2:<trace>, NP:<agr>=NP_2:<agr>, NP:<case>=NP_2:<case>, NP:<wh>=NP_2:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0lVN1Pnx2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=NP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP.t:<case>, PP_2.b:<wh>=NP.t:<wh>, NP:<trace>=NP_2:<trace>, NP:<agr>=NP_2:<agr>, NP:<case>=NP_2:<case>, NP:<wh>=NP_2:<wh>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx0lVnx2N1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_q.b:<wh>=NP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP.t:<trace>=NP_2.t:<trace>, NP.t:<agr>=NP_2.t:<agr>, NP.t:<case>=NP_2.t:<case>, NP:<wh>=NP_2:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaW2nx1VPnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, NP:<case>=PP.b:<assign-case>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<wh>=NP.t:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW2nx1VPnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, NP:<case>=PP.b:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<wh>=NP.t:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW2nx1Vpnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, NP:<case>=PP.b:<assign-case>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<wh>=NP.t:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW2nx1Vpnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, NP:<case>=PP.b:<assign-case>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<wh>=NP.t:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphaW2nx2Vnx1	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP.t:<wh>=+, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP_1:<case>=acc, S_r.t:<conj>=nil !
alphaW2nx2Vnx1bynx0	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<wh>=NP_2.t:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, NP_2:<agr>=NP.t:<agr>, NP_2:<case>=NP.t:<case>, NP.t:<wh>=+, NP_2:<trace>=NP.t:<trace>, NP_2:<wh>=NP.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, PP_0.b:<wh>=NP_0:<wh>, NP_1.t:<case>=acc !
alphaWA1nx0Ax1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, AP_1.t:<wh>=S_q.b:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, AP.t:<trace>=AP_1.t:<trace>, AP.t:<wh>=AP_1.t:<wh>, AP_1.b:<wh>=A.t:<wh>, AP_1.b:<equiv>=A.t:<equiv>, AP_1.b:<compar>=A.t:<compar>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<compar>=- !
alphaWA1nx0Vax1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, AP_1.t:<wh>=S_q.b:<wh>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<comp>=nil, S_q.b:<mode>=S_r.t:<mode>, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, AP.t:<trace>=AP_1.t:<trace>, AP.t:<wh>=AP_1.t:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphaXGnx0Vs1	NP_0:<wh>=NP_r.b:<wh>, VP.t:<mode>=ger, NP_r.b:<case>=nom/acc, NP_r.b:<agr num>=sing, NP_r.b:<agr pers>=3, NP_r.b:<agr 3rdsing>=+, S_1.t:<assign-comp>=ecm, S_1.t:<comp>=nil, S_1.t:<inv>=-, S_1.t:<extracted>=-, NP_r.b:<gerund>=+, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_0:<case>=acc/gen !
alphaXW0nx0Vs1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<wh>=S_r.t:<wh>, S_r.t:<comp>=nil, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_q.b:<wh>=NP:<wh>, NP_0:<wh>=NP:<wh>, NP:<wh>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP:<trace>=NP_0:<trace>, NP:<agr>=NP_0:<agr>, NP:<case>=NP_0:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_r.t:<conj>=nil, S_1.t:<control>=NP_0:<control>, S_1.t:<comp>=nil, S_r.b:<assign-comp>=inf_nil/ind_nil/ecm !
alphanx0A1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- , S_1.t:<control>=NP_0.t:<control>, S_r.b:<control>=NP_0.t:<control>, A.t:<compar>=AP_1.b:<compar> !
alphanx0A1s1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, S_r.b:<control>=NP_0.t:<control>, A.t:<compar>=AP_1.b:<compar>, VP.t:<mode>=inf/ger !
alphanx0APnx1	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_0:<wh>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
alphanx0APnx1-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, NP_0:<wh>=-, NP_0.t:<case>=none, VP.t:<passive>=-, VP.t:<mode>=inf/ger, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
alphanx0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control> !
alphanx0ARBPnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, VP.t:<passive>=-, VP.b:<compar>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0Ax1	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, , NP_0:<wh>=-, VP.b:<compar>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, , S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, AP_1.b:<equiv>=A.t:<equiv>, AP_1.b:<compar>=A.t:<compar>, AP_1.b:<wh>=A.t:<wh> !
alphanx0Ax1-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, NP_0:<wh>=-, VP.b:<compar>=-, VP.b:<mode>=nom, S_r.b:<agr>=VP.t:<agr>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, AP_1.b:<equiv>=A.t:<equiv>, AP_1.b:<compar>=A.t:<compar>, AP_1.b:<wh>=A.t:<wh>, VP.t:<mode>=inf/ger, NP_0.t:<wh>=-, NP_0.t:<case>=none, S_r.b:<assign-case>=NP_0.t:<case> !
alphanx0BEnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP_r.t:<assign-comp>, , VP_1.t:<mode>=VP_r.b:<mode>, VP_1.t:<mode>=VP_1.b:<mode>, S_r.b:<mode>=VP_r.t:<mode>, S_r.b:<mainv>=VP_r.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP_r.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=nom/acc, S_r.b:<agr>=VP_r.t:<agr>, S_r.b:<assign-case>=VP_r.t:<assign-case>, V.t:<passive>=-, V.t:<mainv>=-, VP_r.b:<passive>=V.t:<passive>, VP_r.b:<agr>=V.t:<agr>, VP_r.b:<assign-case>=V.t:<assign-case>, VP_r.b:<assign-comp>=V.t:<assign-comp>, VP_r.b:<mode>=V.t:<mode>, VP_r.b:<tense>=V.t:<tense>, VP_r.b:<mainv>=V.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, NP_0:<gerund>=-, NP_1:<gerund>=-, VP_r.b:<compar>=-, VP_1.b:<compar>=- !
alphanx0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc , S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control> !
alphanx0N1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0N1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1.t:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil !
alphanx0N1s1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1.t:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, VP.t:<mode>=inf/ger !
alphanx0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control> !
alphanx0NPnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<mode>=inf/ger, VP.b:<compar>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control> !
alphanx0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0:<control> !
alphanx0PNaPnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0:<control>, VP.t:<mode>=inf/ger !
alphanx0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0:<control> !
alphanx0PPnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0:<control>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<mode>=inf/ger, VP.b:<compar>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphanx0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control> !
alphanx0Pnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0.t:<case>=none, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0Px1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control> !
alphanx0Px1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0V	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_0.t:<wh>=-, VP.b:<compar>=-, , VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, V.t:<passive>=-, V.t:<punct struct>=nil !
alphanx0V-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0.t:<wh>=-, NP_0.t:<wh>=-, NP_0.t:<case>=none, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-comp>=V.t:<assign-comp>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.t:<mode>=inf/ger !
alphanx0VAN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control> !
alphanx0VAN1-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1:<case>=acc, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0VAN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphanx0VAN1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1:<case>=acc, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphanx0VDAN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control> !
alphanx0VDAN1-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.t:<mode>=inf/ger, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, NP_1:<case>=acc !
alphanx0VDAN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphanx0VDAN1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0.t:<case>=none, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, NP_1:<case>=acc, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, VP.t:<mode>=inf/ger !
alphanx0VDN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0VDN1-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<passive>=-, S_r.b:<inv>=-, D_1:<agr>=NP_1.b:<agr>, NP_1:<case>=acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=- !
alphanx0VDN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphanx0VDN1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1:<case>=acc, N_1:<case>=nom/acc, D_1:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, VP.t:<mode>=inf/ger !
alphanx0VN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control> !
alphanx0VN1-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0.t:<case>=none, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1:<case>=acc, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=inf/ger !
alphanx0VN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphanx0VN1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1:<case>=acc, N_1:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, S_r.b:<control>=NP_0.t:<control>, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, VP.t:<mode>=inf/ger !
alphanx0VPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0VPnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vax1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vnx1	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , NP_0.t:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, , VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc !
alphanx0Vnx1-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<wh>=NP_0.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<wh>=-, NP_0.t:<case>=none, NP_0.t:<agr>=S_r.b:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.t:<mode>=inf/ger, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1.t:<case>=acc !
alphanx0Vnx1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphanx0Vnx1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=-, VP.t:<mode>=inf/ger !
alphanx0Vnx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vnx1pl-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vnx1pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphanx0Vnx1pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=-, VP.t:<mode>=inf/ger !
alphanx0Vnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vnx2nx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vnx2nx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vnx2nx1pl-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vnx2plnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vnx2plnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vpl-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vplnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vplnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vplnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vplnx2nx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0Vpnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0Vpnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_0:<wh>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=VP_e.t:<compar>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0lVN1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0lVN1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_1:<case>=acc, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0lVN1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_2:<wh>=PP_2.b:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0lVN1Pnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_2:<wh>=PP_2.b:<wh>, S_r.b:<agr>=VP.t:<agr>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0lVnx2N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx0lVnx2N1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx0nx1ARB	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1.t:<case>=nom/acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control>, AdvP_1.b:<wh>=NP_1:<wh> !
alphanx0nx1ARB-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1.t:<case>=nom/acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control>, AdvP_1.b:<wh>=NP_1:<wh>, VP.t:<mode>=inf/ger !
alphanx1V	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, , VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+ !
alphanx1V-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<wh>=-, NP_1.t:<case>=none, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, VP.t:<mode>=inf/ger !
alphanx1VP	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=NP_1:<agr>, S_r.b:<assign-case>=NP_1:<case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , NP_1:<wh>=-, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, , V.t:<passive>=+, V.t:<mode>=ppart, V.t:<punct struct>=nil !
alphanx1VP-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=NP_1:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1:<wh>=-, NP_1.t:<case>=none, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-comp>=V.t:<assign-comp>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=+, V.t:<mode>=ppart, V.t:<punct struct>=nil, VP.t:<mode>=inf/ger !
alphanx1VPbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx1VPbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx1VPnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphanx1VPnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, VP.t:<mode>=inf/ger !
alphanx1VPnx2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphanx1VPnx2bynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, VP.t:<mode>=inf/ger !
alphanx1Vbynx0	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1.t:<wh>=-, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, , VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc !
alphanx1Vbynx0-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<wh>=NP_1.t:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1.t:<wh>=-, NP_1.t:<case>=none, NP_1.t:<agr>=S_r.b:<agr>, VP.t:<mode>=inf/ger, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc !
alphanx1Vp	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=NP_1:<agr>, S_r.b:<assign-case>=NP_1:<case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , NP_1:<wh>=-, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, , V.t:<passive>=+, V.t:<mode>=ppart, V.t:<punct struct>=nil !
alphanx1Vp-PRO	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<agr>=NP_1:<agr>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_1:<wh>=-, NP_0.t:<case>=none, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-comp>=V.t:<assign-comp>, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<passive>=+, V.t:<mode>=ppart, V.t:<punct struct>=nil, VP.t:<mode>=inf/ger !
alphanx1Vpbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx1Vpbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, PP_0.b:<wh>=NP_0:<wh>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx1Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx1Vpl-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx1Vplbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx1Vplbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx1Vpnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphanx1Vpnx2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, VP.t:<mode>=inf/ger !
alphanx1Vpnx2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphanx1Vpnx2bynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_1:<wh>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=-, NP_1.t:<case>=none, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+, VP.t:<mode>=inf/ger !
alphanx2VAN1P	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_2.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VAN1P-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<control>=NP_2.t:<control>, NP_2:<agr>=S_r.b:<agr>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VAN1Pbynx0	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_2.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VAN1Pbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VDAN1P	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VDAN1P-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<assign-case>=NP_2.t:<case>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VDAN1Pbynx0	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VDAN1Pbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VDN1P	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VDN1P-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<control>=NP_2.t:<control>, NP_2:<agr>=S_r.b:<agr>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, VP.t:<mode>=inf/ger !
alphanx2VDN1Pbynx0	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VDN1Pbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<control>=NP_2.t:<control>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh>, VP.t:<mode>=inf/ger !
alphanx2VN1P	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VN1P-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<assign-case>=NP_2.t:<case>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
alphanx2VN1Pbynx0	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2VN1Pbynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<control>=NP_2.t:<control>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<mode>=inf/ger, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphanx2Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_2.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx2Vnx1-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<assign-case>=NP_2.t:<case>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx2Vnx1bynx0	S_r.b:<inv>=-, S_r.b:<extracted>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_2.t:<control>, PP_0.b:<wh>=NP_0:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx2Vnx1bynx0-PRO	S_r.b:<inv>=-, S_r.b:<extracted>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<assign-case>=NP_2.t:<case>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_2.t:<case>=none, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, PP_0.b:<wh>=NP_0:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphanx2lVN1bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=S_r.b:<wh>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphanx2lVN1bynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_2.t:<case>, NP_2:<agr>=S_r.b:<agr>, NP_2:<wh>=S_r.b:<wh>, NP_2:<wh>=-, NP_2.t:<case>=none, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_2.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
alphapW0AN1VPnx2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphapW0AN1Vbynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphapW0DAN1VPnx2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphapW0DAN1Vbynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
alphapW0DN1VPnx2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphapW0DN1Vbynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<case>=N_1.t:<case>, NP_1.b:<wh>=N_1.t:<wh>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0N1VPnx2bynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
alphapW0N1Vbynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
alphapW0nx1VPbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, P_0.b:<assign-case>=acc, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, PP_0.b:<assign-case>=P_0.t:<assign-case>, , NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, PP.t:<trace>=PP_0.t:<trace>, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0nx1VPnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<agr>=VP.t:<agr>, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphapW0nx1Vbynx0	P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, , S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, PP_0.t:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0nx1Vbynx0s2	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<wh>=PP.t:<wh>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.t:<trace>=PP.t:<trace>, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0nx1Vpbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, P_0.b:<assign-case>=acc, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, PP_0.b:<assign-case>=P_0.t:<assign-case>, , NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, PP.t:<trace>=PP_0.t:<trace>, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0nx1Vplbynx0	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, P_0.b:<assign-case>=acc, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, PP_0.b:<assign-case>=P_0.t:<assign-case>, , NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, PP.t:<trace>=PP_0.t:<trace>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW0nx1Vpnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<agr>=VP.t:<agr>, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphapW0nx2VAN1Pbynx0	PP_0.b:<assign-case>=P_0.t:<assign-case>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, PP_0.t:<trace>=PP.t:<trace>, S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_2.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphapW0nx2VDAN1Pbynx0	PP_0.b:<assign-case>=P_0.t:<assign-case>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, PP_0.t:<trace>=PP.t:<trace>, S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, S_r.b:<control>=NP_2.t:<control>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphapW0nx2VDN1Pbynx0	PP_0.b:<assign-case>=P_0.t:<assign-case>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, PP_0.t:<trace>=PP.t:<trace>, S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphapW0nx2VN1Pbynx0	PP_0.b:<assign-case>=P_0.t:<assign-case>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, NP_0:<case>=PP_0.b:<assign-case>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<wh>=PP_0.t:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, PP_0.t:<trace>=PP.t:<trace>, S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<wh>=NP_2:<wh>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
alphapW0nx2Vnx1bynx0	S_q.b:<extracted>=+, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_0.t:<wh>, PP_0.b:<wh>=NP_0:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, NP_2:<agr>=VP.t:<agr>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, NP_0:<case>=PP_0.b:<assign-case>, NP_1:<case>=acc, PP_0:<trace>=PP.t:<trace>, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW1InvItVpnx1s2	PP:<trace>=PP_1.b:<trace>, PP:<wh>=+, NP_0:<agr>=S.b:<agr>, NP_0.b:<case>=N.t:<case>, NP_0.b:<agr>=N.t:<agr>, S.t:<agr>=S_r.b:<agr>, NP_0:<case>=S.b:<assign-case>, S.t:<assign-case>=S_r.b:<assign-case>, S_r.b:<assign-case>=V.t:<assign-case>, S_2.t:<assign-comp>=ind_nil, S_2.t:<comp>=that/nil, S_2:<extracted>=-, S_2:<inv>=-, S_2:<mode>=ind, S_q.b:<assign-comp>=S_r.t:<assign-comp>, S_r.b:<assign-comp>=V.t:<assign-comp>, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_r.b:<conditional>=V.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_r.b:<passive>=V.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_r.b:<perfect>=V.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_r.b:<progressive>=V.t:<progressive>, S_q.b:<wh>=PP:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<agr>=V.t:<agr>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=V.t:<mode>, S_r.b:<tense>=V.t:<tense>, , VP_1.b:<compar>=-, VP_r.b:<compar>=-, S_r.t:<conj>=nil, P_1.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, V.b:<mode>=V_r.b:<mode>, V_r.b:<mode>=V_1.b:<mode>, VP_r.b:<mode>=V_r.t:<mode>, VP_r.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphapW1ItVpnx1s2	S_r.b:<mode>=inf/ger/ppart/base, PP:<trace>=PP_1.b:<trace>, PP:<wh>=+, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_0.t:<wh>=-, N.t:<case>=NP_0.b:<case>, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_2:<extracted>=-, S_2:<mode>=ind, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<comp>=nil, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<assign-comp>=inf_nil/ind_nil, S_q.b:<comp>=nil, S_q.b:<conditional>=S_r.t:<conditional>, S_q.b:<inv>=+, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<passive>=-, S_q.b:<passive>=S_r.t:<passive>, S_q.b:<perfect>=S_r.t:<perfect>, S_q.b:<progressive>=-, S_q.b:<progressive>=S_r.t:<progressive>, S_q.b:<wh>=PP:<wh>, S_q.t:<assign-comp>=inf_nil/ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=-, VP.b:<tense>=V.t:<tense>, VP_1.b:<compar>=-, VP.b:<compar>=-, S_r.t:<conj>=nil, P_1.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
alphapW1nx0ARBPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_q.b:<wh>=PP_1.t:<wh>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, PP_1.t:<trace>=PP.t:<trace>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control> !
alphapW1nx0PNaPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_q.b:<wh>=PP_1.t:<wh>, PP_1.t:<trace>=PP.t:<trace>, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0:<control>, S_r.t:<conj>=nil !
alphapW1nx0PPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_q.b:<wh>=PP_1.t:<wh>, PP_1.t:<trace>=PP.t:<trace>, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.b:<control>=NP_0:<control> !
alphapW1nx0Pnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_q.b:<wh>=PP_1.t:<wh>, PP_1.t:<trace>=PP.t:<trace>, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control> !
alphapW1nx0VPnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, PP_1:<trace>=PP.t:<trace>, S_q.b:<wh>=PP_1:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW1nx0Vpnx1	S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, PP_1:<trace>=PP.t:<trace>, S_q.b:<wh>=PP_1:<wh>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
alphapW2nx0Vnx1Pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=PP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphapW2nx0Vnx1pnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=PP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
alphapW2nx1VPnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphapW2nx1VPnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=PP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphapW2nx1Vpnx2	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<wh>=PP_2:<wh>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphapW2nx1Vpnx2bynx0	S_r.t:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_q.b:<extracted>=+, S_q.b:<wh>=PP_2:<wh>, S_q.b:<inv>=S_r.t:<inv>, S_q.b:<inv>=S_q.b:<invlink>, S_q.b:<mode>=S_r.t:<mode>, S_q.b:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, NP_0:<case>=PP_0.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, PP_2:<trace>=PP.t:<trace>, P_0.b:<assign-case>=acc, PP_0.b:<assign-case>=P_0.t:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
alphas0APnx1	S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_0.t:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<assign-case>=acc, VP.b:<mode>=prep, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
alphas0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphas0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<mode>=inf/ind, S_0:<comp>=that/whether/for/nil, S_0:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, A.t:<compar>=AP_1.b:<compar> !
alphas0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<assign-case>=S_r.b:<assign-case>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.t:<case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas> !
alphas0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphas0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphas0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphas0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, PP_1.b:<wh>=NP_1.t:<wh> !
alphas0V	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, VP.t:<agr pers>=3, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv> !
alphas0Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, VP.t:<agr pers>=3, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc !
alphas0Vs1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<mode>=inf/ind, S_0:<comp>=that/whether/for/nil, S_0:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, , VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<agr pers>=3, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=- !
alphas0Vtonx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<agr pers>=3, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<assign-case>=acc !
betaAPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaARBPa	A_f.t:<compar>=-, A_f.t:<super>=-, A_r.b:<compar>=A_f.t:<compar>, A_r.b:<super>=+ !
betaARBPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaARBPss	S.t:<wh>=-, S.t:<extracted>=-, S.t:<inv>=-, S.t:<punct struct>=nil, S_r.b:<comp>=S_f:<comp>, S_r.b:<conj>=S_f:<conj>, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_f:<mode>=ind/imp, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh>, S_r.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaARBa	A_r.b:<wh>=Ad.t:<wh>, A.t:<wh>=-, A_r.b:<assign-comp>=A.t:<assign-comp>, A_r.b:<conj>=A.t:<conj>, A_r.b:<compar>=A.t:<compar>, A_r.b:<equiv>=A.t:<equiv>, A_r.b:<super>=A.t:<super> !
betaARBa1CONJa2	A.b:<neg>=+, , Conj:<conj>=A.b:<conj>, A_1.t:<compar>=A.b:<compar>, A_2:<compar>=A.b:<compar>, A_2:<equiv>=A.b:<equiv> !
betaARBaPa	A_f.t:<compar>=-, A_f.t:<super>=-, A_r.b:<compar>=-, A_r.b:<super>=+, A.t:<compar>=-, A.t:<super>=- !
betaARBarb	Ad_r.b:<assign-comp>=Ad_1.t:<assign-comp>, Ad_r.b:<conj>=Ad_1.t:<conj>, Ad_r.b:<compar>=Ad_1.t:<compar>, Ad_r.b:<equiv>=Ad_1.t:<equiv> !
betaARBarb1CONJarb2	Conj:<conj>=Ad_r.b:<conj> !
betaARBarbs	Ad.t:<wh>=+, S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<conj>=S_r.b:<conj>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Ad.t:<wh>= Ad_r.b:<wh>, Ad_r.t:<wh>=S_r.b:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, S.t:<inv>=+, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaARBax1CONJax2	AP.b:<neg>=+, Conj:<conj>=AP.b:<conj>, AP_1.t:<compar>=AP.b:<compar>, AP_2:<compar>=AP.b:<compar>, AP_2:<equiv>=AP.b:<equiv> !
betaARBd	D_r.b:<agr>=D_f.t:<agr>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<card>=D_f.t:<card>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<assign-comp>=D_f.t:<assign-comp>, D_f.t:<conj>=D_r.b:<conj>, D_r.b:<wh>=Ad.t:<wh> !
betaARBd1CONJd2	D.b:<neg>=+, D.b:<wh>=D_2.t:<wh>, Conj:<conj>=D.b:<conj>, D.b:<definite>=D_0.t:<definite>, D.b:<agr>=D_0.t:<agr>, D.b:<quan>=D_0.t:<quan>, D.b:<card>=D_0.t:<card>, D.b:<gen>=D_0.t:<gen>, D.b:<decreas>=D_0.t:<decreas>, D.b:<const>=D_0.t:<const>, D.b:<wh>=D_0.t:<wh>, D_0.b:<definite>=D_1.t:<definite>, D_0.b:<agr>=D_1.t:<agr>, D_0.b:<quan>=D_1.t:<quan>, D_0.b:<card>=D_1.t:<card>, D_0.b:<gen>=D_1.t:<gen>, D_0.b:<decreas>=D_1.t:<decreas>, D_0.b:<const>=D_1.t:<const>, D_0.b:<wh>=D_1.t:<wh> !
betaARBnx	NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<refl>=NP_f.t:<refl>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, Ad.t:<compar>=- !
betaARBnx1CONJnx2	NP.b:<neg>=+, NP.b:<wh>=NP_2.t:<wh>, NP.b:<case>=NP_2.t:<case>, NP.b:<case>=nom/acc, NP.b:<wh>=NP_0.t:<wh>, NP.b:<case>=NP_0.t:<case>, NP_0.b:<case>=NP_1.t:<case>, NP_0.b:<wh>=NP_1.t:<wh>, Conj:<conj>=NP.b:<conj> !
betaARBp1CONJp2	P.b:<neg>=+, P.b:<assign-case>=P_0.t:<assign-case>, P_0.b:<assign-case>=P_1.t:<assign-case>, Conj:<conj>=P.b:<conj> !
betaARBpx	PP_r.b:<assign-comp>=PP.t:<assign-comp>, PP_r.b:<conj>=PP.t:<conj> !
betaARBpx1CONJpx2	PP.b:<neg>=+, , Conj:<conj>=PP.b:<conj> !
betaARBs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<conj>=S_r.b:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Ad.t:<wh>= S_r.b:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaARBvx	VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, , VP_r.b:<conj>=VP.t:<conj>, Ad.t:<compar>=VP_r.b:<compar>, VP_r.b:<equiv>=Ad.t:<equiv>, Ad.t:<equiv>=- !
betaAn	N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<assign-comp>=N_f.t:<assign-comp>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<card>=N_f.t:<card>, N_r.b:<const>=N_f.t:<const>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<gen>=N_f.t:<gen>, N_f.t:<compar>=-, N_r.b:<compar>=A.t:<compar>, N_r.b:<equiv>=- !
betaCARBa	A_r.b:<equiv>=Ad.t:<equiv>, A_r.b:<compar>=Ad.t:<compar>, A_r.b:<wh>=A_f.t:<wh> , Ad.t:<compar>=+, A_f.t:<wh>=-, A_f.t:<compar>=-, A_f.t:<super>=- !
betaCARBarb	Ad_r.b:<conj>=Ad_f.t:<conj>, Ad_r.b:<super>=Ad.t:<super>, Ad_r.b:<equiv>=Ad.t:<equiv>, Ad_r.b:<compar>=Ad.t:<compar>, Ad_r.b:<assign-comp>=Ad_f.t:<assign-comp>, Ad.t:<compar>=+, Ad_f.t:<compar>=-, Ad_f.t:<super>=- !
betaCARBn	N_r.b:<pron>=-, N_r.b:<wh>=-, N_r.b:<definite>=-, N_r.b:<quan>=-, N_r.b:<gen>=-, N_r.b:<refl>=-, N_r.b:<compar>=+, N_r.b:<super>=-, N_r.t:<rel-clause>=-, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<case>=N_f.t:<case>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<card>=N_f.t:<card>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<const>=N_f.t:<const>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<assign-comp>=N_f.t:<assign-comp>, Ad.t:<super>=-, Ad.t:<compar>=+, Ad.t:<equiv>=N_r.b:<equiv>, N_f.t:<wh>=-, N_f.t:<gen>=-, N_f.t:<pron>=-, N_f.t:<quan>=-, N_f.t:<card>=-, N_f.t:<refl>=-, N_f.t:<const>=-, N_f.t:<super>=-, N_f.t:<compar>=-, N_f.t:<decreas>=-, N_f.t:<definite>=- !
betaCOMPs	S_r.t:<inv>=-, S_c.b:<mode>=S_r.b:<mode>, S_c.b:<comp>=Comp:<comp>, S_c.b:<inv>=-, S_r.b:<comp>=nil, S_c.b:<wh>=Comp.t:<wh>, S_r.t:<assign-comp>=S_c.b:<comp>, S_r.t:<control>=S_c.b:<control> !
betaCONJa1CONJa2	Conj_1:<conj>=A.b:<conj>, A_1.t:<compar>=A.b:<compar>, A_2:<compar>=A.b:<compar>, A_2:<equiv>=A.b:<equiv> !
betaCONJarb1CONJarb2	Conj_1:<conj>=Ad.b:<conj> !
betaCONJax1CONJax2	Conj_1:<conj>=AP.b:<conj>, AP_1.t:<compar>=AP.b:<compar>, AP_2:<compar>=AP.b:<compar>, AP_2:<equiv>=AP.b:<equiv> !
betaCONJd1CONJd2	D.b:<definite>=D_1.t:<definite>, D.b:<agr>=D_1.t:<agr>, D.b:<quan>=D_1.t:<quan>, D.b:<card>=D_1.t:<card>, D.b:<gen>=D_1.t:<gen>, D.b:<decreas>=D_1.t:<decreas>, D.b:<const>=D_1.t:<const>, D.b:<wh>=D_1.t:<wh>, D.b:<wh>=D_2.t:<wh>, Conj_1:<conj>=D.b:<conj> !
betaCONJnx1CONJnx2	NP.b:<case>=NP_1.t:<case>, NP.b:<case>=NP_2.t:<case>, NP.b:<case>=nom/acc, NP.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=NP_2.t:<wh>, Conj_1:<conj>=NP.b:<conj>, NP.b:<const>=NP_1.t:<const>, NP.b:<gen>=NP_1.t:<gen>, NP.b:<definite>=NP_1.t:<definite>, NP.b:<quan>=NP_1.t:<quan>, NP.b:<card>=NP_1.t:<card>, NP.b:<decreas>=NP_1.t:<decreas> !
betaCONJp1CONJp2	P.b:<assign-case>=P_1.t:<assign-case>, Conj_1:<conj>=P.b:<conj> !
betaCONJpx1CONJpx2	Conj_1:<conj>=PP.b:<conj> !
betaCONJs	S_c.b:<mode>=S_r.t:<mode>, S_c.b:<extracted>=S_r.t:<extracted>, S_c.b:<wh>=S_r.t:<wh>, S_c.b:<inv>=S_r.t:<inv>, S_c.b:<comp>=S_r.t:<comp>, S_r.t:<punct term>=nil , S_r.t:<punct struct>=comma/nil , S_r.t:<comp>=nil , S_r.t:<conj>=and/or/but/nil, S_c.b:<conj>=disc !
betaCONJs1CONJs2	S_1.t:<mode>=S_2.t:<mode>, S.b:<mode>=S_1.t:<mode>, S_1.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<mode>=ind/inf/ger/nom/prep/imp, Conj_1:<conj>=S.b:<conj>, S_1.t:<wh>=S_2.t:<wh>, S.b:<wh>=S_1.t:<wh>, S_1.t:<extracted>=S_2.t:<extracted>, S.b:<extracted>=S_1.t:<extracted>, S_1.t:<comp>=S_2.t:<comp>, S_1:<comp>=S.b:<comp> !
betaCnxPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<refl>=NP_f.t:<refl>, NP:<wh>=-, NP_f.t:<compar>=+, NP_f.t:<super>=-, NP_r.b:<compar>=-, NP_r.b:<super>=+, NP_f.t:<equiv>=P.t:<equiv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
betaDAarb	Ad_r.b:<assign-comp>=Ad_1.t:<assign-comp>, Ad_r.b:<conj>=Ad_1.t:<conj> !
betaDAax	 !
betaDApx	PP_r.b:<assign-comp>=PP_f.t:<assign-comp>, PP_r.b:<conj>=PP_f.t:<conj> !
betaDDnx	NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<const>=D.t:<const>, NP_r.b:<definite>=D.t:<definite>, NP_r.b:<quan>=D.t:<quan>, NP_r.b:<card>=D.t:<card>, NP_r.b:<gen>=D.t:<gen>, NP_r.b:<compl>=D.t:<compl>, NP_r.b:<decreas>=D.t:<decreas>, NP_r.b:<wh>=D.t:<wh>, NP_f.t:<rel-clause>=-, NP_f.t:<case>=nom/acc, NP_r.b:<compar>=-, NP_f.t:<gerund>=-, NP_r.b:<conj>=and/or/nil !
betaDNarb	Ad_r.b:<assign-comp>=Ad_1.t:<assign-comp>, Ad_r.b:<conj>=Ad_1.t:<conj> !
betaDNax	 !
betaDNpx	PP_r.b:<assign-comp>=PP_f.t:<assign-comp>, PP_r.b:<conj>=PP_f.t:<conj> !
betaDnx	NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<const>=D.t:<const>, NP_r.b:<definite>=D.t:<definite>, NP_r.b:<quan>=D.t:<quan>, NP_r.b:<card>=D.t:<card>, NP_r.b:<gen>=D.t:<gen>, NP_r.b:<compl>=D.t:<compl>, NP_r.b:<decreas>=D.t:<decreas>, NP_r.b:<wh>=D.t:<wh>, NP_f.t:<rel-clause>=-, NP_f.t:<gerund>=-, NP_f.t:<case>=nom/acc, NP_r.b:<compar>=-, NP_r.b:<conj>=and/or/nil !
betaEN1nx1V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=- !
betaENc1nx1V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<nocomp-mode>=inf/ger, S_r.t:<conj>=nil, S_r.t:<inv>=-, S_r.t:<mode>=inf/ger/ind, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=- !
betaENcnx1V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=- !
betaENpxnx1V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, PP_w.t:<wh>=+, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=- !
betaIVs	S_r.b:<inv>=+, S_r.b:<mode>=imp, S.b:<inv>=-, S.b:<comp>=nil, S.t:<agr>=V.b:<agr>, S_r.b:<conditional>=S.t:<conditional>, S_r.b:<perfect>=S.t:<perfect>, S_r.b:<progressive>=S.t:<progressive>, V.t:<tense>=S_r.b:<tense>, V.t:<agr>=S_r.b:<agr>, V.t:<neg>=S_r.b:<neg>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode>, V.b:<mode>=base !
betaInx0Vs1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=imp, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.t:<tense>=pres, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaIs	S.t:<comp>=nil, S.t:<wh>=S_r.b:<wh>, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S_r.b:<extracted>=S.t:<extracted>, S_r.b:<conj>=S.t:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil !
betaN0AN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaN0DAN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaN0DN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaN0N1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaN0nx0A1s1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0APnx1	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_w.t:<wh>=+, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<trace>=NP_0.b:<trace>, S_r.t:<inv>=-, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaN0nx0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<assign-case>=NP_w.t:<assign-case> !
betaN0nx0Ax1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<agr>=NP_1.t:<agr>, VP.b:<compar>=-, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0N1s1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<agr>=NP_1.t:<agr>, VP.b:<compar>=-, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0NPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Px1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<mode>=prep, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_w.t:<wh>=+, NP_w.t:<agr>=NP_0.t:<agr>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<trace>=NP_0.t:<trace>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.t:<conj>=nil, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, V.t:<passive>=-, V.t:<punct struct>=nil !
betaN0nx0VAN1	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc !
betaN0nx0VAN1Pnx2	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaN0nx0VDAN1	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc !
betaN0nx0VDAN1Pnx2	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaN0nx0VDN1	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc !
betaN0nx0VDN1Pnx2	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaN0nx0VN1	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc !
betaN0nx0VN1Pnx2	S_r.t:<mode>=inf/ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaN0nx0VPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vax1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vnx1	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_0.t:<trace>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<agr>=NP_0.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<mode>=inf/ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1:<case>=acc !
betaN0nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN0nx0Vnx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN0nx0Vnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.t:<agr>=NP_r.b:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vnx2nx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vnx2plnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vpl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vplnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vpnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0:<trace>, NP_w.t:<case>=NP_0:<case>, NP_w.t:<agr>=NP_0:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0Vs1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0lVN1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0lVN1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, , , S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0lVnx2N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_2:<case>=acc, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx0nx1ARB	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.t:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx1VPbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN0nx1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaN0nx1Vpbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx1Vplbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN0nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN0nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0APnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<inv>=-, S_r.b:<assign-case>=NP_0:<case>, S_r.b:<agr>=NP_0:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, , NP_f.b:<case>=nom/acc, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaN1nx0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<assign-case>=NP_w.t:<assign-case> !
betaN1nx0NPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0VPnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_1:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vnx1	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<mode>=ind/inf, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1.t:<case>=acc !
betaN1nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN1nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN1nx0Vnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1.t:<case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vnx2nx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vplnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx0Vpnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_1:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1V	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaN1nx1VP	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1VPbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaN1nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaN1nx1Vbynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, NP_w.t:<trace>=NP_1.t:<trace>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf/ppart, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc !
betaN1nx1Vbynx0s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vp	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vpbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vpl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vplbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vpnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaN1nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaN1nx1Vs2	NP_r.b:<wh>=NP_f.t:<wh>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<passive>=+, VP.b:<mode>=ppart, V.t:<assign-comp>=ppart_nil, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx1Vs2bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx2Vnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, NP_1:<case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.t:<mode>=ind/inf/ppart, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1s0APnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaN1s0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1s0NPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1s0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<extracted>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1s0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN1s0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN2nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaN2nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx0Vnx2plnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_2.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_2.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx0lVN1Pnx2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx0lVnx2N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN2nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN2nx1Vpnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN2nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaN2nx2VAN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, NP_2:<agr>=NP.t:<agr>, NP_2:<trace>=NP.t:<trace>, NP.t:<case>=NP_2:<case>, NP.t:<wh>=NP_2:<wh> !
betaN2nx2VAN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.b:<control>=NP_2.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaN2nx2VDAN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaN2nx2VDAN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaN2nx2VDN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaN2nx2VDN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaN2nx2VN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaN2nx2VN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaN2nx2Vnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaN2nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNEGa	A_r.b:<neg>=+, A.t:<neg>=+, A.t:<compar>=A_r.b:<compar>, A.t:<equiv>=A_r.b:<equiv>, A.t:<super>=A_r.b:<super> !
betaNEGvx	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<neg>=+, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, , VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<mode>=inf/base/ger/ppart/nom/prep/imp, VP_r.b:<compar>=- !
betaNParb	Ad_r.b:<assign-comp>=Ad_1.t:<assign-comp>, Ad_r.b:<conj>=Ad_1.t:<conj> !
betaNPax	 !
betaNPnx	NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<refl>=NP_f.t:<refl>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen> !
betaNPnx1nx0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_1.b:<trace>, PP_w.t:<case>=PP_1.b:<case>, PP_w.t:<agr>=PP_1.b:<agr>, PP_w.b:<assign-case>=P.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<assign-case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNPnx1nx0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_1.b:<trace>, PP_w.t:<case>=PP_1.b:<case>, PP_w.t:<agr>=PP_1.b:<agr>, PP_w.b:<assign-case>=P.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<assign-case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNPnx1nx0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_1.b:<trace>, PP_w.t:<case>=PP_1.b:<case>, PP_w.t:<agr>=PP_1.b:<agr>, PP_w.b:<assign-case>=P.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<assign-case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNPnx1s0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_1.b:<trace>, PP_w.t:<case>=PP_1.b:<case>, PP_w.t:<agr>=PP_1.b:<agr>, PP_w.b:<assign-case>=P.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<assign-case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNPnx2nx0lVN1Pnx2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_2.b:<trace>, PP_w.t:<case>=PP_2.b:<case>, PP_w.t:<agr>=PP_2.b:<agr>, PP_w.b:<assign-case>=P_2.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaNPpx	PP_r.b:<assign-comp>=PP_f.t:<assign-comp>, PP_r.b:<conj>=PP_f.t:<conj> !
betaNPvx	VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<conj>=VP_f.t:<conj> !
betaNbynx0nx1VPbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNbynx0nx1VPnx2bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNbynx0nx1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNbynx0nx1Vpbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNbynx0nx1Vpnx2bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_2:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNbynx0nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_2.t:<control>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0AN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNc0DAN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNc0DN1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNc0N1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNc0nx0A1s1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0APnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNc0nx0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf/ger/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Ax1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<agr>=NP_1.t:<agr>, VP.b:<compar>=-, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.t:<nocomp-mode>, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0N1s1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<agr>=NP_1.t:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0NPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<compar>=-, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Px1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/prep, S_r.t:<nocomp-mode>=inf/ger/prep, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_w.t:<agr>=NP_0.t:<agr>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<trace>=NP_0.t:<trace>, S_r.t:<nocomp-mode>=inf/ger, S_r.t:<inv>=-, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind, S_r.b:<comp>=nil, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<mode>=S_r.b:<nocomp-mode>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.t:<assign-comp>=that/inf_nil/ind_nil/ecm, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, V.t:<passive>=-, V.t:<punct struct>=nil !
betaNc0nx0VAN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNc0nx0VAN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNc0nx0VDAN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNc0nx0VDAN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNc0nx0VDN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNc0nx0VDN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNc0nx0VN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNc0nx0VN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNc0nx0VPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vax1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vnx1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNc0nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc0nx0Vnx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf/ger, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, , NP_w.t:<trace>=NP_0.t:<trace>, NP_w.t:<agr>=NP_0.t:<agr>, NP_w.t:<case>=NP_0.t:<case> !
betaNc0nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc0nx0Vnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<agr>=NP_0:<agr>, S_r.b:<assign-case>=NP_0:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.t:<agr>=NP_r.b:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vnx2nx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vnx2plnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vpl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vplnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf/ger, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_w.t:<trace>=NP_0.t:<trace>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<agr>=NP_0.t:<agr> !
betaNc0nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_1:<case>=acc, NP_2:<case>=acc, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vpnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0Vs1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0lVN1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0lVN1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, , , S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0lVnx2N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_2:<case>=acc, NP_1:<case>=acc, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx0nx1ARB	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/nom, S_r.t:<nocomp-mode>=inf/ger/nom, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.t:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx1VPbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc0nx1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNc0nx1Vpbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc0nx1Vplbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.t:<conj>=nil, , NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<trace>=NP_0.t:<trace> !
betaNc0nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc0nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0APnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNc1nx0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0VPnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_1:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Vnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_1.t:<case>=acc, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNc1nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc1nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc1nx0Vnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_1.t:<case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Vnx2plnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_2.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Vplnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, NP_r.b:<pron>=NP_f.t:<pron>, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case> !
betaNc1nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_2.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx0Vpnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_1:<wh>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1V	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ppart/ger/ind, S_r.t:<mode>=ind/inf/ger/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNc1nx1VP	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1VPbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaNc1nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaNc1nx1Vbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<compar>=-, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar> !
betaNc1nx1Vbynx0s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vp	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vpbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP.t:<agr>, S_r.b:<assign-case>=NP.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vpl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart/ger, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vplbynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf/ppart/ger, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, 	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vpnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaNc1nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP.b:<assign-case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+ !
betaNc1nx1Vs2	NP_r.b:<wh>=NP_f.t:<wh>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<passive>=+, VP.b:<mode>=ppart, V.t:<assign-comp>=ppart_nil, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<mode>=ind/inf/ger/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx1Vs2bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx2Vnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, NP_1:<case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1s0APnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNc1s0ARBPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1s0NPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1s0PNaPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<extracted>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1s0PPnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc1s0Pnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc2nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNc2nx0Vnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx0Vnx2nx1pl	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx0Vplnx2nx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx0lVN1Pnx2	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx0lVnx2N1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.b:<mode>=VP.t:<mode>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc2nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc2nx1Vpnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc2nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNc2nx2VAN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaNc2nx2VAN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<control>=NP_2.t:<control>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaNc2nx2VDAN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaNc2nx2VDAN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaNc2nx2VDN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaNc2nx2VDN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaNc2nx2VN1P	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace> !
betaNc2nx2VN1Pbynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<agr>=VP.t:<agr>, S_r.b:<comp>=nil, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, S_r.t:<mode>=inf/ger/ppart/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<trace>=NP.t:<trace>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_0.b:<wh>=NP_0:<wh> !
betaNc2nx2Vnx1	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_2.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNc2nx2Vnx1bynx0	S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, , , S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_2.t:<case>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, NP_1:<case>=acc, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, NP_w.t:<trace>=NP_2.b:<trace>, NP_w.t:<case>=NP_2.b:<case>, NP_w.t:<agr>=NP_2.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcItVad1s2	S_r.b:<assign-case>=NP_0.t:<case>, VP.t:<assign-case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<passive>=-, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<progressive>=-, S_2:<extracted>=-, S_2:<comp>=that/nil, S_2:<mode>=ind, S_2.t:<assign-comp>=ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNcItVnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, NP_1.t:<case>=nom/acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNcItVpnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_1.t:<assign-case>=PP_1.b:<assign-case>, NP_1:<case>=PP_1.b:<assign-case>, PP_1.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNcN1lVPnx2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, P.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0A1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0APnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNcnx0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode> !
betaNcnx0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.t:<nocomp-mode>, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0N1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0Px1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcnx0V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<control>=NP_0.t:<control>, NP_0.t:<wh>=-, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.t:<assign-comp>=that/for/ind_nil, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil !
betaNcnx0VAN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNcnx0VAN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNcnx0VDAN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNcnx0VDAN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNcnx0VDN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0VDN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNcnx0VN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNcnx0VN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNcnx0VPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNcnx0Vnx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNcnx0Vnx1s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx2nx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vnx2plnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vplnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vplnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vpnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0Vs1	S_r.b:<extracted>=-, S_r.b:<wh>=NP_0.t:<wh>, , S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0lVN1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0lVN1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx0lVnx2N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1VP	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1VPbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1VPnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNcnx1VPnx2bynx0	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNcnx1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vbynx0s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<mode>=ind, VP.t:<passive>=+, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vp	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vpbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<assign-case>=Comp.t:<assign-case>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vplbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, , S_r.t:<inv>=-, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vpnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNcnx1Vpnx2bynx0	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.t:<inv>=-, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNcnx1Vs2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx1Vs2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx2Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx2Vnx1bynx0	S_r.b:<inv>=-, S_r.b:<extracted>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcnx2lVN1bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNcs0APnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNcs0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<mode>=inf/ind, S_0:<comp>=that/whether/for/nil, S_0:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<compar>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0V	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNcs0Vtonx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, VP.b:<compar>=-, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<assign-case>=acc, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNn	N.t:<pron>=-, N.t:<case>=nom/acc, N_f:<pron>=-, N_f:<case>=nom/acc, N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<assign-comp>=N_f.t:<assign-comp>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, N.t:<compar>=N_r.b:<compar>, N.t:<equiv>=N_r.b:<equiv>, N.t:<super>=N_r.b:<super>, N_f.t:<compar>=-, N_f.t:<super>=- !
betaNofnx	NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<case>=NP_f.t:<case>, D.b:<wh>=NP.t:<wh>, NP_r.b:<wh>=D.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<const>=D.t:<const>, NP_r.b:<definite>=D.t:<definite>, NP_r.b:<quan>=D.t:<quan>, NP_r.b:<card>=D.t:<card>, NP_r.b:<gen>=D.t:<gen>, NP_r.b:<compl>=D.t:<compl>, NP_r.b:<decreas>=D.t:<decreas>, NP_f.t:<rel-clause>=-, NP_f.t:<gerund>=-, N.t:<agr>=NP.b:<agr>, N.t:<case>=NP.b:<case>, NP_f.t:<case>=nom/acc, N.t:<wh>=NP.b:<wh>, NP_r.b:<compar>=-, NP_f.t:<conj>=and/or/nil !
betaNpnx0VAN1	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<comp>=nil, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, PP_w:<wh>=+, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNpnx0VAN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<comp>=nil, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, PP_w:<wh>=+, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNpnx0VN1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<comp>=nil, S_r.b:<control>=NP_0:<control>, S_r.b:<extracted>=-, PP_w:<wh>=+, NP_0:<wh>=-, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNpx1nx0VPnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP_w.b:<assign-case>, NP_1:<case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_1:<wh>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpx1nx0Vpnx1	S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.t:<inv>=-, S_r.b:<inv>=-, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP_w.b:<assign-case>, NP_1:<case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_1:<wh>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpx2nx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNpx2nx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<tense>=VP.t:<tense>, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.t:<comp>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1.t:<case>=acc, NP_2:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNpx2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpx2nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP_w.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpx2nx1Vpnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpx2nx1Vpnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.t:<conj>=nil, S_r.b:<control>=NP_1.t:<control>, S_r.t:<comp>=nil, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_2:<case>=PP_w.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpxItVad1s2	S_r.b:<assign-case>=NP_0.t:<case>, VP.t:<assign-case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<passive>=-, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<progressive>=-, S_2:<extracted>=-, S_2:<comp>=that/nil, S_2:<mode>=ind, S_2.t:<assign-comp>=ind_nil, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNpxItVnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, NP_1.t:<case>=nom/acc, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNpxItVpnx1s2	S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, NP_0.t:<case>=S_r.b:<assign-case>, N.t:<case>=NP_0.b:<case>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<conditional>=VP.t:<conditional>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<progressive>=VP.t:<progressive>, VP.b:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<compar>=-, NP_0.b:<agr>=N:<agr>, NP_0.b:<wh>=N:<wh>, S_2:<extracted>=-, S_2:<mode>=ind, S_2:<assign-comp>=ind_nil, S_2:<comp>=that/nil, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P_1.t:<assign-case>=PP_1.b:<assign-case>, NP_1:<case>=PP_1.b:<assign-case>, PP_1.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, V.b:<mode>=V_1.b:<mode>, VP.b:<mode>=VP_1.t:<mode>, VP_1.b:<mode>=V_1.t:<mode> !
betaNpxN1lVPnx2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, PP_2.b:<assign-case>=P_2.t:<assign-case>, PP_2.b:<assign-case>=NP_2.t:<case>, P_2.b:<assign-case>=acc, P.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0A1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_1.t:<control>=NP_0.t:<control>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0APnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNpxnx0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil !
betaNpxnx0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, A.t:<equiv>=AP_1.b:<equiv>, VP.b:<compar>=-, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0N1s1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<assign-case>=acc, VP.b:<compar>=-, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_1.t:<assign-comp>=inf_nil, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0Px1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, VP.b:<assign-case>=acc, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxnx0V	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=acc/nom, PP_w.t:<wh>=+, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0.t:<wh>=-, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, V.t:<passive>=-, V.t:<punct struct>=nil !
betaNpxnx0VDAN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc !
betaNpxnx0VDAN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNpxnx0VDN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, NP_1.b:<compar>=N_1.t:<compar>, N_1.t:<compar>=-, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0VDN1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, D_1.t:<agr>=NP_1.b:<agr>, N_1.t:<case>=nom/acc, P_2.b:<assign-case>=acc, PP_2.b:<wh>=NP_2:<wh>, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case> !
betaNpxnx0VN1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_1.b:<agr>=N_1.t:<agr>, N_1.t:<case>=nom/acc !
betaNpxnx0VPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx1	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx1Pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNpxnx0Vnx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx1pnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=PP.b:<assign-case>, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<passive>=- !
betaNpxnx0Vnx1s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx2nx1pl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vnx2plnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vplnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vplnx2nx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, NP_2:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vpnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, P.t:<assign-case>=PP.b:<assign-case>, NP_1:<case>=PP.b:<assign-case>, PP.b:<wh>=NP_1:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0Vs1	S_r.b:<extracted>=-, S_r.b:<wh>=NP_0.t:<wh>, , S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0lVN1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0lVN1Pnx2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_1:<case>=acc, P_2.t:<assign-case>=PP_2.b:<assign-case>, NP_2:<case>=PP_2.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, P_2.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx0lVnx2N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_2:<case>=acc, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_0.t:<control>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1V	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1VP	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1VPbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1VPnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpxnx1VPnx2bynx0	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpxnx1Vbynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vbynx0s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<mode>=ind, VP.t:<passive>=+, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vp	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vpbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, V.t:<mode>=ppart, V.t:<passive>=+, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vpl	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vplbynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vpnx2	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpxnx1Vpnx2bynx0	NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, NP_f.b:<case>=nom/acc, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.b:<mode>=V.t:<mode>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP_e.b:<mainv>=-, VP_e.b:<compar>=-, VP_e.b:<mode>=base, VP_e.b:<assign-comp>=none, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, NP_2:<case>=PP.b:<assign-case>, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, PP_w.t:<wh>=+, P.t:<assign-case>=PP.b:<assign-case>, PP.b:<wh>=NP_2:<wh>, PP_0.b:<wh>=NP_0:<wh>, V.t:<mode>=ppart, V.t:<passive>=+ !
betaNpxnx1Vs2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx1Vs2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx2Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<control>=NP_2.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx2Vnx1bynx0	S_r.b:<inv>=-, S_r.b:<extracted>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_2.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxnx2lVN1bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_2:<agr>=S_r.b:<agr>, NP_2:<case>=S_r.b:<assign-case>, NP_2:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<tense>=V.t:<tense>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_0.t:<case>, P.b:<assign-case>=acc, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, S_r.b:<control>=NP_1.t:<control>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.b:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaNpxs0APnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, VP.b:<equiv>=PP_1.t:<equiv>, VP.b:<compar>=PP_1.t:<compar>, PP_1.b:<equiv>=P_1.t:<equiv>, PP_1.b:<compar>=P_1.t:<compar>, P_1.b:<equiv>=A.t:<equiv>, P_1.b:<compar>=A.t:<compar> !
betaNpxs0ARBPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<compar>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0Ax1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0:<mode>=inf/ind, S_0:<comp>=that/whether/for/nil, S_0:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=nom, VP.b:<compar>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, A.t:<compar>=AP_1.b:<compar>, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0N1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, N:<agr>=NP_1.b:<agr>, NP_1.t:<wh>=-, NP_1.b:<case>=N.t:<case>, NP_1.b:<pron>=N.t:<pron>, NP_1.b:<wh>=N.t:<wh>, NP_1.b:<compar>=N.t:<compar>, N.t:<compar>=-, N.t:<const>=NP_1.b:<const>, N.t:<gen>=NP_1.b:<gen>, N.t:<definite>=NP_1.b:<definite>, N.t:<quan>=NP_1.b:<quan>, N.t:<card>=NP_1.b:<card>, N.t:<decreas>=NP_1.b:<decreas>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0NPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0PNaPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0PPnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<extracted>=-, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0Pnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_0.t:<mode>=ind/inf, S_0.t:<comp>=that/whether/for/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<passive>=VP.t:<passive>, VP.t:<passive>=-, VP.b:<mode>=prep, PP_1.b:<assign-case>=P.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P.b:<wh>=-, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0V	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0Vnx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_1.t:<case>=acc, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNpxs0Vtonx1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, VP.b:<agr num>=sing, VP.b:<agr pers>=3, VP.b:<agr 3rdsing>=+, S_0.t:<mode>=inf/ind, S_0.t:<comp>=that/for/whether/nil, S_0.t:<assign-comp>=inf_nil, S_0.t:<inv>=-, S_0.t:<extracted>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, PP_1.b:<assign-case>=P_1.t:<assign-case>, PP_1.b:<assign-case>=NP_1.t:<case>, P_1.b:<assign-case>=acc, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaNs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=and/or/but/nil, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=NP.t:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, NP.b:<case>=N.t:<case>, NP.b:<wh>=N.t:<wh>, NP.b:<pron>=N.t:<pron>, NP.b:<conj>=N.t:<conj>, N.t:<agr>=NP.b:<agr>, N.t:<const>=NP.b:<const>, N.t:<definite>=NP.b:<definite>, N.t:<gen>=NP.b:<gen>, N.t:<decreas>=NP.b:<decreas>, N.t:<quan>=NP.b:<quan>, N.t:<card>=NP.b:<card>, N.t:<compar>=NP.b:<compar>, N.t:<equiv>=NP.b:<equiv>, N.t:<super>=NP.b:<super> !
betaNvx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, NP.b:<case>=N.t:<case>, NP.b:<wh>=N.t:<wh>, NP.b:<pron>=N.t:<pron>, NP.b:<conj>=N.t:<conj>, N.t:<agr>=NP.b:<agr>, N.t:<const>=NP.b:<const>, N.t:<definite>=NP.b:<definite>, N.t:<gen>=NP.b:<gen>, N.t:<decreas>=NP.b:<decreas>, N.t:<quan>=NP.b:<quan>, N.t:<card>=NP.b:<card>, N.t:<compar>=NP.b:<compar>, N.t:<equiv>=NP.b:<equiv>, VP.t:<compar>=- !
betaPARBPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPARBPss	S.t:<wh>=-, S.t:<extracted>=-, S.t:<inv>=-, S.t:<punct struct>=nil, S_r.b:<comp>=S_f:<comp>, S_r.b:<conj>=S_f:<conj>, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_f:<mode>=ind/imp, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh>, S_r.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPARBarb	Ad_r.b:<assign-comp>=Ad_1.t:<assign-comp>, Ad_r.b:<conj>=Ad_1.t:<conj>, Ad_r.b:<compar>=Ad_1.t:<compar>, Ad_r.b:<equiv>=Ad_1.t:<equiv>, Ad_r.b:<super>=Ad_1.t:<super> !
betaPARBd	D_r.b:<agr>=D_f.t:<agr>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<card>=D_f.t:<card>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<wh>=D_f.t:<wh>, D_r.b:<assign-comp>=D_f.t:<assign-comp>, D_f.t:<conj>=D_r.b:<conj> !
betaPARBnx	NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<refl>=NP_f.t:<refl>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_r.b:<compar>=-, NP_r.b:<super>= NP_f.t:<super> !
betaPARBpx	PP_r.b:<assign-comp>=PP.t:<assign-comp>, PP_r.b:<conj>=PP.t:<conj> !
betaPARBs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<conj>=S_r.b:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Ad_1.t:<wh>= S_r.b:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPARBvx	VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<conj>=VP.t:<conj>, VP_r.b:<compar>=-, VP_r.b:<super>=VP.t:<super> !
betaPDNPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP_2:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<conj>=N.t:<conj>, NP_1.b:<const>=D.t:<const>, NP_1.b:<definite>=D.t:<definite>, NP_1.b:<quan>=D.t:<quan>, NP_1.b:<card>=D.t:<card>, NP_1.b:<gen>=D.t:<gen>, NP_1.b:<decreas>=D.t:<decreas>, NP_1.b:<wh>=D.t:<wh>, NP_1.t:<case>=nom/acc, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPDPd	D_r.b:<agr>=D_f.t:<agr>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<card>=D_f.t:<card>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<wh>=D_f.t:<wh>, D_r.b:<assign-comp>=D_f.t:<assign-comp>, D_f.t:<conj>=D_r.b:<conj> !
betaPNPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPNaPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPNss	S.t:<wh>=-, S.t:<extracted>=-, S.t:<inv>=-, S.t:<punct struct>=nil, S_r.b:<comp>=S_f:<comp>, S_r.b:<conj>=S_f:<conj>, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_f:<mode>=ind/imp, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh>, S_r.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPPss	S.t:<wh>=-, S.t:<extracted>=-, S.t:<inv>=-, S.t:<punct struct>=nil, S_r.b:<comp>=S_f:<comp>, S_r.b:<conj>=S_f:<conj>, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_f:<mode>=ind/imp, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh>, S_r.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPUaPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, A_r.b:<punct bal>=Punct_1.t:<punct bal>, A_r.b:<punct struct>=A_f.t:<punct struct>, A_r.b:<wh>=A_f.t:<wh>, A_r.b:<assign-comp>=A_f.t:<assign-comp>, A_r.b:<compar>=A_f.t:<compar>, A_r.b:<equiv>=A_f.t:<equiv> !
betaPUarbPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, Ad_r.b:<punct bal>=Punct_1.t:<punct bal>, Ad_r.b:<punct struct>=Ad_f.t:<punct struct>, Ad_r.b:<assign-comp>=Ad_f.t:<assign-comp>, Ad_r.b:<compar>=Ad_f.t:<compar>, Ad_r.b:<equiv>=Ad_f.t:<equiv> !
betaPUdPU	Punct_1.t:<punct>=Punct_2.t:<punct>, D_r.b:<punct bal>=Punct_1.t:<punct>, D_r.b:<punct struct>=D_f.t:<punct struct>, D_r.b:<agr>=D_f.t:<agr>, D_r.b:<const>=D_f.t:<const>, D_r.b:<predet>=D_f.t:<predet>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<card>=D_f.t:<card>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<wh>=D_f.t:<wh>, D_r.b:<assign-comp>=D_f.t:<assign-comp> !
betaPUnPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, N_r.b:<punct bal>=Punct_1.t:<punct bal>, N_r.b:<punct struct>=N_f.t:<punct struct>, N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<assign-comp>=N_f.t:<assign-comp>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<predet>=N_f.t:<predet>, N_r.b:<compar>=N_f.t:<compar>, N_r.b:<equiv>=N_f.t:<equiv> !
betaPUnxPU	NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<gen>=NP_f.t:<gen>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<predet>=NP_f.t:<predet>, Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, NP_r.b:<punct struct>=NP_f.t:<punct struct>, NP_r.b:<punct bal>=Punct_1.t:<punct bal>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.t:<case>=acc/nom, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<compar>=NP_f.t:<compar>, NP_r.b:<equiv>=NP_f.t:<equiv> !
betaPUpPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, P_r.b:<punct bal>=Punct_1.t:<punct bal>, P_r.b:<punct struct>=P_f.t:<punct struct>, P_r.b:<wh>=P_f.t:<wh> !
betaPUpxPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, PP_r.b:<punct bal>=Punct_1.t:<punct bal>, PP_r.b:<punct struct>=PP_f.t:<punct struct>, PP_r.b:<wh>=PP_f.t:<wh>, PP_r.b:<assign-comp>=PP_f.t:<assign-comp>, PP_r.b:<conj>=PP_f.t:<conj> !
betaPUpxPUvx	Punct_1.t:<punct>=Punct_2.t:<punct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<compar>=- !
betaPUs	S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<conj>=and/or/but/nil, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S.t:<punct struct>=nil, Punct.t:<punct struct>= S_r.b:<punct struct>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPUsPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, S_r.b:<punct bal>=Punct_1.t:<punct bal>, S_r.b:<punct struct>=Punct_1.t:<punct struct>, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, S_r.b:<nocomp-mode>=S_f.t:<nocomp-mode> !
betaPUvPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, V_r.b:<punct bal>=Punct_1.t:<punct bal>, V_r.b:<punct struct>=V_f.t:<punct struct>, V_r.b:<mode>=V_f.t:<mode>, V_r.b:<assign-comp>=V_f.t:<assign-comp>, V_r.b:<agr>=V_f.t:<agr>, V_r.b:<tense>=V_f.t:<tense>, V_r.b:<assign-case>=V_f.t:<assign-case>, V_r.b:<mainv>=V_f.t:<mainv>, V_r.b:<passive>=V_f.t:<passive>, V_r.b:<neg>=V_f.t:<neg>, V_r.b:<contr>=V_f.t:<contr> !
betaPUvxPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, VP_r.b:<punct bal>=Punct_1.t:<punct bal>, VP_r.b:<punct struct>=VP_f.t:<punct struct>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<compar>=VP_f.t:<compar>, VP_r.b:<equiv>=VP_f.t:<equiv> !
betaPaPd	D_r.b:<agr>=D_f.t:<agr>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<card>=D_f.t:<card>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<wh>=D_f.t:<wh>, D_r.b:<assign-comp>=D_f.t:<assign-comp>, D_f.t:<conj>=D_r.b:<conj> !
betaPnxs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S.t:<conj>=S_r.b:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=NP:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP:<case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S.t:<inv>=S_r.b:<inv>, S.t:<inv>=S_r.b:<invlink>, S.t:<conj>=S_r.b:<conj>, S.t:<extracted>=S_r.b:<extracted>, S_r.b:<wh>=PP.t:<wh>, PP.b:<wh>=P.t:<wh>, S.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaPss	S.t:<wh>=-, S.t:<extracted>=-, S.t:<inv>=-, S.t:<punct struct>=nil, S_r.b:<comp>=S_f:<comp>, S_r.b:<conj>=S_f:<conj>, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_f:<mode>=ind/imp, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh>, S_r.b:<comp>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaREN1nx1VA2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.t:<mode>=ind, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaREN1nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.t:<mode>=ind, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaREN2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP.t:<trace>, NP_w.t:<case>=NP.t:<case>, NP_w.t:<agr>=NP.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.t:<mode>=ind, S_r.b:<comp>=nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRENc1nx1VA2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<nocomp-mode>=inf/ger, S_r.t:<conj>=nil, S_r.t:<inv>=-, S_r.t:<mode>=inf/ger/ind, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRENc1nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<nocomp-mode>=inf/ger, S_r.t:<conj>=nil, S_r.t:<inv>=-, S_r.t:<mode>=inf/ger/ind, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRENc2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, NP_w.t:<trace>=NP.t:<trace>, NP_w.t:<case>=NP.t:<case>, NP_w.t:<agr>=NP.t:<agr>, S_r.t:<nocomp-mode>=inf/ger, S_r.t:<conj>=nil, S_r.t:<inv>=-, S_r.t:<mode>=inf/ger/ind, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<wh>=-, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=VP.t:<agr>, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<passive>=V.t:<passive>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRENcnx1VA2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRENcnx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=nom/acc, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRENpx2nx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, NP:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP:<wh>, PP.b:<wh>=NP:<wh> !
betaRENpxnx1VA2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, PP_w.t:<wh>=+, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRENpxnx1VPnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<pron>=NP_f.t:<pron>, NP_f.b:<case>=acc/nom, PP_w.t:<wh>=+, S_r.t:<inv>=-, S_r.t:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, S_r.b:<control>=NP_1.t:<control>, NP_1.t:<agr>=S_r.b:<agr>, NP_1.t:<case>=S_r.b:<assign-case>, NP_1.t:<wh>=-, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<punct struct>=nil, V.t:<passive>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN0nx0Vnx1A2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_0.t:<trace>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<agr>=NP_0.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<mode>=inf/ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1:<case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRN0nx0Vnx1Pnx2	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_0.t:<trace>, NP_w.t:<case>=NP_0.t:<case>, NP_w.t:<agr>=NP_0.t:<agr>, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<mode>=ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, NP_1:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN0nx1VA2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRN0nx1VPnx2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN1nx0Vnx1A2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<mode>=ind/inf, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1.t:<case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRN1nx0Vnx1Pnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP_1.t:<trace>, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, S_r.t:<mode>=ind, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN1nx1VA2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRN1nx1VA2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, NP_w.t:<trace>=NP_1.t:<trace>, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf/ppart, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRN1nx1VPnx2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN1nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<case>=NP_1.t:<case>, NP_w.t:<agr>=NP_1.t:<agr>, NP_w.t:<trace>=NP_1.t:<trace>, S_r.t:<inv>=-, S_r.t:<mode>=ind, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN2nx0Vnx1Pnx2	NP_r.b:<rel-clause>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<trace>=NP.t:<trace>, NP_w.t:<case>=NP.t:<case>, NP_w.t:<agr>=NP.t:<agr>, S_r.t:<mode>=ind, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<control>=NP_0.t:<control>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, V.t:<passive>=-, V.t:<punct struct>=nil, NP_1.t:<case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN2nx1VPnx2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRN2nx1VPnx2bynx0	NP_r.b:<rel-clause>=+, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_w.t:<wh>=+, NP_w.t:<case>=NP.t:<case>, NP_w.t:<agr>=NP.t:<agr>, NP_w.t:<trace>=NP.t:<trace>, S_r.t:<inv>=-, S_r.t:<mode>=ind, S_r.t:<conj>=nil, S_r.t:<comp>=nil, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNbynx0nx1VA2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNbynx0nx1VPnx2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<mode>=ind, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<wh>=+, S_r.t:<comp>=nil, PP_w.t:<trace>=PP_0.b:<trace>, PP_w.t:<case>=PP_0.b:<case>, PP_w.t:<agr>=PP_0.b:<agr>, PP_w.b:<assign-case>=P_0.t:<assign-case>, PP_w.b:<assign-case>=NP_w.t:<case>, PP_w.b:<wh>=NP_w.t:<wh>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc0nx0Vnx1A2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNc0nx0Vnx1Pnx2	S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_0.t:<agr>=S_r.b:<agr>, NP_0.t:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<refl>=-, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc0nx1VA2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNc0nx1VPnx2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<control>=NP_1.t:<control>, VP.t:<mode>=ind, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc1nx0Vnx1A2	S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_1.t:<case>=acc, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNc1nx0Vnx1Pnx2	S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_1.t:<case>=acc, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc1nx1VA2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ppart/ger/ind, S_r.t:<mode>=ind/inf/ger/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNc1nx1VA2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<compar>=-, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNc1nx1VPnx2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ppart/ger/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc1nx1VPnx2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<compar>=-, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_1.b:<trace>, NP_w.t:<case>=NP_1.b:<case>, NP_w.t:<agr>=NP_1.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc2nx0Vnx1Pnx2	S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<agr>=NP_f.t:<agr>, NP_1.t:<case>=acc, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<punct struct>=nil, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, NP_f.b:<refl>=-, S_r.t:<conj>=nil, S_r.b:<control>=NP_0.t:<control>, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ind, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_f.b:<refl>=-, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc2nx1VPnx2	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, V.t:<punct struct>=nil, NP_f.b:<refl>=-, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ppart/ger/ind, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNc2nx1VPnx2bynx0	NP_f.t:<agr>=NP_r.b:<agr>, NP_f.t:<wh>=NP_r.b:<wh>, NP_f.t:<case>=NP_r.b:<case>, S_r.t:<inv>=-, S_r.b:<comp>=nil, S_r.b:<mode>=VP.t:<mode>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<agr>=NP_1.t:<agr>, S_r.b:<assign-case>=NP_1.t:<case>, VP.b:<passive>=+, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, V.t:<mode>=ppart, V.t:<assign-comp>=ppart_nil, V.t:<passive>=+, V.t:<punct struct>=nil, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<compar>=-, NP_f.b:<refl>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.t:<conj>=nil, NP_w.t:<trace>=NP.b:<trace>, NP_w.t:<case>=NP.b:<case>, NP_w.t:<agr>=NP.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind/ppart, S_r.t:<nocomp-mode>=ind/ger/ppart, VP.t:<assign-comp>=that/inf_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNcnx0Vnx1A2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNcnx0Vnx1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNcnx1VA2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNcnx1VA2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNcnx1VPnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, V.t:<punct struct>=nil, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNcnx1Vpnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNpx2nx0Vnx1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP:<wh>, PP.b:<wh>=NP:<wh>, NP:<case>=PP_w.b:<assign-case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betaRNpx2nx1VOnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, NP:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP:<wh>, PP.b:<wh>=NP:<wh> !
betaRNpx2nx1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, NP:<case>=PP_w.b:<assign-case>, PP_w.t:<trace>=PP.b:<trace>, PP_w.t:<case>=PP.b:<case>, PP_w.t:<agr>=PP.b:<agr>, PP_w.t:<wh>=+, P.t:<assign-case>=PP_w.b:<assign-case>, PP_w.b:<wh>=NP:<wh>, PP.b:<wh>=NP:<wh> !
betaRNpxnx0Vnx1A2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNpxnx0Vnx1Pnx2	S_r.b:<extracted>=-, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_1:<case>=acc, NP_0:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_r.b:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNpxnx1VA2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNpxnx1VA2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaRNpxnx1VOnx2bynx0	S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<extracted>=-, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, P_0.b:<assign-case>=acc, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, PP_0.b:<wh>=NP_0:<wh>, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRNpxnx1VPnx2	S_r.b:<extracted>=-, S_r.b:<mode>=VP.t:<mode>, , S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<assign-comp>=VP.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<punct struct>=nil, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, S_r.t:<mode>=ind/inf, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron>, NP_r.b:<compar>=NP_f.t:<compar>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, PP.b:<wh>=NP.t:<wh> !
betaRVA2transn	N_f:<case>=nom/acc, N_r.b:<case>=N_f:<case>, N_r.b:<agr>=N_f:<agr>, N_r.b:<wh>=N_f:<wh>, N_r.b:<pron>=N_f:<pron>, N_r.b:<conj>=N_f:<conj>, V.t:<mode>=ppart, V.t:<punct struct>=nil, VP.t:<mode>=VP.b:<mode>, VP.b:<mode>=VP.t:<mode>, VP.b:<compar>=-, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, AP_2.b:<wh>=A.t:<wh>, AP_2.b:<compar>=A.t:<compar>, AP_2.b:<equiv>=A.t:<equiv> !
betaVbynxvx	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, VP.t:<assign-comp>=ecm, V.t:<assign-case>=VP_r.b:<assign-case>, V.t:<mode>=VP_r.b:<mode>, V.t:<tense>=VP_r.b:<tense>, V.t:<mainv>=VP_r.b:<mainv>, V.t:<agr>=VP_r.b:<agr>, V.t:<neg>=VP_r.b:<neg>, V.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=-, PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, P.t:<assign-case>=acc !
betaVergativen	N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<compar>=N_f.t:<compar>, N_f.t:<compar>=-, N_f.t:<case>=nom/acc, , VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, VP.b:<mode>=VP.t:<mode>, V.t:<mode>=ger, V:<punct struct>=nil !
betaVintransn	N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<compar>=N_f.t:<compar>, N_f.t:<case>=nom/acc, N_f.t:<compar>=-, , VP.t:<mode>=VP.b:<mode>, VP.b:<compar>=-, VP.b:<mode>=V.t:<mode>, V.t:<mode>=ger, V.t:<punct struct>=nil !
betaVpxvx	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, VP.t:<assign-comp>=inf_nil/ind_nil, V.t:<assign-case>=VP_r.b:<assign-case>, V.t:<mode>=VP_r.b:<mode>, V.t:<tense>=VP_r.b:<tense>, V.t:<mainv>=VP_r.b:<mainv>, V.t:<agr>=VP_r.b:<agr>, V.t:<neg>=VP_r.b:<neg>, V.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=-, PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, P.t:<assign-case>=acc !
betaVs	S_r.b:<inv>=+, S_r.b:<mode>=ind, S.b:<inv>=-, S.b:<comp>=nil, S.t:<agr>=V.b:<agr>, S.t:<conj>=and/or/but/nil, S_r.b:<assign-case>=S.t:<assign-case>, S_r.b:<conditional>=S.t:<conditional>, S_r.b:<perfect>=S.t:<perfect>, S_r.b:<progressive>=S.t:<progressive>, V.t:<assign-case>=S_r.b:<assign-case>, V.t:<mode>=S_r.b:<mode>, V.t:<tense>=S_r.b:<tense>, V.t:<agr>=S_r.b:<agr>, V.t:<neg>=S_r.b:<neg>, V.t:<assign-case>=S.t:<assign-case>, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaVtransn	N_f:<case>=nom/acc, N_r.b:<case>=N_f:<case>, N_r.b:<agr>=N_f:<agr>, N_r.b:<wh>=N_f:<wh>, N_r.b:<pron>=N_f:<pron>, N_r.b:<conj>=N_f:<conj>, V.t:<mode>=ppart, V.t:<punct struct>=nil, VP.t:<mode>=VP.b:<mode>, VP.b:<mode>=VP.t:<mode>, VP.b:<compar>=-, N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas> !
betaVvx	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, , V.t:<assign-case>=VP_r.b:<assign-case>, V.t:<mode>=VP_r.b:<mode>, V.t:<tense>=VP_r.b:<tense>, V.t:<mainv>=VP_r.b:<mainv>, V.t:<agr>=VP_r.b:<agr>, V.t:<neg>=VP_r.b:<neg>, V.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=- !
betaVvx-adj	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, , A.t:<assign-case>=VP_r.b:<assign-case>, A.t:<mode>=VP_r.b:<mode>, A.t:<tense>=VP_r.b:<tense>, A.t:<mainv>=VP_r.b:<mainv>, A.t:<agr>=VP_r.b:<agr>, A.t:<neg>=VP_r.b:<neg>, A.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=-, VP.t:<mode>=inf, VP.t:<assign-comp>=ecm, A.b:<mode>=nom, AP.b:<equiv>=A.t:<equiv>, AP.b:<compar>=A.t:<compar> !
betaVvx-arb	VP_r.t:<mainv>=-, VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, , Ad.t:<assign-case>=VP_r.b:<assign-case>, Ad.t:<mode>=VP_r.b:<mode>, Ad.t:<tense>=VP_r.b:<tense>, Ad.t:<mainv>=VP_r.b:<mainv>, Ad.t:<agr>=VP_r.b:<agr>, Ad.t:<neg>=VP_r.b:<neg>, Ad.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=-, VP.t:<mode>=inf, VP.t:<assign-comp>=ecm, Ad.b:<mode>=nom, Ad_r.b:<equiv>=Ad.t:<equiv>, Ad_r.b:<compar>=Ad.t:<compar> !
betaVvxbynx	VP_r.b:<conditional>=VP.t:<conditional>, VP_r.b:<perfect>=VP.t:<perfect>, VP_r.b:<progressive>=VP.t:<progressive>, VP.t:<assign-comp>=ecm, V.t:<assign-case>=VP_r.b:<assign-case>, V.t:<mode>=VP_r.b:<mode>, V.t:<tense>=VP_r.b:<tense>, V.t:<mainv>=VP_r.b:<mainv>, V.t:<agr>=VP_r.b:<agr>, V.t:<neg>=VP_r.b:<neg>, V.t:<assign-comp>=VP_r.b:<assign-comp>, VP_r.b:<compar>=-, VP.t:<compar>=-, PP.b:<wh>=NP:<wh>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, P.t:<assign-case>=acc !
betaXInx0Vs1	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.t:<assign-comp>=inf_nil/ind_nil, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<comp>=nil, S_r.b:<mode>=imp, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, NP_0:<agr pers>=2, NP_0:<agr 3rdsing>=-, NP_0:<agr num>=plur/sing, NP_0:<case>=nom, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.t:<tense>=pres, VP.t:<neg>=-, VP.t:<mode>=base, VP.b:<mode>=V.t:<mode>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_1.t:<control>=NP_0.t:<control>, S_1.t:<comp>=nil !
betaXN0nx0Vs1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.t:<mode>=ind/inf, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_1.t:<comp>=nil, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_w.t:<wh>=+, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaXNc0nx0Vs1	S_r.b:<assign-comp>=VP.t:<assign-comp>, , VP.b:<compar>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.t:<inv>=-, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, S_r.b:<agr>=NP_0.t:<agr>, S_r.b:<assign-case>=NP_0.t:<case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_1.t:<comp>=nil, S_r.t:<conj>=nil, NP_w.t:<trace>=NP_0.b:<trace>, NP_w.t:<case>=NP_0.b:<case>, NP_w.t:<agr>=NP_0.b:<agr>, NP_r.b:<rel-clause>=+, S_r.t:<mode>=inf/ger/ind, S_r.t:<nocomp-mode>=inf/ger, VP.t:<assign-comp>=that/ind_nil/inf_nil/ecm, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaXNcnx0Vs1	S_r.b:<extracted>=-, S_r.b:<wh>=NP_0.t:<wh>, , S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_1.t:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_1.t:<comp>=nil, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<inv>=-, S_r.t:<mode>=ind/inf, S_r.t:<nocomp-mode>=ind, VP.t:<assign-comp>=that/for/ind_nil, S_r.b:<nocomp-mode>=S_r.b:<mode>, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaXNpxnx0Vs1	S_r.b:<extracted>=-, S_r.b:<wh>=NP_0.t:<wh>, , VP.b:<compar>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_1.t:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_1.t:<comp>=nil, S_r.t:<inv>=-, PP_w.t:<wh>=+, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_f.b:<case>=acc/nom, S_r.t:<comp>=nil, NP_r.b:<rel-clause>=+, NP_f.b:<case>=nom/acc, NP_r.b:<pron>=NP_f.t:<pron> !
betaXnx0Vs1	S_r.b:<extracted>=-, S_r.b:<wh>=NP_0.t:<wh>, , VP.b:<compar>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_r.b:<control>=NP_0.t:<control>, S_1.t:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_1.t:<comp>=nil !
betaXnx0Vs1-PRO	S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<control>=NP_0.t:<control>, S_r.b:<assign-case>=NP_0.t:<case>, S_r.b:<wh>=NP_0.t:<wh>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, VP.t:<mode>=inf/ger, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, V.t:<contr>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, S_1.t:<assign-comp>=ecm, S_1.t:<inv>=-, S_1.t:<extracted>=-, S_1.t:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_1.t:<comp>=nil !
betaa1CONJARBa2	A.b:<neg>=+, Conj:<conj>=A.b:<conj>, A_1.t:<compar>=A.b:<compar>, A_2:<compar>=A.b:<compar>, A_2:<equiv>=A.b:<equiv> !
betaa1CONJa2	Conj:<conj>=A.b:<conj>, A_1.t:<neg>=-, A_2.t:<neg>=-, A.b:<neg>=-, A_1.t:<compar>=A.b:<compar>, A_2:<compar>=A.b:<compar>, A.b:<compar>=- !
betaa1PARBPa2	Conj:<conj>=A.b:<conj>, A_1.t:<neg>=-, A_2.t:<neg>=-, A.b:<neg>=-, A_1.t:<compar>=A_2:<compar>, A_1.t:<compar>=A.b:<compar>, A_2:<equiv>=A.b:<equiv> !
betaaARB	A.t:<wh>=-, A_r.b:<assign-comp>=A.t:<assign-comp>, A_r.b:<conj>=A.t:<conj>, A_r.b:<compar>=A.t:<compar>, A_r.b:<equiv>=A.t:<equiv>, A_r.b:<super>=A.t:<super> !
betaarb1CONJARBarb2	Conj:<conj>=Ad_r.b:<conj> !
betaarb1CONJarb2	Conj:<conj>=Ad.b:<conj> !
betaarb1PARBParb2	Conj:<conj>=Ad_r.b:<conj> !
betaarbARB	Ad_r.b:<assign-comp>=Ad_0.t:<assign-comp>, Ad_r.b:<conj>=Ad_0.t:<conj>, Ad_r.b:<compar>=-, Ad_0.t:<compar>=-, Ad_r.b:<equiv>=Ad_0.t:<equiv> !
betaax1CONJARBax2	AP.b:<neg>=+, Conj:<conj>=AP.b:<conj>, AP_1.t:<compar>=AP.b:<compar>, AP_2:<compar>=AP.b:<compar>, AP_2:<equiv>=AP.b:<equiv> !
betaax1CONJax2	Conj:<conj>=AP.b:<conj>, AP_1.t:<compar>=AP.b:<compar>, AP_2:<compar>=AP.b:<compar>, AP.b:<equiv>=AP_2:<equiv> !
betaax1PARBPax2	Conj:<conj>=AP.b:<conj>, AP_1.t:<compar>=AP.b:<compar>, AP_2:<compar>=AP.b:<compar>, AP.b:<equiv>=AP_2:<equiv> !
betaaxPnx	AP_r.b:<compar>=-, AP_r.b:<super>=+, AP_f.t:<compar>=P.t:<compar>, AP_f.t:<equiv>=P.t:<equiv>, PP.b:<compar>=-, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case> !
betad1CONJARBd2	D.b:<neg>=+, D.b:<wh>=D_2.t:<wh>, Conj:<conj>=D.b:<conj>, D.b:<definite>=D_1.t:<definite>, D.b:<agr>=D_1.t:<agr>, D.b:<quan>=D_1.t:<quan>, D.b:<card>=D_1.t:<card>, D.b:<gen>=D_1.t:<gen>, D.b:<decreas>=D_1.t:<decreas>, D.b:<const>=D_1.t:<const>, D.b:<wh>=D_1.t:<wh> !
betad1CONJd2	D.b:<definite>=D_1.t:<definite>, D.b:<agr>=D_1.t:<agr>, D.b:<quan>=D_1.t:<quan>, D.b:<card>=D_1.t:<card>, D.b:<gen>=D_1.t:<gen>, D.b:<decreas>=D_1.t:<decreas>, D.b:<const>=D_1.t:<const>, D.b:<wh>=D_1.t:<wh>, D.b:<wh>=D_2.t:<wh>, Conj:<conj>=D.b:<conj> !
betadD	D_r.b:<wh>=D_f.t:<wh>, D_r.b:<decreas>=D_f.t:<decreas>, D_r.b:<card>=D_f.t:<card>, D_r.b:<quan>=D_f.t:<quan>, D_r.b:<definite>=D_f.t:<definite>, D_r.b:<gen>=D_f.t:<gen>, D_r.b:<compl>=D_f.t:<compl>, D_r.b:<const>=D_f.t:<const>, D_r.b:<agr>=D.t:<agr>, D.t:<agr num>=plur !
betan1CONJn2	N.b:<case>=N_1.t:<case>, N.b:<case>=N_2.t:<case>, N.b:<case>=nom/acc, N.b:<wh>=N_1.t:<wh>, N_1.t:<wh>=N_2.t:<wh>, Conj:<conj>=N.b:<conj>, N.b:<const>=N_1.t:<const>, N.b:<gen>=N_1.t:<gen>, N.b:<definite>=N_1.t:<definite>, N.b:<quan>=N_1.t:<quan>, N.b:<card>=N_1.t:<card>, N.b:<decreas>=N_1.t:<decreas>, N.b:<compar>=N_1.t:<compar>, N.b:<compar>=N_2:<compar>, N.b:<compar>=- !
betanARB	N_r.b:<case>=N_f.t:<case>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<assign-comp>=N_f.t:<assign-comp>, N_r.b:<pron>=N_f.t:<pron>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<conj>=N_f.t:<conj>, N_r.b:<card>=N_f.t:<card>, N_r.b:<const>=N_f.t:<const>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<compar>=N_f.t:<compar>, N_f.t:<compar>=- !
betanPUnxPU	N_r.b:<const>=N_f.t:<const>, N_r.b:<gen>=N_f.t:<gen>, N_r.b:<definite>=N_f.t:<definite>, N_r.b:<quan>=N_f.t:<quan>, N_r.b:<card>=N_f.t:<card>, N_r.b:<decreas>=N_f.t:<decreas>, N_r.b:<predet>=N_f.t:<predet>, N_r.b:<agr>=N_f.t:<agr>, N_r.b:<case>=N_f.t:<case>, N_r.b:<wh>=N_f.t:<wh>, N_r.b:<conj>=N_f.t:<conj>, N_f.t:<conj>=and/or/nil, N_f.t:<case>=acc/nom, N_f.t:<pron>=- , N_r.b:<assign-comp>=N_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, Punct_1.t:<punct contains>=N_r.b:<punct contains>, Punct_1.t:<punct struct>=N_r.b:<punct struct>, Punct_1.t:<punct bal>=N_r.b:<punct bal>, NP.t:<case>=nom/acc !
betanx0Vnx1s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betanx0Vnx1s2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0.t:<case>=none, NP_1:<case>=acc, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<mode>=V.t:<mode>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
betanx0Vs1	S_r.b:<extracted>=-, , S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, NP_0:<agr>=S_r.b:<agr>, NP_0:<case>=S_r.b:<assign-case>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betanx0Vs1-PRO	S_r.b:<extracted>=-, S_r.b:<comp>=nil, S_r.b:<inv>=-, S_r.b:<mode>=VP.t:<mode>, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<assign-case>=NP_0.t:<case>, NP_0:<agr>=S_r.b:<agr>, NP_0:<wh>=S_r.b:<wh>, NP_0:<wh>=-, NP_0.t:<case>=none, S_r.b:<tense>=VP.t:<tense>, S_r.b:<agr>=VP.t:<agr>, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, S_1.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<inv>=-, S_r.b:<control>=NP_0.t:<control>, S_r.b:<punct contains>=VP.t:<punct contains>, VP.b:<punct contains>=S_1.t:<punct contains>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
betanx1CONJARBnx2	NP.b:<neg>=+, Conj:<conj>=NP.b:<conj>, NP.b:<case>=NP_2.t:<case>, NP.b:<case>=nom/acc, NP.b:<case>=NP_1.t:<case>, NP.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=NP_2.t:<wh>, NP.b:<const>=NP_1.t:<const>, NP.b:<gen>=NP_1.t:<gen>, NP.b:<definite>=NP_1.t:<definite>, NP.b:<quan>=NP_1.t:<quan>, NP.b:<card>=NP_1.t:<card>, NP.b:<decreas>=NP_1.t:<decreas> !
betanx1CONJCONJnx2	NP.b:<case>=NP_1.t:<case>, NP.b:<wh>=NP_1.t:<wh>, NP.b:<case>=nom/acc, NP_1.t:<wh>=NP_2.t:<wh>, NP_1.t:<case>=NP_2.t:<case>, NP.b:<conj>=Conj.t:<conj>, Conj.b:<conj>=Conj_2.t:<conj> !
betanx1CONJnx2	NP.b:<case>=NP_1.t:<case>, NP.b:<case>=NP_2.t:<case>, NP.b:<case>=nom/acc, NP.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=NP_2.t:<wh>, Conj:<conj>=NP.b:<conj>, NP.b:<const>=NP_1.t:<const>, NP.b:<gen>=NP_1.t:<gen>, NP.b:<definite>=NP_1.t:<definite>, NP.b:<quan>=NP_1.t:<quan>, NP.b:<card>=NP_1.t:<card>, NP.b:<decreas>=NP_1.t:<decreas>, NP.b:<compar>=NP_1.t:<compar>, NP.b:<compar>=NP_2:<compar>, NP.b:<equiv>=NP_2:<equiv> !
betanx1PARBPnx2	NP.b:<case>=NP_1.t:<case>, NP.b:<case>=NP_2.t:<case>, NP.b:<case>=nom/acc, NP.b:<wh>=NP_1.t:<wh>, NP_1.t:<wh>=NP_2.t:<wh>, Conj:<conj>=NP.b:<conj>, NP.b:<const>=NP_1.t:<const>, NP.b:<gen>=NP_1.t:<gen>, NP.b:<definite>=NP_1.t:<definite>, NP.b:<quan>=NP_1.t:<quan>, NP.b:<card>=NP_1.t:<card>, NP.b:<decreas>=NP_1.t:<decreas> !
betanx1Vbynx0s2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<mode>=ind, VP.t:<passive>=+, VP.b:<mode>=ppart, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betanx1Vbynx0s2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.t:<mode>=ind, VP.t:<passive>=+, VP.b:<mode>=ppart, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
betanx1Vs2	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betanx1Vs2-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
betanx1Vs2bynx0	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, , S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, NP_1:<agr>=S_r.b:<agr>, NP_1:<case>=S_r.b:<assign-case>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, S_r.b:<agr>=VP.t:<agr>, S_r.b:<assign-case>=VP.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv> !
betanx1Vs2bynx0-PRO	S_r.b:<extracted>=-, S_r.b:<inv>=-, S_r.b:<assign-comp>=VP.t:<assign-comp>, S_r.b:<mode>=VP.t:<mode>, S_r.b:<comp>=nil, S_r.b:<tense>=VP.t:<tense>, S_r.b:<assign-case>=NP_1.t:<case>, NP_1:<agr>=S_r.b:<agr>, NP_1:<wh>=S_r.b:<wh>, NP_1:<wh>=-, NP_1.t:<case>=none, S_r.b:<agr>=VP.t:<agr>, VP.b:<mode>=V.t:<mode>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<tense>=V.t:<tense>, VP.b:<passive>=V.t:<passive>, VP.b:<agr>=V.t:<agr>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, V.t:<mode>=ppart, V.t:<passive>=+, S_r.b:<inv>=-, PP_0.b:<assign-case>=P_0.t:<assign-case>, PP_0.b:<assign-case>=NP_0.t:<case>, PP_0.b:<wh>=NP_0.t:<wh>, P_0.b:<assign-case>=acc, S_2.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<inv>=-, S_r.b:<control>=NP_1.t:<control>, S_r.b:<progressive>=VP.t:<progressive>, S_r.b:<perfect>=VP.t:<perfect>, S_r.b:<passive>=VP.t:<passive>, S_r.b:<mainv>=VP.t:<mainv>, VP.t:<mode>=inf/ger !
betanxAPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxARB	NP_r.b:<agr>=NP_1.t:<agr>, NP_r.b:<case>=NP_1.t:<case>, NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<conj>=NP_1.t:<conj>, NP_1.b:<case>=acc/nom, NP_r.b:<assign-comp>=NP_1.t:<assign-comp>, NP_r.b:<card>=NP_1.t:<card>, NP_r.b:<const>=NP_1.t:<const>, NP_r.b:<quan>=NP_1.t:<quan>, NP_r.b:<decreas>=NP_1.t:<decreas>, NP_r.b:<definite>=NP_1.t:<definite>, NP_r.b:<gen>=NP_1.t:<gen>, NP_1.t:<rel-clause>=NP_r.b:<rel-clause> !
betanxARBPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxARBs	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<extracted>=S_r.b:<extracted>, S_r.b:<conj>=S.t:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Ad.t:<wh>=AdvP.b:<wh>, AdvP.t:<wh>= S_r.b:<wh>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil, S.b:<comp>=nil, NP.t:<case>=nom/acc, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betanxGnx	NP.t:<case>=nom/acc, D.b:<wh>=NP.t:<wh>, D.b:<gen>=G.t:<gen>, G.b:<gen>=+, NP_r.b:<wh>=D.t:<wh>, NP_r.b:<agr>=NP_f.t:<agr>, NP_f.t:<conj>=NP_r.b:<conj>, NP_r.b:<definite>=D.t:<definite>, NP_r.b:<quan>=D.t:<quan>, NP_r.b:<card>=D.t:<card>, NP_r.b:<gen>=D.t:<gen>, NP_r.b:<compl>=D.t:<compl>, NP_r.b:<decreas>=D.t:<decreas>, NP_r.b:<case>=NP_f.t:<case>, NP_f.t:<case>=nom/acc, NP_f.t:<decreas>=-, NP_f.t:<definite>=-, NP_f.t:<card>=-, NP_f.t:<const>=-, NP_f.t:<gen>=-, NP_f.t:<quan>=-, NP_r.b:<compar>=-, NP_f.t:<gerund>=-, NP_f.t:<rel-clause>=-, NP_r.b:<conj>=and/or/nil !
betanxN	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP.b:<assign-case>=N.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP.b:<wh>=N.t:<wh>, NP.b:<pron>=N.t:<pron>, NP.b:<conj>=N.t:<conj>, N.t:<agr>=NP.b:<agr>, N.t:<const>=NP.b:<const>, N.t:<definite>=NP.b:<definite>, N.t:<gen>=NP.b:<gen>, N.t:<decreas>=NP.b:<decreas>, N.t:<quan>=NP.b:<quan>, N.t:<card>=NP.b:<card>, NP_r.b:<rel-clause>=NP_f.t:<rel-clause>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv>, N.t:<compar>=NP.b:<compar>, N.t:<equiv>=NP.b:<equiv> !
betanxP	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.b:<case>=acc/nom, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, P.t:<wh>=-, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPDNPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2.t:<case>, NP_2:<wh>=-, NP_f.b:<case>=acc/nom, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<conj>=N.t:<conj>, NP_1.b:<const>=D.t:<const>, NP_1.b:<definite>=D.t:<definite>, NP_1.b:<quan>=D.t:<quan>, NP_1.b:<card>=D.t:<card>, NP_1.b:<gen>=D.t:<gen>, NP_1.b:<decreas>=D.t:<decreas>, NP_1.b:<wh>=D.t:<wh>, NP_1.t:<case>=nom/acc, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPNPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPNaPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPUa	A.t:<punct struct>=nil, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.t:<case>=acc/nom, NP_f.t:<punct struct>=nil, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<punct contains>=Punct.t:<punct contains>  !
betanxPUnx	NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<gen>=NP_f.t:<gen>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<predet>=NP_f.t:<predet>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.t:<conj>=and/or/nil, NP_f.t:<case>=acc/nom, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<punct contains>=Punct.t:<punct contains> , NP_r.b:<punct struct>=Punct.t:<punct struct> , NP.t:<case>=nom/acc, NP.t:<pron>=-, NP_r.b:<compar>=- !
betanxPUnxPU	NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<gen>=NP_f.t:<gen>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<predet>=NP_f.t:<predet>, NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.t:<case>=acc/nom, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, Punct_1.t:<punct contains>=NP_r.b:<punct contains>, Punct_1.t:<punct struct>=NP_r.b:<punct struct>, Punct_1.t:<punct bal>=NP_r.b:<punct bal>, NP_f.t:<conj>=and/or/nil, NP.t:<case>=nom/acc, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPUs	NP.t:<pron>=-, NP.t:<case>=nom/acc, S.t:<punct struct>=nil, S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=and/or/but/nil, S.t:<extracted>=S_r.b:<extracted>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<wh>=S_r.b:<wh>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S.t:<mode>=ind/imp, Punct.t:<punct struct>=comma, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betanxPnx	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, NP:<wh>=-, NP_f.b:<case>=acc/nom, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<gerund>=NP_r.b:<gerund>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxPs	NP_r.b:<agr>=NP_f.t:<agr>, NP_r.b:<case>=NP_f.t:<case>, NP_r.b:<wh>=NP_f.t:<wh>, NP_r.b:<conj>=NP_f.t:<conj>, NP_f.b:<case>=acc/nom, NP_r.b:<assign-comp>=NP_f.t:<assign-comp>, NP_r.b:<card>=NP_f.t:<card>, NP_r.b:<const>=NP_f.t:<const>, NP_r.b:<quan>=NP_f.t:<quan>, NP_r.b:<decreas>=NP_f.t:<decreas>, NP_r.b:<definite>=NP_f.t:<definite>, NP_r.b:<gen>=NP_f.t:<gen>, S.t:<mode>=ind/prep/nom, S.t:<comp>=nil, NP_f.t:<rel-clause>=NP_r.b:<rel-clause>, NP_f.t:<compar>=NP_r.b:<compar>, NP_f.t:<equiv>=NP_r.b:<equiv> !
betanxVpus	S_r.b:<punct struct>=Punct.t:<punct struct>, Punct.t:<punct struct>=comma/dash/colon, S_1.t:<comp>=nil, S_1.t:<comp>=S_r.b:<comp>, S_1.t:<extracted>=S_r.b:<extracted>, S_1.t:<assign-comp>=S_r.b:<assign-comp>, S_1.t:<tense>=S_r.b:<tense>, S_1.t:<wh>=S_r.b:<wh>, S_1.t:<inv>=S_r.b:<inv>, S_1.t:<invlink>=S_r.b:<invlink>, S_1.t:<mode>=S_r.b:<mode>, S_1.t:<assign-case>=S_r.b:<assign-case>, S_1.t:<agr>=S_r.b:<agr>, , S.t:<inv>=-, S.t:<mode>=ind/inf, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<assign-case>=VP.t:<assign-case>, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, NP:<agr>=S.b:<agr>, NP:<case>=S.b:<assign-case>, NP:<wh>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
betanxnxARB	NP_r.b:<agr>=NP_1.t:<agr>, NP_r.b:<case>=NP_1.t:<case>, NP_r.b:<wh>=NP_1.t:<wh>, NP_r.b:<conj>=NP_1.t:<conj>, NP_1.b:<case>=acc/nom, NP_r.b:<assign-comp>=NP_1.t:<assign-comp>, NP_r.b:<card>=NP_1.t:<card>, NP_r.b:<const>=NP_1.t:<const>, NP_r.b:<quan>=NP_1.t:<quan>, NP_r.b:<decreas>=NP_1.t:<decreas>, NP_r.b:<definite>=NP_1.t:<definite>, NP_r.b:<gen>=NP_1.t:<gen>, NP_1.t:<rel-clause>=NP_r.b:<rel-clause>, NP_2.t:<case>=nom/acc !
betap1CONJARBp2	P.b:<neg>=+, P.b:<assign-case>=P_1.t:<assign-case>, Conj:<conj>=P.b:<conj> !
betap1CONJp2	P.b:<assign-case>=P_1.t:<assign-case>, Conj:<conj>=P.b:<conj> !
betap1PARBPp2	P.b:<assign-case>=P_1.t:<assign-case>, Conj:<conj>=P.b:<conj> !
betapPU	P_r.b:<wh>=P.t:<wh>, Punct:<punct>=P_r.b:<punct>, P.t:<punct struct>=nil, P_r.b:<assign-case>=P.t:<assign-case> !
betapuARBPpuvx	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar> !
betapuARBpuvx	Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<equiv>=VP.t:<equiv>, VP_r.b:<super>=VP.t:<super> !
betapuPARBPpuvx	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar> !
betapuPNpuvx	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar> !
betapuPPpuvx	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar> !
betapuPpuvx	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar> !
betapuVnxpuvx	VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=VP_r.b:<punct struct>, Punct_1.t:<punct struct>=comma/dash, S_q.t:<mode>=ind, S_q.t:<comp>=nil, S_q.b:<comp>=nil, S_q.b:<agr>=V.t:<agr>, S_q.b:<tense>=V.t:<tense>, S_q.b:<mode>=V.t:<mode>, S_q.b:<assign-case>=V:<assign-case>, S_q.b:<assign-case>=S.t:<assign-case>, S_q.b:<agr>=S.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=NP:<case>, S.b:<agr>=NP:<agr>, , VP.b:<mode>=V_i.t:<mode>, VP.b:<tense>=V_i.t:<tense>, VP.b:<mainv>=V_i.t:<mainv>, VP.b:<passive>=V_i.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive>, V.t:<trace>=V_i.t:<trace> !
betapunxARBpuvx	Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=comma/dash, VP_r.b:<punct struct>=Punct_1.t:<punct struct>, VP.t:<punct struct>=nil, VP.t:<punct bal>=nil, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, NP.t:<case>=nom/acc !
betapunxVnx1pus	S_r.b:<punct struct>=Punct.t:<punct struct>, S_1.t:<comp>=nil, S_1.t:<comp>=S_r.b:<comp>, S_1.t:<extracted>=S_r.b:<extracted>, S_1.t:<assign-comp>=S_r.b:<assign-comp>, S_1.t:<tense>=S_r.b:<tense>, S_1.t:<wh>=S_r.b:<wh>, S_1.t:<inv>=S_r.b:<inv>, S_1.t:<invlink>=S_r.b:<invlink>, S_1.t:<mode>=S_r.b:<mode>, S_1.t:<assign-case>=S_r.b:<assign-case>, S_1.t:<agr>=S_r.b:<agr>, , S.t:<inv>=-, S.t:<mode>=ind/inf, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<assign-case>=VP.t:<assign-case>, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, NP:<agr>=S.b:<agr>, NP:<case>=S.b:<assign-case>, NP:<wh>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, NP_1:<case>=acc !
betapunxVnx1puvx	VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=VP_r.b:<punct struct>, S.b:<agr>=NP.t:<agr>, S.b:<assign-case>=NP.t:<case>, NP.t:<wh>=-, , S.t:<mode>=ind, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=VP:<assign-case>, , VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive>, NP_1:<case>=acc !
betapunxVpuvx	VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=VP_r.b:<punct struct>, Punct_1.t:<punct struct>=comma/dash, S.b:<agr>=NP.t:<agr>, S.b:<assign-case>=NP.t:<case>, NP.t:<wh>=-, S.t:<mode>=ind, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=VP:<assign-case>, , VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive> !
betapx1CONJARBpx2	PP.b:<neg>=+, Conj:<conj>=PP.b:<conj> !
betapx1CONJpx2	Conj:<conj>=PP.b:<conj> !
betapx1PARBPpx2	Conj:<conj>=PP.b:<conj> !
betapxARB	PP_r.b:<assign-comp>=PP.t:<assign-comp>, PP.t:<conj>=PP_r.b:<conj> !
betas1CONJs2	S_1.t:<mode>=S_2.t:<mode>, S.b:<mode>=S_1.t:<mode>, S_1.t:<assign-comp>=inf_nil/ind_nil, S_2.t:<assign-comp>=inf_nil/ind_nil, S_1.t:<mode>=ind/inf/ger/nom/prep/imp, Conj:<conj>=S.b:<conj>, S_1.t:<wh>=S_2.t:<wh>, S.b:<wh>=S_1.t:<wh>, S_1.t:<extracted>=S_2.t:<extracted>, S.b:<extracted>=S_1.t:<extracted>, S_1.t:<comp>=S_2.t:<comp>, S.b:<comp>=S_1.t:<comp> !
betasARB	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<extracted>=S_r.b:<extracted>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<wh>=S_r.b:<wh>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr> !
betasI	S.t:<comp>=nil, S.t:<wh>=S_r.b:<wh>, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S_r.b:<extracted>=S.t:<extracted>, S_r.b:<conj>=S.t:<conj>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S_r.b:<inv>=S.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S.b:<comp>=nil !
betasPU	S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<assign-comp>=ind/ind_nil/inf_nil/that/whether/if/for, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, S_f.t:<punct term>=nil, Punct.t:<punct>= S_r.b:<punct>, S_f.t:<punct term>=nil, S_f.t:<punct bal>=nil, S_r.b:<inv>=S_f.t:<inv>, S_r.b:<invlink>=S_r.b:<inv>, S_f.b:<comp>=nil, S_r.b:<nocomp-mode>=S_f.t:<nocomp-mode> !
betasPUnx	NP.t:<case>=nom/acc, S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<extracted>=S_r.b:<extracted>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<wh>=S_r.b:<wh>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Punct.t:<punct contains>= S_r.b:<punct contains>, NP.t:<punct struct>=nil, NP.t:<conj>=and/or/but/nil, S.t:<mode>=ind/imp, S.t:<punct struct>=nil, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betasPUs	S_f:<punct struct>=nil, S_f:<mode>=ind/imp, S_1:<punct struct>=nil, S_r.b:<punct contains>=Punct:<punct contains>, S_r.b:<comp>=S_f:<comp>, S_f:<conj>=and/or/but/nil, S_r.b:<assign-comp>=S_f:<assign-comp>, S_r.b:<tense>=S_f:<tense>, S_r.b:<mode>=S_f:<mode>, S_r.b:<assign-case>=S_f:<assign-case>, S_r.b:<agr>=S_f:<agr>, S_r.b:<wh>=S_f:<wh> , S_r.b:<comp>=nil, S_1:<comp>=nil, S_r.b:<nocomp-mode>=S_f.t:<nocomp-mode> !
betasPUsPU	Punct_1.t:<punct bal>=Punct_2.t:<punct bal>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, S_r.b:<punct bal>=Punct_1.t:<punct bal>, S_r.b:<punct struct>=Punct_1.t:<punct struct>, S_f.t:<punct bal>=dquote/squote, S_f.t:<punct struct>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, S.t:<mode>=ind/imp, S.t:<comp>=nil, S.t:<punct bal>=dquote/squote, S.t:<punct struct>=nil, S_r.b:<nocomp-mode>=S_f.t:<nocomp-mode> !
betasnxARB	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<mode>=S_r.b:<mode>, S_r.b:<conj>=S.t:<conj>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<wh>=S_r.b:<wh>, S.t:<extracted>=S_r.b:<extracted>, NP.t:<case>=nom/acc !
betaspuARB	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<extracted>=S_r.b:<extracted>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<wh>=S_r.b:<wh>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash !
betaspuARBPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, S_f.t:<punct struct>=nil, S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<conj>=S_r.b:<conj>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=ind/imp, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaspuPARBPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, S_f.t:<punct struct>=nil, S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<conj>=S_r.b:<conj>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=ind/imp, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaspuPNs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, S_f.t:<punct struct>=nil, S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<conj>=S_r.b:<conj>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=ind/imp, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaspuPPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, S_f.t:<punct struct>=nil, S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<conj>=S_r.b:<conj>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=ind/imp, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaspuPnx	S.t:<comp>=nil, S.t:<comp>=S_r.b:<comp>, S.t:<conj>=S_r.b:<conj>, S.t:<extracted>=S_r.b:<extracted>, S.t:<assign-comp>=S_r.b:<assign-comp>, S.t:<tense>=S_r.b:<tense>, S.t:<wh>=S_r.b:<wh>, S.t:<inv>=S_r.b:<inv>, S.t:<invlink>=S_r.b:<invlink>, S.t:<mode>=S_r.b:<mode>, S.t:<assign-case>=S_r.b:<assign-case>, S.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, P.t:<assign-case>=PP.b:<assign-case> , PP.b:<assign-case>=NP.t:<case>, S.b:<punct struct>=nil, S.b:<punct term>=nil !
betaspuPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, S_f.t:<punct struct>=nil, S_f.t:<comp>=nil, S_f.t:<comp>=S_r.b:<comp>, S_f.t:<conj>=S_r.b:<conj>, S_f.t:<extracted>=S_r.b:<extracted>, S_f.t:<assign-comp>=S_r.b:<assign-comp>, S_f.t:<tense>=S_r.b:<tense>, S_f.t:<wh>=S_r.b:<wh>, S_f.t:<inv>=S_r.b:<inv>, S_f.t:<invlink>=S_r.b:<invlink>, S_f.t:<mode>=ind/imp, S_f.t:<mode>=S_r.b:<mode>, S_f.t:<assign-case>=S_r.b:<assign-case>, S_f.t:<agr>=S_r.b:<agr>, Punct.t:<punct struct>=comma/dash, S_r.b:<nocomp-mode>=S.t:<nocomp-mode> !
betaspuVnx	Punct.t:<punct struct>=comma/dash/colon, S_1.t:<comp>=nil, S_1.t:<comp>=S_r.b:<comp>, S_1.t:<extracted>=S_r.b:<extracted>, S_1.t:<assign-comp>=S_r.b:<assign-comp>, S_1.t:<tense>=S_r.b:<tense>, S_1.t:<wh>=S_r.b:<wh>, S_1.t:<inv>=S_r.b:<inv>, S_1.t:<invlink>=S_r.b:<invlink>, S_1.t:<mode>=S_r.b:<mode>, S_1.t:<assign-case>=S_r.b:<assign-case>, S_1.t:<agr>=S_r.b:<agr>, , S_q.t:<mode>=ind, S_q.t:<comp>=nil, S_q.b:<comp>=nil, S_q.b:<agr>=V.t:<agr>, S_q.b:<tense>=V.t:<tense>, S_q.b:<mode>=V.t:<mode>, S_q.b:<assign-case>=V:<assign-case>, S_q.b:<assign-case>=S.t:<assign-case>, S_q.b:<agr>=S.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=NP:<case>, S.b:<agr>=NP:<agr>, , VP.b:<mode>=V_i.t:<mode>, VP.b:<tense>=V_i.t:<tense>, VP.b:<mainv>=V_i.t:<mainv>, VP.b:<passive>=V_i.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive>, V.t:<trace>=V_i.t:<trace> !
betaspunxV	S_r.b:<punct struct>=Punct.t:<punct struct>, Punct.t:<punct struct>=comma/dash, S_1.t:<comp>=nil, S_1.t:<comp>=S_r.b:<comp>, S_1.t:<extracted>=S_r.b:<extracted>, S_1.t:<assign-comp>=S_r.b:<assign-comp>, S_1.t:<tense>=S_r.b:<tense>, S_1.t:<wh>=S_r.b:<wh>, S_1.t:<inv>=S_r.b:<inv>, S_1.t:<invlink>=S_r.b:<invlink>, S_1.t:<mode>=S_r.b:<mode>, S_1.t:<assign-case>=S_r.b:<assign-case>, S_1.t:<agr>=S_r.b:<agr>, , S.t:<inv>=-, S.t:<mode>=ind, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<assign-case>=VP.t:<assign-case>, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, NP:<agr>=S.b:<agr>, NP:<case>=S.b:<assign-case>, NP:<wh>=-, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=- !
betaspunxVnx1	S_1.t:<comp>=nil, S_1.t:<comp>=S_r.b:<comp>, S_1.t:<extracted>=S_r.b:<extracted>, S_1.t:<assign-comp>=S_r.b:<assign-comp>, S_1.t:<tense>=S_r.b:<tense>, S_1.t:<wh>=S_r.b:<wh>, S_1.t:<inv>=S_r.b:<inv>, S_1.t:<invlink>=S_r.b:<invlink>, S_1.t:<mode>=S_r.b:<mode>, S_1.t:<assign-case>=S_r.b:<assign-case>, S_1.t:<agr>=S_r.b:<agr>, , S.t:<inv>=-, S.t:<mode>=ind, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<assign-case>=VP.t:<assign-case>, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, NP:<agr>=S.b:<agr>, NP:<case>=S.b:<assign-case>, VP.b:<agr>=V.t:<agr>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<compar>=-, VP.b:<passive>=V.t:<passive>, V.t:<passive>=-, NP_1:<case>=acc !
betavPU	V_r.b:<passive>=V.t:<passive>, V.t:<contr>=V_r.b:<contr>, V_r.b:<agr>=V.t:<agr>, V_r.b:<assign-case>=V.t:<assign-case>, V_r.b:<assign-comp>=V.t:<assign-comp>, V_r.b:<mode>=V.t:<mode>, V_r.b:<tense>=V.t:<tense>, V_r.b:<mainv>=V.t:<mainv>, V.t:<refl>=V_r.b:<refl>, V.t:<punct struct>=nil, Punct:<punct struct>=V_r.b:<punct struct>, Punct:<punct contains>=V_r.b:<punct contains> !
betavpuVnxpu	V_r.b:<tense>=V_f.t:<tense>, V_r.b:<mode>=V_f.t:<mode>, V_r.b:<agr>=V_f.t:<agr>, V_r.b:<assign-case>=V_f.t:<assign-case>, V_r.b:<assign-comp>=V_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=V_r.b:<punct struct>, Punct_1.t:<punct struct>=comma/dash, S_q.t:<mode>=ind, S_q.t:<comp>=nil, S_q.b:<comp>=nil, S_q.b:<agr>=V.t:<agr>, S_q.b:<tense>=V.t:<tense>, S_q.b:<mode>=V.t:<mode>, S_q.b:<assign-case>=V:<assign-case>, S_q.b:<assign-case>=S.t:<assign-case>, S_q.b:<agr>=S.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=NP:<case>, S.b:<agr>=NP:<agr>, VP.b:<mode>=V_i.t:<mode>, VP.b:<tense>=V_i.t:<tense>, VP.b:<mainv>=V_i.t:<mainv>, VP.b:<passive>=V_i.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive>, V.t:<trace>=V_i.t:<trace> !
betavpunxVpu	V_r.b:<tense>=V_f.t:<tense>, V_r.b:<mode>=V_f.t:<mode>, V_r.b:<agr>=V_f.t:<agr>, V_r.b:<assign-case>=V_f.t:<assign-case>, V_r.b:<assign-comp>=V_f.t:<assign-comp>, Punct_1.t:<punct struct>=Punct_2.t:<punct struct>, Punct_1.t:<punct struct>=V_r.b:<punct struct>, Punct_1.t:<punct struct>=comma/dash, S.b:<agr>=NP.t:<agr>, S.b:<assign-case>=NP.t:<case>, NP.t:<wh>=-, S.t:<mode>=ind, S.t:<comp>=nil, S.b:<comp>=nil, S.b:<agr>=VP.t:<agr>, S.b:<tense>=VP.t:<tense>, S.b:<mode>=VP.t:<mode>, S.b:<assign-case>=VP:<assign-case>, , VP.b:<agr>=V.t:<agr>, VP.b:<assign-comp>=V.t:<assign-comp>, VP.b:<assign-case>=V.t:<assign-case>, VP.b:<mode>=V.t:<mode>, VP.b:<tense>=V.t:<tense>, VP.b:<mainv>=V.t:<mainv>, VP.b:<passive>=V.t:<passive>, VP.b:<compar>=-, V.t:<passive>=-, V:<assign-comp>=V.t:<assign-comp>, V:<mode>=V.t:<mode>, V:<tense>=V.t:<tense>, V:<passive>=V.t:<passive> !
betavxAPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxARB	VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<conj>=VP.t:<conj>, VP_r.b:<compar>=Ad.t:<compar>, VP_r.b:<equiv>=Ad.t:<equiv>, VP.t:<mainv>=+ !
betavxARBPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxARBPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, VP_r.b:<conj>=VP_f:<conj>, VP_f:<mode>=ind/imp, VP_r.b:<mode>=VP_f:<mode>, VP_f:<mode>=ind/imp, VP_r.b:<assign-comp>=VP_f:<assign-comp>, VP_r.b:<agr>=VP_f:<agr>, VP_r.b:<tense>=VP_f:<tense>, VP_r.b:<assign-case>=VP_f:<assign-case>, VP_r.b:<passive>=VP_f:<passive>, VP_f.t:<compar>=-, VP_r.b:<compar>=VP_f.t:<compar>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxDA	VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<passive>=VP_f.t:<passive>, VP_r.b:<conj>=VP_f.t:<conj>, VP.t:<mainv>=+ !
betavxDN	VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<passive>=VP_f.t:<passive>, VP_r.b:<conj>=VP_f.t:<conj>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxN	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+, VP_r.b:<compar>=-, NP.b:<case>=N.t:<case>, NP.b:<wh>=N.t:<wh>, NP.b:<pron>=N.t:<pron>, NP.b:<conj>=N.t:<conj>, N.t:<agr>=NP.b:<agr>, N.t:<const>=NP.b:<const>, N.t:<definite>=NP.b:<definite>, N.t:<gen>=NP.b:<gen>, N.t:<decreas>=NP.b:<decreas>, N.t:<quan>=NP.b:<quan>, N.t:<card>=NP.b:<card> !
betavxNP	VP_r.b:<mode>=VP_f.t:<mode>, VP_r.b:<agr>=VP_f.t:<agr>, VP_r.b:<tense>=VP_f.t:<tense>, VP_r.b:<assign-comp>=VP_f.t:<assign-comp>, VP_r.b:<assign-case>=VP_f.t:<assign-case>, VP_r.b:<passive>=VP_f.t:<passive>, VP_r.b:<conj>=VP_f.t:<conj>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxNPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P_1.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxP	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, VP.t:<conj>=VP_r.b:<conj>, P.b:<wh>=PP.b:<wh>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPARB	VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<conj>=VP.t:<conj>, VP_r.b:<compar>=-, VP_r.b:<super>= VP.t:<super>, VP.t:<mainv>=+ !
betavxPARBPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxPARBPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, VP_r.b:<conj>=VP_f:<conj>, VP_f:<mode>=ind/imp, VP_r.b:<mode>=VP_f:<mode>, VP_f:<mode>=ind/imp, VP_r.b:<assign-comp>=VP_f:<assign-comp>, VP_r.b:<agr>=VP_f:<agr>, VP_r.b:<tense>=VP_f:<tense>, VP_r.b:<assign-case>=VP_f:<assign-case>, VP_r.b:<passive>=VP_f:<passive>, VP_f.t:<compar>=-, VP_r.b:<compar>=VP_f.t:<compar>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxPDNPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP_2.t:<case>, NP_1.b:<agr>=N.t:<agr>, NP_1.b:<case>=N.t:<case>, NP_1.b:<conj>=N.t:<conj>, NP_1.b:<const>=D.t:<const>, NP_1.b:<definite>=D.t:<definite>, NP_1.b:<quan>=D.t:<quan>, NP_1.b:<card>=D.t:<card>, NP_1.b:<gen>=D.t:<gen>, NP_1.b:<decreas>=D.t:<decreas>, NP_1.b:<wh>=D.t:<wh>, NP_1.t:<case>=nom/acc, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPNPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPNaPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPNs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, VP_r.b:<conj>=VP_f:<conj>, VP_f:<mode>=ind/imp, VP_r.b:<mode>=VP_f:<mode>, VP_f:<mode>=ind/imp, VP_r.b:<assign-comp>=VP_f:<assign-comp>, VP_r.b:<agr>=VP_f:<agr>, VP_r.b:<tense>=VP_f:<tense>, VP_r.b:<assign-case>=VP_f:<assign-case>, VP_r.b:<passive>=VP_f:<passive>, VP_f.t:<compar>=-, VP_r.b:<compar>=VP_f.t:<compar>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxPPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP.t:<compar>=-, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, VP_r.b:<conj>=VP_f:<conj>, VP_f:<mode>=ind/imp, VP_r.b:<mode>=VP_f:<mode>, VP_f:<mode>=ind/imp, VP_r.b:<assign-comp>=VP_f:<assign-comp>, VP_r.b:<agr>=VP_f:<agr>, VP_r.b:<tense>=VP_f:<tense>, VP_r.b:<assign-case>=VP_f:<assign-case>, VP_r.b:<passive>=VP_f:<passive>, VP_f.t:<compar>=-, VP_r.b:<compar>=VP_f.t:<compar>, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxPnx	VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<passive>=VP.t:<passive>, PP.b:<assign-case>=P.t:<assign-case>, PP.b:<assign-case>=NP.t:<case>, VP_r.b:<conj>=VP.t:<conj>, VP.t:<compar>=P.t:<compar>, VP.t:<equiv>=P.t:<equiv>, VP_r.b:<compar>=-, VP_r.b:<mainv>=VP.t:<mainv>, VP.t:<mainv>=+ !
betavxPs	S.t:<inv>=-, S.t:<wh>=-, S.t:<extracted>=-, S.t:<punct struct>=nil, VP_r.b:<conj>=VP_f:<conj>, VP_f:<mode>=ind/imp, VP_r.b:<mode>=VP_f:<mode>, VP_f:<mode>=ind/imp, VP_r.b:<assign-comp>=VP_f:<assign-comp>, VP_r.b:<agr>=VP_f:<agr>, VP_r.b:<tense>=VP_f:<tense>, VP_r.b:<assign-case>=VP_f:<assign-case>, VP_r.b:<passive>=VP_f:<passive>, P.t:<compar>=VP_f.t:<compar>, P.t:<equiv>=VP_f.t:<equiv>, VP_r.b:<compar>=-, VP_r.b:<mainv>=VP_f.t:<mainv>, VP.t:<mainv>=+ !
betavxnxARB	VP_r.b:<agr>=VP.t:<agr>, VP_r.b:<mode>=VP.t:<mode>, VP_r.b:<mainv>=VP.t:<mainv>, VP_r.b:<tense>=VP.t:<tense>, VP_r.b:<assign-comp>=VP.t:<assign-comp>, VP_r.b:<assign-case>=VP.t:<assign-case>, VP_r.b:<passive>=VP.t:<passive>, VP_r.b:<conj>=VP.t:<conj>, VP_r.b:<compar>=VP.t:<compar>, VP_r.b:<equiv>=VP.t:<equiv>, VP_r.b:<super>=VP.t:<super>, VP.t:<mainv>=+, NP.t:<case>=nom/acc !
